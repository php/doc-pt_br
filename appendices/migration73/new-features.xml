<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b37727abaf0e731a05c516fd85b44e86f4bf5c75 Maintainer: leonardolara Status: ready --><!-- CREDITS: marcosmarcolin,leonardolara -->

<sect1 xml:id="migration73.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Novas Funcionalidades</title>

 <sect2 xml:id="migration73.new-features.core">
  <title>Núcleo do PHP</title>

  <sect3 xml:id="migration73.new-features.core.heredoc">
   <title>Sintaxe Heredoc e Nowdoc mais flexível</title>

   <para>
    O marcador de fechamento para strings doc não precisa mais ser seguido por
    ponto-e-vírgula ou nova linha. Além disso, o marcador de fechamento pode ser recuado, caso em
    que o recuo será retirado de todas as linhas na string do documento.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.destruct-reference">
   <title>A desconstrução de array suporta atribuições de referência</title>

   <para>
    A desconstrução de array agora suporta atribuições de referência usando a sintaxe
    <literal>[&amp;$a, [$b, &amp;$c]] = $d</literal> O mesmo também é suportado
    para <function>list</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.instanceof-literals">
   <title>O operador Instanceof aceita Literais</title>

   <para>
    <literal>instanceof</literal> agora permite literais como o primeiro operando, caso em
    que o resultado é sempre &false;.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.compileerror">
   <title>Exceção CompileError em vez de alguns Erros de Compilação</title>

   <para>
    Uma nova exceção <classname>CompileError</classname> foi adicionada, da
    qual <classname>ParseError</classname> herda. Um pequeno número de
    erros de compilação agora lançará um <classname>CompileError</classname>
    em vez de gerar um fatal error. Atualmente, isso afeta apenas erros de compilação
    que podem ser lançados por <function>token_get_all</function> no modo
    <constant>TOKEN_PARSE</constant>, mas mais erros podem ser convertidos
    no futuro.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.trailing-commas">
   <title>Vírgulas à direita são permitidas em chamadas</title>

   <para>
    Agora são permitidas vírgulas à direita em chamadas de função e método.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.argon2id">
   <title>Suporte Argon2id</title>

   <para>
    O argumento de configuração <option role="configure">--with-password-argon2[=dir]</option>
    agora fornece suporte para os hashes Argon2i e Argon2id nas funções
    <function>password_hash</function>, <function>password_verify</function>,
    <function>password_get_info</function> e
    <function>password_needs_rehash</function>. As senhas podem ser hash e
    verificadas usando a constante <constant>PASSWORD_ARGON2ID</constant>.
    O suporte para Argon2i e Argon2id nas funções <function>password_*</function>
    agora requer que o PHP seja vinculado à biblioteca de referência libargon2 ≥
    20161029.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.fpm">
  <title>FastCGI Process Manager</title>

  <para>
   Novas opções foram adicionadas para personalizar o log do FPM:
   <variablelist>
    <varlistentry>
     <term><literal>log_limit</literal></term>
     <listitem>
      <simpara>
       Esta opção global pode ser usada para definir o limite de log para a
       linha registrada, o que permite registrar mensagens com mais de 1024 caracteres
       sem quebrar. Ele também corrige vários problemas de empacotamento.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>log_buffering</literal></term>
     <listitem>
      <simpara>
       Esta opção global permite um registro experimental sem buffer extra.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>decorate_workers_output</literal></term>
     <listitem>
      <simpara>
       Esta opção de pool permite desativar a decoração de saída para a saída dos workers
       quando <literal>catch_workers_output</literal> estiver ativado.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.bc">
  <title>Funções BC Math</title>

  <para>
   <function>bcscale</function> agora também pode ser usado como getter para
   recuperar a escala atual em uso.
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.ldap">
  <title>Lightweight Directory Access Protocol</title>

  <para>
   Suporte completo para controles LDAP foi adicionado às funções de consulta <link
   linkend="book.ldap">LDAP</link> e
   <function>ldap_parse_result</function>:
   <itemizedlist>
    <listitem>
     <simpara>
      Um parâmetro <literal>$controls</literal> para enviar controles para
      o servidor em <function>ldap_add</function>,
      <function>ldap_mod_replace</function>, <function>ldap_mod_add</function>,
      <function>ldap_mod_del</function>, <function>ldap_rename</function>,
      <function>ldap_compare</function>, <function>ldap_delete</function>,
      <function>ldap_modify_batch</function>,
      <function>ldap_search</function>, <function>ldap_list</function> e
      <function>ldap_read</function> foi adicionado.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      O parâmetro de saída <literal>$controls</literal> para obter controles do servidor em
      <function>ldap_parse_result</function> foi adicionado.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Suporte para <constant>LDAP_OPT_SERVER_CONTROLS</constant> e
      <constant>LDAP_OPT_CLIENT_CONTROLS</constant> em
      <function>ldap_get_option</function> e
      <function>ldap_set_option</function> foi corrigido.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.mbstring">
  <title>Functions Multibyte String</title>

  <sect3 xml:id="migration73.new-features.mbstring.case-mapping-folding">
   <title>Suporte completo para Case-Mapping e Case-Folding</title>

   <para>
    Foi adicionado suporte para mapeamento completo de case-mapping e case-folding. Ao contrário do
    case-mapping simples, o case-mapping completo pode alterar o comprimento da string. Por
    exemplo:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_strtoupper("Straße");
// Produces STRAßE on PHP 7.2
// Produces STRASSE on PHP 7.3
?>
]]>
     </programlisting>
    </informalexample>
    Os diferentes modos de mapeamento e folding modes estão disponíveis através de
    <function>mb_convert_case</function>:
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER</constant> (usado por <function>mb_strtolower</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER</constant> (usado por <function>mb_strtoupper</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE_SIMPLE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD_SIMPLE</constant> (usado por operações Case-Insensitive)
      </simpara>
     </listitem>
    </itemizedlist>
    Somente o mapeamento de caso completo incondicional e agnóstico de idioma é executado.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.case-insensitive-ops">
   <title>As operações de string Case-Insensitive usam Case-Folding</title>

   <para>
    As operações de string que não diferenciam maiúsculas de minúsculas agora usam case-folding em vez de
    case- mapping durante as comparações. Isso significa que mais caracteres serão
    considerados (sem distinção entre maiúsculas e minúsculas) iguais agora.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.mb-case-title">
   <title>MB_CASE_TITLE executa conversão de Title-Case</title>

   <para>
    <function>mb_convert_case</function> com <constant>MB_CASE_TITLE</constant>
    agora executa conversão de maiúsculas e minúsculas com base nas propriedades Unicode
    derivadas de Cased e CaseIgnorable. Em particular, isso também melhora o tratamento de
    aspas e apóstrofos.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.ucd11">
   <title>Support Unicode 11</title>

   <para>
    As tabelas de dados <link linkend="book.mbstring">Multibyte String</link> foram
    atualizadas para Unicode 11.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.long-strings">
   <title>Suporte Long String</title>

   <para>
    As <link linkend="ref.mbstring">funções Multibyte String Functions</link> agora
    suportam corretamente strings maiores que 2 GB.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.performance">
   <title>Melhorias de desempenho</title>

   <para>
    O desempenho da extensão <link linkend="book.mbstring">Multibyte String</link>
    foi significativamente melhorado em todos os aspectos. As maiores
    melhorias estão nas funções de conversão de caso.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.named-captures">
   <title>Suporte a Capturas Nomeadas</title>

   <para>
    As funções <literal>mb_ereg_*</literal> agora suportam capturas nomeadas.
    Funções de correspondência como <function>mb_ereg</function> agora retornarão capturas
    nomeadas usando o número do grupo e o nome, semelhante ao PCRE:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg('(?<word>\w+)', '国', $matches);
// => [0 => "国", 1 => "国", "word" => "国"];
?>
]]>
     </programlisting>
    </informalexample>
    Além disso, <function>mb_ereg_replace</function> agora suporta as
    notações <code>\k&lt;&gt;</code> e <code>\k''</code> para fazer referência a capturas
    nomeadas na string de substituição:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg_replace('\s*(?<word>\w+)\s*', "_\k<word>_\k'word'_", ' foo ');
// => "_foo_foo_"
?>
]]>
     </programlisting>
    </informalexample>
    <code>\k&lt;&gt;</code> e <code>\k''</code> também podem ser usados para referências
    numeradas, que também funcionam com números de grupos maiores que 9.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.realine">
  <title>Readline</title>

  <para>
   O suporte para as opções <literal>completion_append_character</literal> e
   <literal>completion_suppress_append</literal> foi adicionado a
   <function>readline_info</function>. Essas opções só estão disponíveis se o PHP
   estiver vinculado a libreadline (ao invés de libedit).
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
