<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 86e6094e86b84a51d00ab217ac50ce8dde33d82a Maintainer: ae Status: ready --><!-- CREDITS: fabioluciano,ae -->

<sect2 xml:id="migration70.incompatible.integers">
 <title>Mudança na manipulação do <type>int</type></title>

 <sect3 xml:id="migration70.incompatible.integers.invalid-octals">
  <title>Octais literais inválidos</title>

  <para>
   Antes, octais literais que continham números inválidos, eram silenciosamente
   truncados (<literal>0128</literal> se tornaria <literal>012</literal>).
   Agora, um octal literal inválido causará um erro de parse.
  </para>
 </sect3>

 <sect3 xml:id="migration70.incompatible.integers.negative-bitshift">
  <title>Deslocamento de bits negativos</title>

  <para>
   Deslocamento de bits por números negativos agora lançarão uma exceção
   <classname>ArithmeticError</classname>:
  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(1 >> -1);
?>
]]>
   </programlisting>
    &example.outputs.5;
    <screen>
<![CDATA[
int(0)
]]>
    </screen>
    &example.outputs.7;
    <screen>
<![CDATA[
Fatal error: Uncaught ArithmeticError: Bit shift by negative number in /tmp/test.php:2
Stack trace:
#0 {main}
  thrown in /tmp/test.php on line 2
]]>
    </screen>
  </informalexample>
 </sect3>

 <sect3 xml:id="migration70.incompatible.integers.out-of-range">
  <title>Deslocamentos de bits fora do limite</title>

  <para>
   Deslocamentos de bits (em ambas direções), além do tamanho de bits de um
   <type>int</type> sempre resultará em 0. Antes, o comportamento
   do deslocamento dependia da arquitetura.
  </para>
 </sect3>

 <sect3 xml:id="migration70.incompatible.integers.div-by-zero">
  <title>Mudanças na Divisão por Zero</title>

  <para>
   Antes, quando 0 era usado como divisor tanto para a operador de divisão (/) quanto
   para o módulo, um E_WARNING era emitido e
   <constant>false</constant> era retornado. Agora, o operador de divisão
   retornará um float +INF, -INF ou NAN, conforme a especificação IEEE 754. O E_WARNING do operador módulo
   foi removido e irá lançar uma exceção <classname>DivisionByZeroError</classname>.

  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(3/0);
var_dump(0/0);
var_dump(0%0);
?>
]]>
   </programlisting>
   &example.outputs.5;
   <screen>
<![CDATA[
Warning: Division by zero in %s on line %d
bool(false)

Warning: Division by zero in %s on line %d
bool(false)

Warning: Division by zero in %s on line %d
bool(false)
]]>
   </screen>
   &example.outputs.7;
   <screen>
<![CDATA[
Warning: Division by zero in %s on line %d
float(INF)

Warning: Division by zero in %s on line %d
float(NAN)

PHP Fatal error:  Uncaught DivisionByZeroError: Modulo by zero in %s line %d
]]>
   </screen>
  </informalexample>
 </sect3>
</sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
