<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d7a2a4e3f7114ec8f0a71da90ed7e55b70fb77ec Maintainer: geekcom Status: ready --><!-- CREDITS: geekcom -->

<sect1 xml:id="migration80.deprecated">
 <title>Recursos depreciados</title>

 <sect2 xml:id="migration80.deprecated.core">
  <title>PHP Core</title>

  <itemizedlist>
   <listitem>
    <para>
     Se um parâmetro com um valor padrão é seguido por um parâmetro obrigatório, o valor padrão não tem
     efeito. Essa funcionalidade está depreciada a partir do PHP 8.0.0 e geralmente pode ser resolvido eliminando o
     valor padrão, sem mudança na funcionalidade:
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
function test($a = [], $b) {} // Antes
function test($a, $b) {}      // Depois
?>
]]>
     </programlisting>
    </para>
    <para>
     Uma exceção à esta regra são os parâmetros escritos de seguinte forma: <code>Type $param = null</code>, onde
     o valor padrão nulo torna o tipo implicitamente anulável. Este uso continua permitido, mas é
     recomendado o uso de um tipo anulável explícito:
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
function test(A $a = null, $b) {} // Ainda é permitido
function test(?A $a, $b) {}       // Recomendável
?>
]]>
     </programlisting>
    </para>
   </listitem>
   <listitem>
    <para>
     Chamar a função <function>get_defined_functions</function> com o parâmetro <parameter>exclude_disabled</parameter>
     definido explicitamente como &false; está depreciado e não tem mais efeito.
     A função <function>get_defined_functions</function> nunca incluirá funções desabilitadas.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.enchant">
  <title>Enchant</title>

  <itemizedlist>
   <listitem>
    <para>
     <function>enchant_broker_set_dict_path</function> e
     <function>enchant_broker_get_dict_path</function>
     estão depreciadas, porque essa funcionalidade não está disponível no libenchant &lt; 1.5 nem na
     libenchant-2.
    </para>
   </listitem>
   <listitem>
    <para>
     <function>enchant_dict_add_to_personal</function> está depreciada; use
     <function>enchant_dict_add</function> em seu lugar.
    </para>
   </listitem>
   <listitem>
    <para>
     <function>enchant_dict_is_in_session</function> está depreciada; use
     <function>enchant_dict_is_added</function> em seu lugar.
    </para>
   </listitem>
   <listitem>
    <para>
     <function>enchant_broker_free</function> e <function>enchant_broker_free_dict</function> estão
     depreciadas; em vez disso destrua/unset o objeto.
    </para>
   </listitem>
   <listitem>
    <para>
     As constantes <constant>ENCHANT_MYSPELL</constant> e <constant>ENCHANT_ISPELL</constant> estão
     depreciadas.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.libxml">
  <title>LibXML</title>

  <para>
   A função <function>libxml_disable_entity_loader</function> foi depreciada. Como a libxml 2.9.0 agora é
   obrigatória, o carregamento de entidade externa está desabilitado por padrão, e esta função
   não é mais necessária para a proteção contra ataques XXE.
  </para>
 </sect2>

 <sect2 xml:id="migration80.deprecated.pgsql">
  <title>PGSQL / PDO PGSQL</title>

  <itemizedlist>
   <listitem>
    <para>
     A constante <constant>PG_VERSION_STR</constant> agora tem o mesmo valor que
     <constant>PG_VERSION</constant>, portanto, está depreciada.
    </para>
   </listitem>
   <listitem>
    <para>
     Os apelidos de função na extensão pgsql foram depreciados.
     Consulte a lista abaixo para saber quais funções devem ser usadas em seu lugar:
    </para>
    <para>
     <simplelist>
      <member><function>pg_errormessage</function> → <function>pg_last_error</function></member>
      <member><function>pg_numrows</function> → <function>pg_num_rows</function></member>
      <member><function>pg_numfields</function> → <function>pg_num_fields</function></member>
      <member><function>pg_cmdtuples</function> → <function>pg_affected_rows</function></member>
      <member><function>pg_fieldname</function> → <function>pg_field_name</function></member>
      <member><function>pg_fieldsize</function> → <function>pg_field_size</function></member>
      <member><function>pg_fieldtype</function> → <function>pg_field_type</function></member>
      <member><function>pg_fieldnum</function> → <function>pg_field_num</function></member>
      <member><function>pg_result</function> → <function>pg_fetch_result</function></member>
      <member><function>pg_fieldprtlen</function> → <function>pg_field_prtlen</function></member>
      <member><function>pg_fieldisnull</function> → <function>pg_field_is_null</function></member>
      <member><function>pg_freeresult</function> → <function>pg_free_result</function></member>
      <member><function>pg_getlastoid</function> → <function>pg_last_oid</function></member>
      <member><function>pg_locreate</function> → <function>pg_lo_create</function></member>
      <member><function>pg_lounlink</function> → <function>pg_lo_unlink</function></member>
      <member><function>pg_loopen</function> → <function>pg_lo_open</function></member>
      <member><function>pg_loclose</function> → <function>pg_lo_close</function></member>
      <member><function>pg_loread</function> → <function>pg_lo_read</function></member>
      <member><function>pg_lowrite</function> → <function>pg_lo_write</function></member>
      <member><function>pg_loreadall</function> → <function>pg_lo_read_all</function></member>
      <member><function>pg_loimport</function> → <function>pg_lo_import</function></member>
      <member><function>pg_loexport</function> → <function>pg_lo_export</function></member>
      <member><function>pg_setclientencoding</function> → <function>pg_set_client_encoding</function></member>
      <member><function>pg_clientencoding</function> -> <function>pg_client_encoding</function></member>
     </simplelist>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.standard">
  <title>Biblioteca Padrão</title>

  <itemizedlist>
   <listitem>
    <para>
     Funções sort que retornam &true; ou &false; agora lançam um aviso de depreciação, e
     deve ser substituído por uma implementação que retorna um número inteiro menor, igual ou maior
     que zero.
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
// Substituir
usort($array, fn($a, $b) => $a > $b);
// Por
usort($array, fn($a, $b) => $a <=> $b);
?>
]]>
     </programlisting>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.zip">
  <title>Zip</title>

  <itemizedlist>
   <listitem>
    <para>
     Usar um arquivo vazio como ZipArchive está depreciado. A Libzip 1.6.0 não aceita mais arquivos vazios como
     arquivos zip válidos. A solução alternativa existente será removida na próxima versão.
    </para>
   </listitem>
   <listitem>
    <para>
     A API procedural do Zip está depreciada. Use <classname>ZipArchive</classname> em seu lugar.
     A iteração em todas as entradas pode ser realizada usando <methodname>ZipArchive::statIndex</methodname>
     e um laço <link linkend="control-structures.for">for</link>:
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
// iterar usando a API procedural
assert(is_resource($zip));
while ($entry = zip_read($zip)) {
    echo zip_entry_name($entry);
}

// iterar usando a API orientada a objetos
assert($zip instanceof ZipArchive);
for ($i = 0; $entry = $zip->statIndex($i); $i++) {
    echo $entry['name'];
}
?>
]]>
     </programlisting>
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 xml:id="migration80.deprecated.reflection">
  <title>Reflection</title>

  <itemizedlist>
   <listitem>
    <para>
     O método <methodname>ReflectionFunction::isDisabled</methodname> está depreciado, pois não é mais
     possível criar uma classe <classname>ReflectionFunction</classname> para uma função desativada. Este
     método agora sempre retorna &false;.
    </para>
   </listitem>
   <listitem>
    <para>
     <methodname>ReflectionParameter::getClass</methodname>,
     <methodname>ReflectionParameter::isArray</methodname>, e
     <methodname>ReflectionParameter::isCallable</methodname> estão depreciados.
     <methodname>ReflectionParameter::getType</methodname> e
     <classname>ReflectionType</classname> devem ser usados em seu lugar.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
