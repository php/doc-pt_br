<?xml version="1.0" encoding="utf-8"?> <!-- EN-Revision: 65716f4761484e314ee86fa23493f00f7823ace1 Maintainer: @athos-ribeiro Status: ready -->
<sect1 xml:id="migration82.deprecated">
 <title>Funcionalidades Preteridas</title>

 <sect2 xml:id="migration82.deprecated.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration82.deprecated.core.dynamic-properties">
   <title>Uso de propriedades dinâmicas</title>

   <para>
    A criação de propriedades dinâmicas foi preterida a menos que a classe a ative
    usando o atributo <code>#[\AllowDynamicProperties]</code>.
    <classname>stdClass</classname> permite propriedades dinâmicas.
    O uso dos métodos mágicos <link linkend="object.get">__get()</link>/<link linkend="object.set">__set()</link> não é afetado por essa mudança.
    Um aviso de descontinuação de propriedades dinâmicas pode ser abordado das seguintes maneiras:

    <simplelist>
     <member>Declarando a propriedade (preferido).</member>
     <member>
      Adicionando o atributo <code>#[\AllowDynamicProperties]</code> à classe
      (que também se aplica a todas as classes filhas).
     </member>
     <member>
      Usando um <classname>WeakMap</classname> se dados adicionais precisarem ser
      associados a um objeto ao qual não se detém posse.
     </member>
    </simplelist>
   </para>
  </sect3>

  <sect3 xml:id="migration82.deprecated.core.relative-callables">
   <title>Chamáveis relativos</title>

   <para>
    Chamáveis que não são aceitos pela sintaxe <code>$callable()</code>
    (mas são aceitos por <function>call_user_func</function>) foram preteridos.

    Em particular:
    <simplelist>
     <member><code>"self::method"</code></member>
     <member><code>"parent::method"</code></member>
     <member><code>"static::method"</code></member>
     <member><code>["self", "method"]</code></member>
     <member><code>["parent", "method"]</code></member>
     <member><code>["static", "method"]</code></member>
     <member><code>["Foo", "Bar::method"]</code></member>
     <member><code>[new Foo, "Bar::method"]</code></member>
    </simplelist>

    Isso não afeta chamáveis de métodos normais como
    <code>"A::method"</code> ou <code>["A", "method"]</code>.
   </para>
   <!-- RFC: https://wiki.php.net/rfc/deprecate_partially_supported_callables -->
   <!-- RFC: https://wiki.php.net/rfc/partially-supported-callables-expand-deprecation-notices -->
  </sect3>

  <sect3 xml:id="migration82.deprecated.core.dollar-brace-interpolation">
   <title>Estilo de interpolação <code>"${var}"</code> e <code>"${expr}"</code></title>

   <para>
    Os estilos de interpolação de string <code>"${var}"</code> e <code>"${expr}"</code>
    foram preteridos.
    Use <code>"$var"/"{$var}"</code> e <code>"{${expr}}"</code>, respectivamente.
    <!-- RFC: https://wiki.php.net/rfc/deprecate_dollar_brace_string_interpolation -->
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration82.deprecated.mbstring">
  <title>MBString</title>

  <para>
   O uso das 'codificações de texto' <literal>QPrint</literal>, <literal>Base64</literal>,
   <literal>Uuencode</literal>, e <literal>HTML-ENTITIES</literal>
   foi preterido para todas as funções de MBString.

   Diferente das outras codificações de texto suportadas pela MBString,
   essas não codificam a sequência de pontos de código Unicode, mas sim uma sequência de bytes brutos.
   Não está claro quais deveriam ser os valores de devolução corretos para a maioria das funções de MBString
   quando uma dessas não-codificações é especificada.
   Além disso, o PHP possui implementações separadas, embutidas, para todas elas;
   por exemplo, dados UUencoded podem ser manipulados utilizando
   <function>convert_uuencode</function>/<function>convert_uudecode</function>.
  </para>
 </sect2>

 <sect2 xml:id="migration82.deprecated.spl">
  <title>SPL</title>

  <para>
   O método interno <methodname>SplFileInfo::_bad_state_ex</methodname>
   for preterido.
  </para>
 </sect2>

 <sect2 xml:id="migration82.deprecated.standard">
  <title>Biblioteca Padrão</title>

  <para>
   <function>utf8_encode</function> e <function>utf8_decode</function>
   foram preteridas.
  </para>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
