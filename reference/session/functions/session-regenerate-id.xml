<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a0ae28d3bc85f927c22649ebd9a590b921534b7d Maintainer: geekcom Status: ready --><!-- CREDITS: fernandoc, geekcom, adiel -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.session-regenerate-id">
 <refnamediv>
  <refname>session_regenerate_id</refname>
  <refpurpose>
   Atualiza o id da sessão atual com um novo id gerado
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_regenerate_id</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>delete_old_session</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>session_regenerate_id</function> substituirá o id da sessão
   atual com um novo id e manterá a informação da sessão atual.
  </para>
  <para>
   Quando <link linkend="ini.session.use-trans-sid">session.use_trans_sid</link>
   estiver habilitada, saídas (output) devem ser iniciadas depois de <function>session_regenerate_id</function>
   ser chamada. Caso contrário, o ID da sessão antiga é utilizado.
  </para>
  <warning>
   <para>
    Atualmente, session_regenerate_id não lida muito bem em redes instáveis
    como, por exemplo, móvel e WiFi. Pode ocorrer perda da
    sessão ao chamar session_regenerate_id.
   </para>
   <para>
    Os dados de sessões antigas não devem ser destruídos imediatamente; ao invés disso, deve ser usado
    timestamp para destruir a sessão e controlar o acesso aos dados de sessões antigas. Caso contrário,
    acessos concorrentes à página podem causar inconsistências, a
    perda da sessão, ou pode causar uma condição de corrida no navegador do
    usuário que faz com que vários IDs de sessão sejam criados desnecessariamente. A remoção imediata
    dos dados de sessão impossibilita a detecção de ataques de roubo de sessão,
    e também a prevenção.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>delete_old_session</parameter></term>
      <listitem>
       <para>
        Se o arquivo associado à sessão anterior deve ser excluído ou não.
        A sessão antiga não deve ser removida se for necessário evitar
        condições de corrida causadas pela remoção, ou se for necessário detectar/evitar ataques
        de roubo de sessão.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>session_regenerate_id</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// NOTA: Este código não é totalmente funcional, mas apenas um exemplo!

session_start();

// Verifica o timestamp para remoção
if (isset($_SESSION['destroyed'])
    && $_SESSION['destroyed'] < time() - 300) {
    // Normalmente não deve acontecer. Isso pode ser um ataque ou então causado por uma rede instável.
    // Remove todos os status de autenticação da sessão deste usuário.
    remove_all_authentication_flag_from_active_sessions($_SESSION['userid']);
    throw(new DestroyedSessionAccessException);
}

$old_sessionid = session_id();

// Define o timestamp para remoção
$_SESSION['destroyed'] = time(); // session_regenerate_id() salva os dados da sessão anterior

// Apenas chamar session_regenerate_id() pode causar a perda da sessão, etc.
// Veja o próximo exemplo.
session_regenerate_id();

// A nova sessão não precisa da flag destroyed
unset($_SESSION['destroyed']);

$new_sessionid = session_id();

echo "Old Session: $old_sessionid<br />";
echo "New Session: $new_sessionid<br />";

print_r($_SESSION);
?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   O módulo de sessão atual não trabalha bem com redes instáveis. O programador deve
   gerenciar o ID de sessão para evitar a perda da sessão causada por session_regenerate_id.
  </para>

  <para>
   <example>
    <title>Evitando a perda de sessão causada por <function>session_regenerate_id</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// NOTA: Este código não é totalmente funcional, mas apenas um exemplo!
// my_session_start() e my_session_regenerate_id() evitam a perda da sessão causada por
// redes instáveis. Além disso, este código pode evitar que a sessão seja
// roubada por atacantes.

function my_session_start() {
    session_start();
    if (isset($_SESSION['destroyed'])) {
       if ($_SESSION['destroyed'] < time()-300) {
           // Normalmente não deve acontecer. Isso pode ser um ataque ou então causado por uma rede instável.
           // Remove todos os status de autenticação da sessão deste usuário.
           remove_all_authentication_flag_from_active_sessions($_SESSION['userid']);
           throw(new DestroyedSessionAccessException);
       }
       if (isset($_SESSION['new_session_id'])) {
           // Não está completamente expirado ainda. O cookie pode ter sido perdido por causa de uma rede instável.
           // Tenta novamente definir o cookie de ID de sessão.
           // NOTA: Não tente definir o ID de sessão novamente se você quiser remover
           // as flags de autenticação
           session_commit();
           session_id($_SESSION['new_session_id']);
           // O novo ID de sessão deve existir
           session_start();
           return;
       }
   }
}

function my_session_regenerate_id() {
    // Um novo ID de sessão é necessário para definir o ID de sessão corretamente
    // quando o ID de sessão não é configurado por causa de instabilidade na rede.
    $new_session_id = session_create_id();
    $_SESSION['new_session_id'] = $new_session_id;

    // Definie o timestamp para remoção
    $_SESSION['destroyed'] = time();

    // Escreve e fecha a sessão
    session_commit();

    // Inicia a sessão com um novo ID de sessão
    session_id($new_session_id);
    ini_set('session.use_strict_mode', 0);
    session_start();
    ini_set('session.use_strict_mode', 1);

    // A nova sessão não precisa destas informações
    unset($_SESSION['destroyed']);
    unset($_SESSION['new_session_id']);
}
?>
]]>
    </programlisting>
   </example>
  </para>

 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_id</function></member>
    <member><function>session_create_id</function></member>
    <member><function>session_start</function></member>
    <member><function>session_destroy</function></member>
    <member><function>session_reset</function></member>
    <member><function>session_name</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
