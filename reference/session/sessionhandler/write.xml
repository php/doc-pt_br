<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 601f6f4ce5827d441a7e110184708f0abe9fd447 Maintainer: ae Status: ready -->
<refentry xml:id="sessionhandler.write" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandler::write</refname>
  <refpurpose>Escreve os dados de sessão</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SessionHandler">
   <modifier>public</modifier> <type>bool</type><methodname>SessionHandler::write</methodname>
   <methodparam><type>string</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Escreve os dados de sessão no armazenamento de sessão. Chamada na finalização normal do PHP; por
   <function>session_write_close</function>; ou quando <function>session_register_shutdown</function> falha.
   O PHP chamará <function>SessionHandler::close</function> imediatamente depois que este método retornar.
  </para>
  <para>
   Este método envolve o manipulador interno de gravação do PHP definido na configuração ini
   <link linkend="ini.session.save-handler">session.save_handler</link> que foi definido
   antes deste manipulador ser ativado por <function>session_set_save_handler</function>.
  </para>
  <para>
   Se esta classe for estendida por herança, chamar o método <parameter>write</parameter> da classe pai invocará a função
   que envolve este método, portanto invocará o callback interno.  Isto permite que esse método seja
   substituído ou interceptado e filtrado (por exemplo, descriptografar o valor de <parameter>$data</parameter>
   antes de enviar para o método <parameter>write</parameter> da classe pai).
  </para>
  <para>
   Para mais informações relacionadas ao que é esperado que este método faça, por favor leia a documentação
   de <function>SessionHandlerInterface::write</function>.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      O id da sessão.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>data</parameter></term>
    <listitem>
     <para>
      Os dados de sessão codificados.  Esta informação é o resultado codificado internamente pelo PHP da super global <varname>$_SESSION</varname> em uma string
      serializada e passada como este parâmetro.  Note que sessões usam um método alternativo de serialização.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.session.storage.retval;
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
     (diretiva de configuração).
    </member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
