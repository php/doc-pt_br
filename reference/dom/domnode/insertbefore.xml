<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e574835356ec82ec696eed831145eebc3ea5184d Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="domnode.insertbefore" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::insertBefore</refname>
  <refpurpose>
   Adiciona um novo filho antes de um nó de referência
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMNode">
   <modifier>public</modifier> <type class="union"><type>DOMNode</type><type>false</type></type><methodname>DOMNode::insertBefore</methodname>
   <methodparam><type>DOMNode</type><parameter>node</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>DOMNode</type><type>null</type></type><parameter>child</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta função insere um novo nó imediatamente antes do nó de referência.
   Se você planeja fazer mais modificações no nó adicionado, deve usar
   o nó retornado.
  </para>
  <para>
   Ao usar um nó existente, ele será movido.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>node</parameter></term>
     <listitem>
      <para>
       O novo nó.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>child</parameter></term>
     <listitem>
      <para>
       O nó de referência. Se não fornecido, <parameter>node</parameter> é
       anexado aos filhos.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   O nó inserido ou &false; em caso de erro.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Gerado se este nó for somente leitura ou se o pai anterior do nó
       sendo inserido for somente leitura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_HIERARCHY_REQUEST_ERR</constant></term>
     <listitem>
      <para>
       Gerado se este nó for de um tipo que não permite filhos do
       tipo do nó <parameter>node</parameter>, ou se o nó a
       ser anexado for um dos ancestrais deste nó ou este próprio nó.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       Gerado se <parameter>node</parameter> foi criado a partir de um
       documento diferente daquele que criou este nó.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_NOT_FOUND</constant></term>
     <listitem>
      <para>
       Gerado se <parameter>child</parameter> não for um filho deste nó.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMNode::appendChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
