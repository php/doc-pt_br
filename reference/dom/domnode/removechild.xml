<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d02743bd7e00a08aaefac003b6b52f6b4be722cb Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="domnode.removechild" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::removeChild</refname>
  <refpurpose>
   Remove um filho da lista de filhos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMNode">
   <modifier>public</modifier> <type class="union"><type>DOMNode</type><type>false</type></type><methodname>DOMNode::removeChild</methodname>
   <methodparam><type>DOMNode</type><parameter>child</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função remove um filho da lista de filhos.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>child</parameter></term>
     <listitem>
      <para>
       O filho removido.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se o filho puder ser removido, a função retorna o antigo filho ou &false; em caso de erro.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Gerado se este nó for somente leitura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_NOT_FOUND</constant></term>
     <listitem>
      <para>
       Gerado se <parameter>child</parameter> não for um filho deste nó.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   O exemplo a seguir excluirá o elemento <literal>chapter</literal> do nosso documento XML.
   <example>
    <title>Removendo um filho</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;
$doc->load('book.xml');

$book = $doc->documentElement;

// recuperamos o capítulo e o removemos do livro
$chapter = $book->getElementsByTagName('chapter')->item(0);
$oldchapter = $book->removeChild($chapter);

echo $doc->saveXML();
?>]]>
    </programlisting>
    &example.outputs;
    <screen role="xml">
<![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<book id="listing">
 <title>My lists</title>

</book>
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMChildNode::remove</methodname></member>
    <member><methodname>DOMNode::appendChild</methodname></member>
    <member><methodname>DOMNode::replaceChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
