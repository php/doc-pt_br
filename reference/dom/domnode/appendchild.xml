<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bc83b0a2f223a5ca9daaf22bd82215791bccde31 Maintainer: leonardolara Status: ready --><!-- CREDITS: malukenho,leonardolara -->
<refentry xml:id="domnode.appendchild" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::appendChild</refname>
  <refpurpose>
   Adiciona um novo filho ao final dos filhos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMNode">
   <modifier>public</modifier> <type class="union"><type>DOMNode</type><type>false</type></type><methodname>DOMNode::appendChild</methodname>
   <methodparam><type>DOMNode</type><parameter>node</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função acrescenta um filho a uma lista existente de filhos, ou cria
   uma nova lista de filhos. O filho pode ser criado, por exemplo, com
   <methodname>DOMDocument::createElement</methodname>,
   <methodname>DOMDocument::createTextNode</methodname> etc. ou simplesmente pode usaando-se
   qualquer outro nó.
  </para>
  <para>
   Ao usar um nó existente ele será movido.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>node</parameter></term>
     <listitem>
      <para>
       O nó filho anexado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    O nó adicionado ou &false; em caso de erro.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Lançado se este nó for somente leitura, ou se o pai anterior do nó
       que está sendo inserido for somente leitura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_HIERARCHY_REQUEST_ERR</constant></term>
     <listitem>
      <para>
       Lançada se este nó for de um tipo que não permite que filhos do
       tipo do <parameter>node</parameter>, ou se o nó a ser
       anexado for um dos ancestrais deste nó, ou se for este próprio nó.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       Lançado se <parameter>node</parameter> foi criado por um documento diferente
       do documento que criou este nó.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   O exemplo a seguir irá adicionar um novo nó de elemento de um documento novo.
   <example>
    <title>Adicionando um nó filho</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;

$node = $doc->createElement("para");
$newnode = $doc->appendChild($node);

echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>Filhos aninhados</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;

$headNode = $doc->createElement("head");
$doc->appendChild($headNode);

$titleNode = $doc->createElement("title");
$headNode->appendChild($titleNode);

echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMChildNode::after</methodname></member>
    <member><methodname>DOMNode::insertBefore</methodname></member>
    <member><methodname>DOMNode::removeChild</methodname></member>
    <member><methodname>DOMNode::replaceChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
