<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4ef716f8aa753e1189b2e57c91da378b16d970b0 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="domdocument.loadhtml" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument::loadHTML</refname>
  <refpurpose>
   Carrega HTML a partir de uma string
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="DOMDocument">
   <modifier>public</modifier> <type>bool</type><methodname>DOMDocument::loadHTML</methodname>
   <methodparam><type>string</type><parameter>source</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   A função analisa o HTML contido na string <parameter>source</parameter>.
   Ao contrário do carregamento de XML, o HTML não precisa ser bem formado para carregar.
  </para>
  <warning>
   <para>
    Esta função analisa a entrada usando um analisador HTML 4. As regras de
    análise do HTML 5, que é o que os navegadores web modernos usam, são diferentes.
    Dependendo da entrada, isso pode resultar em uma estrutura DOM diferente.
    Portanto, esta função não pode ser usada com segurança para sanitizar HTML.
   </para>
   <para>
    Como exemplo, alguns elementos HTML fecharão implicitamente um elemento pai
    quando encontrados. As regras para fechar automaticamente os elementos pais
    diferem entre HTML 4 e HTML 5 e, portanto, a estrutura DOM resultante que
    <classname>DOMDocument</classname> vê pode ser diferente da estrutura DOM
    que um navegador web vê, possibilitando que um invasor quebre o
    HTML resultante.
   </para>
  </warning>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>source</parameter></term>
     <listitem>
      <para>
       A string HTML.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      &dom.parameter.options;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se uma string vazia for passada como <parameter>source</parameter>,
   um aviso será gerado. Este aviso não é gerado pelo libxml
   e não pode ser tratado usando as funções de manipulação de erros do libxml.
  </para>
  &dom.malformederror;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Esta função agora tem um tipo de retorno <type>bool</type> tentativo.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Chamando esta função estaticamente agora irá
       gerar um <classname>Error</classname>.
       Anteriormente, era gerado um <constant>E_DEPRECATED</constant>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Criando um Documento</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = new DOMDocument();
$doc->loadHTML("<html><body>Test<br></body></html>");
echo $doc->saveHTML();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMDocument::loadHTMLFile</methodname></member>
    <member><methodname>DOMDocument::saveHTML</methodname></member>
    <member><methodname>DOMDocument::saveHTMLFile</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
