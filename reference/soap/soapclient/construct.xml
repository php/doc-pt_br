<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 497c40ac164d5873fd87f622dfdeb5206392b446 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="soapclient.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapClient::__construct</refname>
  <refpurpose>Construtor SoapClient</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="SoapClient">
   <modifier>public</modifier> <methodname>SoapClient::__construct</methodname>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>wsdl</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Cria um objeto <classname>SoapClient</classname> para conectar-se a um serviço SOAP.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
      URI de um arquivo WSDL que descreve o serviço, que é usado para
      configurar o cliente. Se não for fornecido, o cliente operará em modo
      não WSDL.
      </para>
      <note>
       <para>
        Por padrão, o arquivo WSDL será armazenado em cache para desempenho. Para desabilitar
        ou configurar esse cache, consulte
        <link linkend="soap.configuration.list">&ConfigureOptions; SOAP</link>
        e a <link linkend="soapclient.construct.options.cache-wsdl">
        opção <literal>cache_wsdl</literal></link>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Um array associativo que especifica opções adicionais para o cliente SOAP.
       Se <parameter>wsdl</parameter> for fornecido, isso será opcional; caso contrário,
       pelo menos <literal>location</literal> e <literal>url</literal> devem ser
       fornecidos.
       <variablelist>
        <varlistentry xml:id="soapclient.construct.options.location">
         <term>
          <parameter>location</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           A URL do servidor SOAP para o qual enviar a solicitação.
          </para>
          <para>
           Obrigatório se o parâmetro <parameter>wsdl</parameter> não for fornecido.
           Se ambos o parâmetro <parameter>wsdl</parameter> e a
           opção <literal>location</literal> são fornecidas, a
           opção <literal>location</literal> substituirá qualquer local
           especificado no arquivo WSDL.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.uri">
         <term>
          <parameter>uri</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           O namespace de destino do serviço SOAP.
          </para>
          <para>
           Obrigatório se o parâmetro <parameter>wsdl</parameter> não for fornecido;
           ignorado caso contrário.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.style">
         <term>
          <parameter>style</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Especifica o estilo de ligação a ser usado para este cliente, usando as constantes
           <constant>SOAP_RPC</constant> e <constant>SOAP_DOCUMENT</constant>.
           <constant>SOAP_RPC</constant> indica ligação no estilo RPC, onde o
           corpo da solicitação SOAP contém uma codificação padrão de uma chamada de função.
           <constant>SOAP_DOCUMENT</constant> indica vinculação no estilo do documento,
           onde o corpo da solicitação SOAP contém um documento XML com
           significado definido pelo serviço.
          </para>
          <para>
           Se o parâmetro <parameter>wsdl</parameter> for fornecido, esta
           opção é ignorada e o estilo é lido no arquivo WSDL.
          </para>
          <para>
           Se nem esta opção nem o parâmetro <parameter>wsdl</parameter>
           for fornecido, o estilo RPC é usado.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.use">
         <term>
          <parameter>use</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Especifica o estilo de codificação a ser usado para este cliente, usando as
           constantes <constant>SOAP_ENCODED</constant> ou <constant>SOAP_LITERAL</constant>.
           <constant>SOAP_ENCODED</constant> indica codificação usando os tipos
           definido na especificação SOAP.
           <constant>SOAP_LITERAL</constant> indica codificação usando um esquema
           definido pelo serviço.
          </para>
          <para>
           Se o parâmetro <parameter>wsdl</parameter> for fornecido, esta
           opção é ignorada e a codificação é lida no arquivo WSDL.
          </para>
          <para>
           Se nem esta opção nem o parâmetro <parameter>wsdl</parameter>
           é fornecido, o estilo "codificado" é usado.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.soap-version">
         <term>
          <parameter>soap_version</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Especifica a versão do protocolo SOAP a ser usada:
           <constant>SOAP_1_1</constant> para SOAP 1.1,
           ou <constant>SOAP_1_2</constant> para SOAP 1.2.
          </para>
          <para>
           Se omitido, será usado SOAP 1.1.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.authentication">
         <term>
          <parameter>authentication</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Especifica o método de autenticação ao usar a autenticação HTTP
           em solicitações. O valor pode ser tanto
           <constant>SOAP_AUTHENTICATION_BASIC</constant>
           ou <constant>SOAP_AUTHENTICATION_DIGEST</constant>.
          </para>
          <para>
           Se omitido, e a opção <literal>login</literal> for fornecida,
           a autenticação básica é usada.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.login">
         <term>
          <parameter>login</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Nome de usuário a ser usado com autenticação HTTP Basic ou Digest.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.password">
         <term>
          <parameter>password</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Senha a ser usada com autenticação HTTP Basic ou Digest.
          </para>
          <para>
           Não deve ser confundido com <literal>passphrase</literal>,
           que é usado com autenticação de certificado de cliente HTTPS.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.local-cert">
         <term>
          <parameter>local_cert</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Caminho para um certificado de cliente para uso com autenticação HTTPS.
           Deve ser um arquivo codificado em <acronym>PEM</acronym> que contém seu certificado
           e chave privada.
          </para>
          <para>
           O arquivo também pode incluir uma cadeia de emissores, que deve vir
           após o certificado do cliente.
          </para>
          <para>
           Também pode ser definido via
           <link linkend="soapclient.construct.options.stream-context">
           <parameter>stream_context</parameter></link>,
           que também suporta a especificação de um arquivo de chave privada separado.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.passphrase">
         <term>
          <parameter>passphrase</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           A senha do certificado do cliente especificada na
           opção <literal>local_cert</literal>.
          </para>
          <para>
           Não deve ser confundido com <literal>password</literal>,
           que é usado para autenticação básica ou resumida.
          </para>
          <para>
           Também pode ser definido via
           <link linkend="soapclient.construct.options.stream-context">
           <parameter>stream_context</parameter></link>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-host">
         <term>
          <parameter>proxy_host</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Nome do host a ser usado como servidor proxy para solicitações HTTP.
          </para>
          <para>
           A opção <literal>proxy_port</literal> também deve ser especificada.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-port">
         <term>
          <parameter>proxy_port</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Porta TCP a ser usada ao conectar ao servidor proxy
           especificado em <literal>proxy_host</literal>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-login">
         <term>
          <parameter>proxy_login</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Nome de usuário opcional para autenticação com o servidor proxy
           especificado em <literal>proxy_host</literal>, usando Autenticação
           HTTP Básica.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-password">
         <term>
          <parameter>proxy_password</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Senha opcional para autenticação com o servidor proxy
           especificado em <literal>proxy_host</literal>, usando Autenticação
           HTTP Básica.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.compression">
         <term>
          <parameter>compression</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Permite compactação de solicitações e respostas HTTP SOAP.
          </para>
          <para>
           O valor deve ser o bit a bit OR de três partes:
           um <constant>SOAP_COMPRESSION_ACCEPT</constant> opcional,
           para enviar um cabeçalho "Accept-Encoding"; qualquer
           <constant>SOAP_COMPRESSION_GZIP</constant>
           ou <constant>SOAP_COMPRESSION_DEFLATE</constant> para indicar
           o algoritmo de compressão a ser usado; e um número entre 1 e 9
           para indicar o nível de compactação a ser usado na solicitação.
           Por exemplo, para ativar a compactação gzip bidirecional com o máximo
           nível de compressão, use
           <literal>SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | 9</literal>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.encoding">
         <term>
          <parameter>encoding</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Define a codificação interna de caracteres. As solicitações são sempre enviadas
           em UTF-8 e convertido para e desta codificação.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.trace">
         <term>
          <parameter>trace</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           Captura informações de solicitação e resposta, que podem então ser
           acessado com os métodos
           <methodname>SoapClient::__getLastRequest</methodname>,
           <methodname>SoapClient::__getLastRequestHeaders</methodname>,
           <methodname>SoapClient::__getLastResponse</methodname>,
           e <methodname>SoapClient::__getLastResponseHeaders</methodname>.
          </para>
          <para>
           Se omitido, o padrão é &false;
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.classmap">
         <term>
          <parameter>classmap</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Usado para mapear tipos definidos no WSDL para classes PHP.
           Deve ser especificado como um <type>array</type> associativo com
           nomes do WSDL como chaves e nomes de classes PHP como valores.
           Observe que os nomes dos tipos de um elemento não são necessariamente iguais aos
           o nome do elemento (tag).
          </para>
          <para>
           Os nomes de classe fornecidos devem sempre ser totalmente qualificados com qualquer
           <link linkend="language.namespaces">namespaces</link>, e nunca
           comece com um <literal>\</literal>. A forma correta pode ser
           gerada usando
           <link linkend="language.oop5.basic.class.class">::class</link>.
          </para>
          <para>
           Observe que ao criar uma classe, o construtor não será chamado,
           mas os métodos mágicos <link linkend="object.set">__set()</link> e
           <link linkend="object.get">__get()</link> para propriedades
           individuais serão.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.typemap">
         <term>
          <parameter>typemap</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Usado para definir mapeamentos de tipo usando funções de retorno de chamada definidas pelo usuário.
           Cada mapeamento de tipo deve ser um array com chaves
           <literal>type_name</literal> (<type>string</type> especificando o
           tipo de elemento XML);
           <literal>type_ns</literal> (<type>string</type> contendo namespace
           URI);
           <literal>from_xml</literal> (<type>callable</type> aceitando um
           parâmetro string e retornando um objeto) e
           <literal>to_xml</literal> (<type>callable</type> aceitando um
           parâmetro de objeto e retornando uma string).
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.exceptions">
         <term>
          <parameter>exceptions</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           Define se os erros lançam exceções do tipo
           <classname>SoapFault</classname>.
          </para>
          <para>
           O padrão é &true;
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.connection-timeout">
         <term>
          <parameter>connection_timeout</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Define um tempo limite em segundos para conexão com o serviço SOAP.
           Esta opção não define timeout para serviços com respostas lentas.
           Para limitar o tempo de espera até que as chamadas terminem a
           opção <link linkend="ini.default-socket-timeout">default_socket_timeout</link>
           de configuração está disponível.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.cache-wsdl">
         <term>
          <parameter>cache_wsdl</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Se o parâmetro <parameter>wsdl</parameter> for fornecido e a
           opção <link linkend="ini.soap.wsdl-cache-enabled">soap.wsdl_cache_enabled</link>
           de configuração estiver ativada, esta opção determina o tipo de armazenamento em cache.
           Um de <constant>WSDL_CACHE_NONE</constant>,
           <constant>WSDL_CACHE_DISK</constant>,
           <constant>WSDL_CACHE_MEMORY</constant> ou
           <constant>WSDL_CACHE_BOTH</constant>.
          </para>
          <para>
           Dois tipos de cache estão disponíveis: cache na memória, que armazena em cache o WSDL
           na memória do processo atual; e cache de disco, que armazena em cache o
           WSDL em um arquivo em disco, compartilhado entre todos os processos.
           O diretório a ser usado para o cache de disco é determinado pela
           opção <link linkend="ini.soap.wsdl-cache-dir">soap.wsdl_cache_dir</link>
           de configuração.
           Ambos os caches usam o mesmo tempo de vida, determinado pela
           opção <link linkend="ini.soap.wsdl-cache-ttl">soap.wsdl_cache_ttl</link>
           de configuração. O cache na memória também possui um número máximo de entradas
           determinado pela
           opção <link linkend="ini.soap.wsdl-cache-limit">soap.wsdl_cache_limit</link>
           de configuração.
          </para>
          <para>
           Se não for especificado, a opção <link linkend="ini.soap.wsdl-cache">
           soap.wsdl_cache</link> de configuração será usada.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.user-agent">
         <term>
          <parameter>user_agent</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           O valor a ser usado no cabeçalho HTTP <literal>User-Agent</literal>
           ao fazer solicitações.
          </para>
          <para>
           Também pode ser definido via <link linkend="soapclient.construct.options.stream-context">
           <parameter>stream_context</parameter></link>.
          </para>
          <para>
           Se não for especificado, o agente do usuário será <literal>"PHP-SOAP/"</literal>
           seguido pelo valor de <constant>PHP_VERSION</constant>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.stream-context">
         <term>
          <parameter>stream_context</parameter>
          <type>resource</type>
         </term>
         <listitem>
          <para>
           Um <link linkend="context">contexto de fluxo</link> criado por
           <function>stream_context_create</function>, que permite
           opções a serem definidas.
          </para>
          <para>
           O contexto pode incluir <link linkend="context.socket">opções de contexto de socket</link>,
           <link linkend="context.ssl">Opções de contexto SSL</link>,
           além de <link linkend="context.http">opções de contexto HTTP</link> selecionadas:
           <literal>content_type</literal>, <literal>header</literal>,
           <literal>max_redirects</literal>, <literal>protocol_version</literal>,
           e <literal>user_agent</literal>.
          </para>
          <para>
           Observe que os seguintes cabeçalhos HTTP são gerados automaticamente ou de outras
           opções e será ignorado se especificado na opçãod e contexto <literal>'header'</literal>:
           <literal>host</literal>, <literal>connection</literal>,
           <literal>user-agent</literal>, <literal>content-length</literal>,
           <literal>content-type</literal>, <literal>cookie</literal>,
           <literal>authorization</literal> e <literal>proxy-authorization</literal>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.features">
         <term>
          <parameter>features</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Uma máscara de bits para ativar um ou mais dos seguintes recursos:
           <variablelist>
            <varlistentry>
             <term>
              <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant>
             </term>
             <listitem>
              <para>
               Ao decodificar uma resposta para um array, o comportamento padrão é detectar se
               um nome de elemento aparece uma ou várias vezes em um elemento pai específico.
               Para elementos que aparecem apenas uma vez, uma propriedade de objeto permite acesso direto ao
               conteúdo; para elementos que aparecem mais de uma vez, a propriedade contém um
               array com o conteúdo de cada elemento correspondente.
              </para>
              <para>
               Se o recurso <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant> estiver ativado,
               elementos que aparecem apenas uma vez são colocados em um array de elemento único, de modo que
               o acesso é consistente para todos os elementos. Isso só tem efeito ao usar um WSDL
               contendo um esquema para a resposta. Consulte a seção Exemplos para obter uma ilustração.
              </para>
             </listitem>
            </varlistentry>
            <varlistentry>
             <term>
              <constant>SOAP_USE_XSI_ARRAY_TYPE</constant>
             </term>
             <listitem>
              <para>
               Quando a <link linkend="soapclient.construct.options.use">opção <literal>use</literal>
               </link> ou propriedade WSDL está definida como <literal>encoded</literal>,
               força arrays a usar um tipo de <literal>SOAP-ENC:Array</literal>, em vez de um
               tipo específico do esquema.
              </para>
             </listitem>
            </varlistentry>
            <varlistentry>
             <term>
              <constant>SOAP_WAIT_ONE_WAY_CALLS</constant>
             </term>
             <listitem>
              <para>
               Aguarda uma resposta mesmo que o WSDL indique uma solicitação unidirecional.
              </para>
             </listitem>
            </varlistentry>
           </variablelist>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.keep-alive">
         <term>
          <parameter>keep_alive</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           um valor booleano que define se
           envia o cabeçalho <literal>Connection: Keep-Alive</literal> ou
           <literal>Connection: close</literal>.
          </para>
          <para>
           O padrão é &true;
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.ssl-method">
         <term>
          <parameter>ssl_method</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Especifica a versão do protocolo SSL ou TLS a ser usada com conexões HTTP
           seguras, em vez da negociação padrão.
           Especificando <constant>SOAP_SSL_METHOD_SSLv2</constant>
           ou <constant>SOAP_SSL_METHOD_SSLv3</constant> forçará o uso de SSL 2
           ou SSL 3, respectivamente.
           Especificar <constant>SOAP_SSL_METHOD_SSLv23</constant> não tem efeito;
           a constante existe apenas para compatibilidade com versões anteriores.
           A partir do PHP 7.2, especificando <constant>SOAP_SSL_METHOD_TLS</constant>
           também não tem efeito; nas versões anteriores, forçava o uso do TLS 1.0.
          </para>
          <para>
           Observe que as versões 2 e 3 do SSL são consideradas inseguras e não podem
           ser suportado pela biblioteca OpenSSL instalada.
          </para>
          <para>
           Esta opção está <emphasis>DESCONTINUADA</emphasis> a partir do PHP 8.1.0.
           Uma alternativa mais flexível, que permite especificar
           versões individuais do TLS, é usar a
           <link linkend="soapclient.construct.options.stream-context">
           opção <parameter>stream_context</parameter></link> com
           o parâmetro de contexto 'crypto_method'.
           <example>
            <title>Especificando o uso somente do TLS 1.3</title>
            <programlisting role="php">
<![CDATA[
<?php
$context = stream_context_create([
    'ssl' => [
        'crypto_method' => STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT
     ]
]);
$client = new SoapClient("some.wsdl", ['context' => $context]);
]]>
            </programlisting>
           </example>
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <methodname>SoapClient::__construct</methodname> irá gerar um erro
   <constant>E_ERROR</constant> se as opções <literal>location</literal> e
   <literal>uri</literal> não são fornecidas no modo não WSDL.
  </para>
  <para>
   Uma exceção <classname>SoapFault</classname> será lançada se o
   URI <parameter>wsdl</parameter> não pode ser carregado.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Exemplo de <methodname>SoapClient::__construct</methodname>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$client = new SoapClient("some.wsdl");

$client = new SoapClient("some.wsdl", array('soap_version'   => SOAP_1_2));

$client = new SoapClient("some.wsdl", array('login'          => "some_name",
                                            'password'       => "some_password"));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080,
                                            'proxy_login'    => "some_name",
                                            'proxy_password' => "some_password"));

$client = new SoapClient("some.wsdl", array('local_cert'     => "cert_key.pem"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/",
                                     'style'    => SOAP_DOCUMENT,
                                     'use'      => SOAP_LITERAL));

$client = new SoapClient("some.wsdl",
  array('compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | 9));

$client = new SoapClient("some.wsdl", array('encoding'=>'ISO-8859-1'));

class MyBook {
    public $title;
    public $author;
}

$client = new SoapClient("books.wsdl", array('classmap' => array('book' => "MyBook")));

$typemap = array(
    array("type_ns"  => "http://schemas.example.com",
         "type_name" => "book",
         "from_xml"  => "unserialize_book",
         "to_xml"    => "serialize_book")
);
$client = new SoapClient("books.wsdl", array('typemap' => $typemap));

?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>Usando o recurso <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant></title>
    <programlisting role="php">
<![CDATA[
/* Assumindo uma resposta como esta e um WSDL apropriado:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:example">
    <SOAP-ENV:Body>
        <response>
            <collection>
                <item>Single</item>
            </collection>
            <collection>
                <item>First</item>
                <item>Second</item>
            </collection>
        </response>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
*/

echo "Default:\n";

$client = new TestSoapClient(__DIR__ . '/temp.wsdl');
$response = $client->exampleRequest();
var_dump( $response->collection[0]->item );
var_dump( $response->collection[1]->item );

echo "\nWith SOAP_SINGLE_ELEMENT_ARRAYS:\n";

$client = new TestSoapClient(__DIR__ . '/temp.wsdl', ['features' => SOAP_SINGLE_ELEMENT_ARRAYS]);
$response = $client->exampleRequest();
var_dump( $response->collection[0]->item );
var_dump( $response->collection[1]->item );
]]>
    </programlisting>

    &example.outputs;

    <screen>
<![CDATA[
Default:
string(6) "Single"
array(2) {
  [0] =>
  string(5) "First"
  [1] =>
  string(6) "Second"
}

With SOAP_SINGLE_ELEMENT_ARRAYS:
array(1) {
  [0] =>
  string(6) "Single"
}
array(2) {
  [0] =>
  string(5) "First"
  [1] =>
  string(6) "Second"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
