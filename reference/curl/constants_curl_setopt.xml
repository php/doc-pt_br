 <variablelist role="constant_list"><!-- EN-Revision: 9bbcd47e469474bbee6ab59061d49bbb9266692e Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
  <title><function>curl_setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Habilita o uso de um soquete de domínio Unix abstrato ao invés de
     estabelecer uma conexão TCP a um servidor e define o caminho para
     a <type>string</type> informada. Esta opção compatilha da mesma semântica
     de <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Estas duas opções
     compartilham o mesmo armazenamento e portanto somente uma delas pode ser definida
     por identificador.
     Disponível a partir do PHP 7.3.0 e cURL 7.53.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-accept-encoding">
   <term>
    <constant>CURLOPT_ACCEPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com o conteúdo
     do cabeçalho <literal>Accept-Encoding:</literal> enviado em uma requisição HTTP.
     Se definida para &null;, desabilita o envio do cabeçalho <literal>Accept-Encoding:</literal>.
     O padrão é &null;.
     Disponível a partir do cURL 7.21.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-accepttimeout-ms">
   <term>
    <constant>CURLOPT_ACCEPTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número máximo de milissegundos de espera para que um servidor
     se conecte novamente ao cURL quando uma conexão FTP ativa é usada.
     Esta opção aceita qualquer valor que possa ser convertido em um <type>int</type> válido.
     O padrão é <literal>60000</literal> milissegundos.
     Disponível a partir do cURL 7.24.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-address-scope">
   <term>
    <constant>CURLOPT_ADDRESS_SCOPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O valor do ID do escopo a ser usado ao conectar-se a endereços IPv6.
     Esta opção aceita qualquer valor que possa ser convertido em um <type>int</type> válido.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passa uma <type>string</type> com o nome do arquivo para o cURL usar como o arquivo de cache Alt-Svc para leitura de conteúdo de cache existente
     e possivelmente também gravar de volta após uma transferência, a menos que <constant>CURLALTSVC_READONLYFILE</constant>
     esteja definido <constant>CURLOPT_ALTSVC_CTRL</constant>.
     Disponível a partir do PHP 8.2.0 e cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Popula a máscara de bits com o conjunto correto de recursos para instruir o cURL sobre como lidar com Alt-Svc para as
     transferências usando este identificador. cURL somente aceita cabeçalhos Alt-Svc através de HTTPS. Também irá completar
     uma requisição para uma origem alternativa se essa origem for apropriadamente servida através de HTTPS.
     Definir qualquer bit irá habilitar o motor Alt-svc.
     Pode ser uma das
     constantes <constant>CURLALTSVC_<replaceable>*</replaceable></constant>.
     O padrão é o motor Alt-svc desabilitado.
     Disponível a partir do PHP 8.2.0 e cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-append">
   <term>
    <constant>CURLOPT_APPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definir esta opção como <literal>1</literal> fará com que os uploads de FTP sejam
     anexados ao arquivo remoto em vez de sobrescrevê-lo.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para definir automaticamente o campo <literal>Referer:</literal> nas
     requisições onde ele segue um redirecionamento <literal>Location:</literal>.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Fornece autenticação de assinatura AWS V4 em cabeçalho HTTP(S) como uma <type>string</type>.
     Esta opção substitui qualquer outros tipos de autenticação que tenham sido definidos em
     <constant>CURLOPT_HTTPAUTH</constant>. Este método não pode ser combinado com outros tipos de autenticação.
     Disponível a partir do PHP 8.2.0 e cURL 7.75.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Esta constante não é mais usada desde o PHP 5.5.0.
     Descontinuada a partir do PHP 8.4.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tamanho do buffer a ser usado para cada leitura. Entretanto, não há garantia
     de que esta requisição será cumprida.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     O padrão é <constant>CURL_MAX_WRITE_SIZE</constant> (atualmente, 16kB).
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome de um arquivo contendo um ou mais certificados com o qual
     o par será verificado. Só faz sentido se usado em combinação com
     <constant>CURLOPT_SSL_VERIFYPEER</constant>. Pode requerer um caminho absoluto.
     Disponível a partir do cURL 7.4.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome de um arquivo PEM contendo um ou mais certificados com o qual
     o par será verificado. Esta opção substitui a <constant>CURLOPT_CAINFO</constant>.
     Disponível a partir do PHP 8.2.0 e cURL 7.77.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o diretótio que mantém múltiplos certificados CA.
     Use esta opção junto com <constant>CURLOPT_SSL_VERIFYPEER</constant>.
     Disponível a partir do cURL 7.9.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o tempo máximo em segundo que qualquer armazenamento de certificado CA em cache na memória
     pode ser mantido e reutilizado para novas conexões.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     O padrão é <literal>86400</literal> (24 horas).
     Disponível a partir do PHP 8.3.0 e cURL 7.87.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para enviar informação de certificação SSL para <constant>STDERR</constant>
     em transferências seguras.
     Requer <constant>CURLOPT_VERBOSE</constant> ligada para ter efeito.
     O padrão é &false;.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de segundos a esperar durante tentativa de conexão. Use 0 para
     esperar indefinidamente.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     O padrão é <literal>300</literal>.
     Disponível a partir do cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de milissegundos a esperar durante tentativa de conexão.
     Use <literal>0</literal> para esperar indefinidamente.
     Se o cURL tiver sido compilado para usar resolução de nome padrão do sistema, esta
     porção da conexão ainda usará a resolução de segundos inteiros para
     limites de tempo com um tempo mínimo permitido de um segundo.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     O padrão é <literal>300000</literal>.
     Disponível a partir do cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; informa à biblioteca para realizar toda a autenticação de proxy requerida
     e configuração de conexão, mas sem transferência de dados. Esta opção está implementada para
     HTTP, SMTP e POP3.
     O padrão é &false;.
     Disponível a partir do cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Conecta a um servidor e porta específicos ao invés do servidor e porta da URL.
     Aceita um <type>array</type> de <type>string</type>s com o formato
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
     Disponível a partir do PHP 7.0.7 e cURL 7.49.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o conteúdo do cabeçalho <literal>Cookie: </literal> a ser usado na requisição HTTP.
     Observe que cookies múltiplos são separados por ponto-e-vírgula seguido de
     um espaço (ex.: <literal>fruit=apple; colour=red</literal>).
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do arquivo contendo os dados do cookie.
     O arquivo de cookie pode ser no formato Netscape ou apenas cabeçalhos puros no estilo HTTP gravados em um arquivo.
     Se o nome for uma <type>string</type> vazia, nenhum cookie é carregado, porém
     o gerenciamento de cookies ainda estará habilitado.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do arquivo para gravar todos os cookies internos para quando o
     destrutor do identificador for chamado.
     Disponível a partir do cURL 7.9.0.
     <warning>
      <simpara>
       A partir do PHP 8.0.0, <function>curl_close</function> não tem função
       e <emphasis>NÃO</emphasis> destrói o identificador.
       Se for necessário gravar cookies antes do identificador ser destruido
       automaticamente, chame <function>unset</function> no identificador.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> de cookie (isto é, uma linha única no formato Netscape/Mozilla ou um
     cabeçalho Set-Cookie no estilo HTTP) adiciona esse cookie único ao armazenamento interno de cookies.
     <simplelist type="inline">
      <member>
       <literal>ALL</literal>
       apaga todos os cookies da memória
      </member>
      <member>
       <literal>SESS</literal>
       apaga todos os cookies de sessão mantidos na memória
      </member>
      <member>
       <literal>FLUSH</literal>
       grava todos os cookies conhecidos no arquivo especificado por <constant>CURLOPT_COOKIEJAR</constant>
      </member>
      <member>
       <literal>RELOAD</literal>
       carrega todos os cookies dos arquivos especificados por <constant>CURLOPT_COOKIEFILE</constant>
      </member>
     </simplelist>.
     Disponível a partir do cURL 7.14.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para marcar esta como uma nova "sessão" de cookie. Irá forçar o cURL
     a ignorar todos os cookies que estiverem para ser carregados que sejam "cookies de sessão"
     da sessão anterior. Por padrão, o cURL sempre guarda e
     carrega todos os cookies, independente se houver cookies de sessão ou não.
     Cookies de sessão são cookies sem data de expiração que devem
     existir apenas durante esta "sessão".
     Disponível a partir do cURL 7.9.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para converter novas linhas Unix para novas linhas CRLF
     nas transferências.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlfile">
   <term>
    <constant>CURLOPT_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passa uma <type>string</type> nomeando um arquivo com a concatenação da
     CRL (Certificate Revocation List) (em formato PEM)
     para utilização na validação do certificado que ocorre durante a troca SSL.
     Quando cURL é construído para usar GnuTLS,
     não há como influenciar o uso da CRL passada
     para ajudar no processo de verificação.
     Quando cURL é construído com suporte OpenSSL,
     ambas <literal>X509_V_FLAG_CRL_CHECK</literal>
     e <literal>X509_V_FLAG_CRL_CHECK_ALL</literal> estarão definidas,
     exigindo verificação de CRL em todos os elementos da cadeia de certificados
     se um arquivo CRL for passado.
     Observe também que <constant>CURLOPT_CRLFILE</constant> implica
     em <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>
     a partir do cURL 7.71.0 devido a um problema do OpenSSL.
     Disponível a partir do cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um método de requisição customizado a ser usado no lugar de
     <literal>GET</literal> ou <literal>HEAD</literal> ao fazer
     uma requisição HTTP. Isto é útil para fazer
     <literal>DELETE</literal> ou outras requisições HTTP mais obscuras.
     Valores válidos são por exemplo <literal>GET</literal>,
     <literal>POST</literal>, <literal>CONNECT</literal> entre outros;
     Não insira aqui uma requisição HTTP inteira. Por exemplo,
     escrever <literal>GET /index.html HTTP/1.0\r\n\r\n</literal>
     estaria incorreto.
     Esta opção aceita uma <type>string</type> ou &null;.
     Disponível a partir do cURL 7.1.0.
     <note>
      <para>
       Isto não deve ser feito sem primeiro garantir que o servidor suporta o método
       de requisição.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o protocolo padrão a ser usado se a URL não tiver um nome de esquema.
     Disponível a partir do PHP 7.0.7 e cURL 7.45.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dirlistonly">
   <term>
    <constant>CURLOPT_DIRLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definir esta opção como <literal>1</literal> terá efeitos diferentes
     com base no protocolo com o qual é usada.
     URLs baseados em FTP e SFTP listarão apenas os nomes dos arquivos em um diretório.
     POP3 listará a mensagem ou mensagens de e-mail no servidor POP3.
     Para FILE, esta opção não tem efeito,
     pois os diretórios são sempre listados neste modo.
     Usar esta opção com <constant>CURLOPT_WILDCARDMATCH</constant>
     impedirá que este último tenha qualquer efeito.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para não permitir URLs que incluem um nome de usuário.
     Nomes de usuário são permitidos por padrão.
     Disponível a partir do PHP 7.3.0 e cURL 7.61.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de segundos para manter as entradas DNS na memória. Esta
     opção é definida para <literal>120</literal> (2 minutos) por padrão.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o nome da interface de rede à qual a resolução de DNS deve vincular.
     Precisa ser um nome de interface (não um endereço).
     Esta opção aceita uma <type>string</type> ou &null;.
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o endereço IPv4 local ao qual a resolução DNS deve vincular.
     O argumento deve conter um único endereço numérico IPv4.
     Esta opção aceita uma <type>string</type> ou &null;.
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o endereço IPv6 local ao qual a resolução DNS deve vincular.
     O argumento deve conter um único endereço numérico IPv6.
     Esta opção aceita uma <type>string</type> ou &null;.
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-servers">
   <term>
    <constant>CURLOPT_DNS_SERVERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passa uma <type>string</type> com uma lista separada por vírgulas de servidores DNS a serem usados
     ​​em vez do padrão do sistema
     (ex.: <literal>192.168.1.100,192.168.1.101:8080</literal>).
     Disponível a partir do cURL 7.24.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para embaralhar a ordem de todos os endereços de retorno de forma que sejam usados
     em ordem aleatória, quando um nome é resolvido e mais de um endereço IP é retornado.
     Isso pode fazer com que IPv4 seja usado antes de IPv6 ou vice-versa.
     Disponível a partir do PHP 7.3.0 e cURL 7.60.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para usar cache de DNS global. Esta opção não é segura para threads.
     É condicionalmente habilitada por padrão se o PHP for compilado sem uso de threads
     (CLI, FCGI, Apache2-Prefork, etc.).
     Disponível a partir do cURL 7.9.3 e descontinuada a partir do cURL 7.11.1.
     A partir do PHP 8.4, esta opção não tem mais qualquer efeito.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida como <literal>2</literal> verifica os campos de nome de certificado SSL do servidor de DNS-sobre-HTTPS, comparando com o nome do host.
     Disponível a partir do PHP 8.2.0 e cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida como <literal>1</literal> habilita e como <literal>0</literal> desabilita
     a verificação da autenticidade do certificado SSL do servidor de DNS-sobre-HTTPS.
     Disponível a partir do PHP 8.2.0 e cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida como <literal>1</literal> habilita e como <literal>0</literal> desabilita
     a verificação do status do certificado do servidor de DNS-sobre-HTTPS
     usando a extensão TLS "Certificate Status Request" (grampeamento OCSP).
     Disponível a partir do PHP 8.2.0 e cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Fornece a URL do DNS-sobre-HTTPS.
     Esta opção aceita uma <type>string</type> ou &null;.
     Disponível a partir do PHP 8.1.0 e cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Similar a <constant>CURLOPT_RANDOM_FILE</constant>, exceto por um nome de arquivo
     para um soquete "Entropy Gathering Daemon".
     Disponível a partir do cURL 7.7.0 e descontinuada a partir do cURL 7.84.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O conteúdo do cabeçalho <literal>Accept-Encoding: </literal> com uma <type>string</type>.
     Isto habilita a decodificação da responsta. Codificações suportadas são:
     <simplelist type="inline">
      <member><literal>identity</literal></member>
      <member><literal>deflate</literal></member>
      <member><literal>gzip</literal></member>
     </simplelist>.
     Se uma <type>string</type> vazia for informada,
     é enviado um cabeçalho contendo todas os tipos de codificação.
     Disponível a partir do cURL 7.10 e descontinuada a partir do cURL 7.21.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O limite de tempo para respostas <literal>Expect: 100-continue</literal> em milissegundos.
     O padrão é <literal>1000</literal> milissegundos.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do PHP 7.0.7 e cURL 7.36.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para falhar prolixamente se o código HTTP retornado
     for maior ou igual a <literal>400</literal>. O comportamento padrão é retornar
     a página normalmente, ignorando o código.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita um <type>resource</type> identificador de arquivo
     no qual a transferência deve ser gravada.
     O padrão é <constant>STDOUT</constant> (a janela do navegador).
     Disponível a partir do cURL 7.1.0 e descontinuada a partir do cURL 7.9.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para tentar buscar a data de modificação
     do documento remoto. Este valor pode ser buscado usando-se
     a opção <constant>CURLINFO_FILETIME</constant> com
     <function>curl_getinfo</function>.
     Disponível a partir do cURL 7.5.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fnmatch-function">
   <term>
    <constant>CURLOPT_FNMATCH_FUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passa um tipo <type>callable</type> que será usado para correspondência com caracteres coringas.
     A assinatura desta função deve ser:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>pattern</parameter></term>
       <listitem>
        <simpara>
         A expressão com coringas.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>string</parameter></term>
       <listitem>
        <simpara>
         A <type>string</type> na qual a correspodência com coringas será executada.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     A função deve retornar
     <constant>CURL_FNMATCHFUNC_MATCH</constant> se a expressão corresponder à <type>string</type>,
     <constant>CURL_FNMATCHFUNC_NOMATCH</constant> se não corresponder
     ou <constant>CURL_FNMATCHFUNC_FAIL</constant> se um erro ocorrer.
     Disponível a partir do cURL 7.21.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para seguir qualquer cabeçalho <literal>Location: </literal> que o servidor envia como
     parte do cabeçalho HTTP.
     Consulte também <constant>CURLOPT_MAXREDIRS</constant>.
     Esta constante não está disponível quando <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>
     está habilitada.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para forçar a conexão a ser fechada
     explicitamente ao terminar o processamento, e não ser enfileirada para reúso.
     Disponível a partir do cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para forçar o uso de uma nova conexão
     ao invés de uma em cache.
     Disponível a partir do cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para anexar ao arquivo remoto ao invés de
     sobrescrevê-lo.
     Disponível a partir do cURL 7.1.0 e descontinuada a partir do cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um apelido para
     <constant>CURLOPT_TRANSFERTEXT</constant>. Use este último.
     Disponível a partir do cURL 7.1, descontinuada a partir do cURL 7.11.1
     e pela última vez disponível no cURL 7.15.5.
     Removida a partir do PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para apenas listar os nomes de um diretório FTP.
     Disponível a partir do cURL 7.1.0 e descontinuada a partir do cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> que será usada para obter o endereço IP para a instrução FTP <literal>PORT</literal>. A instrução <literal>PORT</literal> solicita
     ao servidor remoto que se conecte ao endereço IP especificado. A
     <type>string</type> pode ser um endereço IP puro, um nome de servidor,
     um nome de interface de rede (no Unix),
     ou apenas um hífen <literal>-</literal> para usar o endereço IP padrão do sistema.
     Esta opção aceita uma <type>string</type> ou &null;.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o método de autenticação FTP sobre SSL (se ativado) para qualquer das
     constantes <constant>CURLFTPAUTH_<replaceable>*</replaceable></constant>.
     O padrão é <constant>CURLFTPAUTH_DEFAULT</constant>.
     Disponível a partir do cURL 7.12.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-account">
   <term>
    <constant>CURLOPT_FTP_ACCOUNT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passe uma <type>string</type> que será enviada como informação da conta via FTP
     (usando o comando <literal>ACCT</literal>) depois que o nome de usuário e a senha forem fornecidos
     ao servidor.
     Se definida como &null;, desativa o envio das informações da conta.
     O padrão é &null;.
     Disponível a partir do cURL 7.13.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-alternative-to-user">
   <term>
    <constant>CURLOPT_FTP_ALTERNATIVE_TO_USER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passa uma <type>string</type> que será usada para tentativa de autenticação por FTP
     se a negociação <literal>USER/PASS</literal> falhar.
     Disponível a partir do cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para criar diretórios ausentes quando uma operação FTP
     encontrar um caminho que não existe atualmente.
     Disponível a partir do cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Informa ao cURL que método deve ser usado para alcançar um arquivo em um servidor FTP(S). Valores possíveis são
     quaisquer das constantes <constant>CURLFTPMETHOD_<replaceable>*</replaceable></constant>.
     O padrão é <constant>CURLFTPMETHOD_MULTICWD</constant>.
     Disponível a partir do cURL 7.15.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-response-timeout">
   <term>
    <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um tempo limite em segundos em que o cURL aguardará uma resposta de um servidor FTP.
     Esta opção substitui <constant>CURLOPT_TIMEOUT</constant>.
     Esta opção aceita qualquer valor que possa ser convertido em um <type>int</type> válido.
     Este nome de opção foi substituído por <constant>CURLOPT_SERVER_RESPONSE_TIMEOUT</constant>,
     disponível a partir do PHP 8.4.0.
     Disponível a partir do cURL 7.10.8 e descontinuado a partir do cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-skip-pasv-ip">
   <term>
    <constant>CURLOPT_FTP_SKIP_PASV_IP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se esta opção for definida como <literal>1</literal>,
     o cURL não usará o endereço IP que o servidor sugere
     em sua resposta 227 ao comando <literal>PASV</literal> do cURL,
     mas usará o endereço IP usado para o conexão.
     O número da porta recebido da resposta 227 não será ignorado pelo cURL.
     O padrão é <literal>1</literal> a partir do cURL 7.74.0.
     e <literal>0</literal> antes disso.
     Disponível a partir do cURL 7.15.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do cURL 7.11.0 e descontinuada a partir do cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl-ccc">
   <term>
    <constant>CURLOPT_FTP_SSL_CCC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Esta opção faz com que o cURL use CCC (Clear Command Channel),
     que desliga a camada SSL/TLS após a autenticação,
     tornando o restante da comunicação do canal de controle descriptografado.
     Use uma das constantes <constant>CURLFTPSSL_CCC_<replaceable>*</replaceable></constant>.
     O padrão é <constant>CURLFTPSSL_CCC_NONE</constant>.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para usar <literal>EPRT</literal> (e <literal>LPRT</literal>) ao realizar downloads
     FTP ativos. Use &false; para desabilitar <literal>EPRT</literal> e <literal>LPRT</literal> e usar <literal>PORT</literal> somente.
     Disponível a partir do cURL 7.10.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para primeiro tentar um comando <literal>EPSV</literal> para transferências FTP antes de reverter para <literal>PASV</literal>.
     Defina como &false; para desabilitar <literal>EPSV</literal>.
     Disponível a partir do cURL 7.9.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-pret">
   <term>
    <constant>CURLOPT_FTP_USE_PRET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida para <literal>1</literal>, envia um comando <literal>PRET</literal>
     antes de <literal>PASV</literal> (e <literal>EPSV</literal>).
     Não tem efeito ao usar o modo ativo de transferências FTP.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-gssapi-delegation">
   <term>
    <constant>CURLOPT_GSSAPI_DELEGATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida como <constant>CURLGSSAPI_DELEGATION_FLAG</constant>,
     permite a delegação incondicional de credenciais GSSAPI.
     Definida como <constant>CURLGSSAPI_DELEGATION_POLICY_FLAG</constant>,
     delega somente se a opção <literal>OK-AS-DELEGATE</literal> estiver definida
     no ticket de serviço.
     O padrão é <constant>CURLGSSAPI_DELEGATION_NONE</constant>.
     Disponível a partir do cURL 7.22.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Tempo para o IPv6 começar à frente no algoritmo "happy eyeballs". Este algoritmo tenta
     a conexão simutânea a endereços IPv4 e IPv6 para servidores de pilha dupla,
     preferindo IPv6 primeiro pelo tempo especificado em milissegundos.
     O padrão é <constant>CURL_HET_DEFAULT</constant>, que atualmente é de 200 milissegundos.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do PHP 7.3.0 e cURL 7.59.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para enviar um cabeçalho de protocolo <literal>PROXY</literal> HAProxy v1 no início da conexão.
     A ação padrão é não enviar este cabeçalho.
     Disponível a partir do PHP 7.3.0 e cURL 7.60.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para incluir o cabeçalho na saída enviada à função de retorno
     definida por <constant>CURLOPT_WRITEFUNCTION</constant>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno do tipo <type>callable</type> com a seguinte assinatura:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>headerData</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>headerData</parameter></term>
       <listitem>
        <simpara>
         Os dados de cabeçalho que precisam ser escritos pela função.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     A função deve retornar o número de bytes escritos.
     Disponível a partir do cURL 7.7.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Evia cabeçalhos HTTP tanto para prooxy quanto para host, ou separadamente.
     Valores possíveis são quaisquer
     das constantes <constant>CURLHEADER_<replaceable>*</replaceable></constant>.
     O padrão é <constant>CURLHEADER_SEPARATE</constant> a partir do cURL
     7.42.1, e <constant>CURLHEADER_UNIFIED</constant> antes dessa versão.
     Disponível a partir do PHP 7.0.7 e cURL 7.37.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do arquivo de cache HSTS (HTTP Strict Transport Security).
     ou &null; para permitir HSTS sem ler ou escrever em qualuqer arquivo
     e limpar a lista de arquivos dos quais os dados HSTS são lidos.
     Disponível a partir do PHP 8.2.0 e cURL 7.74.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita uma máscara de bits de recursos HSTS (HTTP Strict Transport Security)
     definidos pelas constantes <constant>CURLHSTS_<replaceable>*</replaceable></constant>.
     Disponível a partir do PHP 8.2.0 e cURL 7.74.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Informa se respostas HTTP/0.9 são permitidas. O padrão é &false; a partir do cURL 7.66.0;
     anteriormente o padrão era &true;.
     Disponível a partir do PHP 7.3.15 e 7.4.3, respectivamente, e cURL 7.64.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um <type>array</type> de respostas HTTP <literal>200</literal> que serão tratadas como respostas válidas e não como erros.
     Disponível a partir do cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits dos métodos de autenticação HTTP a serem usados. As opções são:
     <simplelist type="inline">
      <member><constant>CURLAUTH_BASIC</constant></member>
      <member><constant>CURLAUTH_DIGEST</constant></member>
      <member><constant>CURLAUTH_GSSNEGOTIATE</constant></member>
      <member><constant>CURLAUTH_NTLM</constant></member>
      <member><constant>CURLAUTH_AWS_SIGV4</constant></member>
      <member><constant>CURLAUTH_ANY</constant></member>
      <member><constant>CURLAUTH_ANYSAFE</constant></member>
     </simplelist>.
     Se mais de um método for usado, o cURL irá consultar o servidor para ver
     que métodos ele suporta e escolherá o melhor.
     <constant>CURLAUTH_ANY</constant> liga todos os bits. O cURL selecionará automaticamente
     o que ele considerar o mais seguro.
     <constant>CURLAUTH_ANYSAFE</constant> liga todos os bits exceto o <constant>CURLAUTH_BASIC</constant>.
     O cURL selecionará automaticametne o que ele considerar o mais seguro.
     Disponível a partir do cURL 7.10.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para redefinir o método de requisição HTTP para <literal>GET</literal>. Como <literal>GET</literal> é o padrão, isto somente é necessário se o método
     de requisição tiver sido alterado.
     Disponível a partir do cURL 7.8.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um <type>array</type> de campos de cabeçalho HTTP a definir, no formato
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para encapsular através de um determinado proxy HTTP.
     Disponível a partir do cURL 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para obter o corpo de resposta HTTP bruto.
     Disponível a partir do cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-transfer-decoding">
   <term>
    <constant>CURLOPT_HTTP_TRANSFER_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se definida para <literal>0</literal>, a decodificação de transferência é desabilitada.
     Se definida como <literal>1</literal>, a decodificação de transferência é habilitada.
     O cURL faz decodificação de transferência em partes por padrão,
     a menos que esta opção esteja definida como <literal>0</literal>.
     O padrão é <literal>1</literal>.
     Disponível a partir do cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina para uma das constantes
     <constant>CURL_HTTP_VERSION_<replaceable>*</replaceable></constant>
     para que o CURL use a versão especificada.
     Disponível a partir do cURL 7.9.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ignore-content-length">
   <term>
    <constant>CURLOPT_IGNORE_CONTENT_LENGTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se definida como <literal>1</literal>,
     ignora o cabeçalho <literal>Content-Length</literal> na resposta HTTP
     e ignore a solicitação ou dependência dele para transferências FTP.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.14.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita um <type>resource</type> identificador do arquivo
     a ser lido pela transferência durante o envio.
     Disponível a partir do cURL 7.1.0 e descontinuada a partir do cURL 7.9.7.
     Use <constant>CURLOPT_READDATA</constant> em seu lugar.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tamanho esperado do arquivo, em bytes, ao enviá-lo a
     um servidor remoto. Observe que usar esta opção não impedirá que o cURL
     envie mais dados, já que o que exatamente será enviado depende de
     <constant>CURLOPT_READFUNCTION</constant>.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita uma <type>string</type> com o nome da interface de rede de saída a ser usada.
     Pode ser um nome de interface, um endereço IP ou um nome de servidor.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Permite que uma aplicação selecione que tipo de endereço IP deve ser usado ao
     resolver nomes de servidor. Isto é interessante somente ao usar nomes de servidor
     resolvam endereços usando mais que uma versão de IP.
     Defina para uma das constantes
     <constant>CURL_IPRESOLVE_<replaceable>*</replaceable></constant>.
     O padrão é <constant>CURL_IPRESOLVE_WHATEVER</constant>.
     Disponível a partir do cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert">
   <term>
    <constant>CURLOPT_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se definida como uma <type>string</type> nomeando um arquivo que contém um certificado CA no formato PEM,
     uma verificação adicional no certificado de mesmo nível é executada
     para verificar se o emissor é de fato aquele associado
     ao certificado fornecido pela opção.
     Para que o resultado da verificação seja considerado uma falha,
     esta opção deve ser utilizada em combinação com a
     opção <constant>CURLOPT_SSL_VERIFYPEER</constant>.
     Disponível a partir do cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Passe uma <type>string</type> com dados binários de um certificado de CA SSL no formato PEM.
     Se definida, uma verificação adicional do certtificado do par é realizada
     para verificar se o emissor é o associado com o certificado fornecido pela opção.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para continuar enviando o corpo da requisição se o código HTTP retornado for igual ou maior que <literal>300</literal>.
     A ação padrão seria parar o envio
     e fechar o fluxo ou a conexão. Adequado para autenticação NTLM manual.
     A maior parte das aplicações não precisa desta opção.
     Disponível a partir do PHP 7.3.0 e cURL 7.51.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita uma <type>string</type> com a senha requerida para usar a chave privada <constant>CURLOPT_SSLKEY</constant>
     ou <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
     Definir esta opção para &null; desabilita o uso de uma senha para estas opções.
     Disponível a partir do cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nível de segurança KRB4 (Kerberos 4). Qualquer dos valores <type>string</type> a seguir é válido
     (na ordem do menos para o mais potente):
     <simplelist type="inline">
      <member><literal>clear</literal></member>
      <member><literal>safe</literal></member>
      <member><literal>confidential</literal></member>
      <member><literal>private</literal></member>
     </simplelist>.
     Se a <type>string</type> não corresponder a uma dessas opções,
     <literal>private</literal> é usada. Definir esta opção como &null;
     irá desabilitar a segurança KRB4. Atualmente, a segurança KRB4 funciona somente
     com transações FTP.
     Disponível a partir do cURL 7.3.0 e descontinuada a partir do cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krblevel">
   <term>
    <constant>CURLOPT_KRBLEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o nível de segurança Kerberos para FTP e também habilita o reconhecimento de Kerberos.
     Isso deve ser definido como uma das seguintes <type>string</type>s:
     <simplelist type="inline">
      <member><literal>clear</literal></member>
      <member><literal>safe</literal></member>
      <member><literal>confidential</literal></member>
      <member><literal>private</literal></member>
     </simplelist>.
     Se a <type>string</type> estiver definida, mas não corresponder a nenhuma delas,
     <literal>private</literal> será usada.
     Definir esta opção como &null; desativará o suporte Kerberos para FTP.
     O padrão é &null;.
     Disponível a partir do cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localport">
   <term>
    <constant>CURLOPT_LOCALPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o número da porta local do soquete usado para a conexão.
     Esta opção aceita qualquer valor que possa ser convertido em um <type>int</type> válido.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localportrange">
   <term>
    <constant>CURLOPT_LOCALPORTRANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de tentativas que o cURL faz para encontrar um número de porta local funcional,
     começando com aquele definido com <constant>CURLOPT_LOCALPORT</constant>.
     Esta opção aceita qualquer valor que possa ser convertido em um <type>int</type> válido.
     O padrão é <literal>1</literal>.
     Disponível a partir do cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pode ser usada para definir opções de login específicas do protocolo, tal como o
     mecanismos preferível de autenticação via <literal>AUTH=NTLM</literal> ou <literal>AUTH=*</literal>, e deve ser usada em conjunto com a
     opção <constant>CURLOPT_USERNAME</constant>.
     Disponível a partir do PHP 7.0.7 e cURL 7.34.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A velocidade de transferência, em bytes por segundo, em que a transferência deve ficar
     abaixo durante a contagem de <constant>CURLOPT_LOW_SPEED_TIME</constant>
     segundos antes que o PHP considere que a transferência está muito lenta e aborte.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número de segundos que a velocidade de transferência deve estar abaixo de
     <constant>CURLOPT_LOW_SPEED_LIMIT</constant> antes que o PHP considere
     a transferência muito lenta e aborte.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-auth">
   <term>
    <constant>CURLOPT_MAIL_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com o endereço de autenticação (identidade)
     de uma mensagem enviada que está sendo retransmitida para outro servidor.
     O endereço não deve ser especificado entre parênteses angulares
     (<literal>&gt;&lt;</literal>).
     Se uma <type>string</type> vazia for usada, um par de parênteses angulares será enviado pelo cURL
     conforme exigido pela RFC 2554.
     Disponível a partir do cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-from">
   <term>
    <constant>CURLOPT_MAIL_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com o endereço de e-mail do remetente ao enviar mensagens SMTP.
     O endereço de e-mail deve ser especificado entre parênteses angulares
     (<literal>&gt;&lt;</literal>) ao redor dele,
     que se não forem especificados serão adicionados automaticamente.
     Se este parâmetro não for especificado, um endereço vazio será enviado
     ao servidor SMTP, o que poderá fazer com que o e-mail seja rejeitado.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt">
   <term>
    <constant>CURLOPT_MAIL_RCPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Deve ser definida como um <type>array</type> de <type>string</type>s
     com os destinatários a serem passados ao servidor em uma solicitação de email SMTP.
     Cada destinatário deve ser especificado entre parênteses angulares
     (<literal>&gt;&lt;</literal>).
     Se um parêntese angular não for usado como primeiro caractere,
     o cURL assumirá que um único endereço de e-mail foi fornecido
     e colocará esse endereço entre parênteses angulares.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como <literal>1</literal> para permitir que o comando <literal>RCPT TO</literal>
     falhe para alguns destinatários, o que faz com que o cURL ignore erros
     para destinatários individuais e proceda com os destinatários aceitos remanescentes.
     Se todos os destinatários aivarem falhas e esta opção estiver especificada,
     o cURL aborta a conversação SMTP
     e retorna o erro recebido do último comando <literal>RCPT TO</literal>.
     Substituído pela <constant>CURLOPT_MAIL_RCPT_ALLOWFAILS</constant> a partir do cURL 8.2.0.
     Disponível a partir do PHP 8.2.0 e cURL 7.69.0.
     Descontinuada a partir do cURL 8.2.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo máximo ocioso permitido para que uma conexão existente possa ser considerada para reúso.
     O tempo máximo padrão é de <literal>118</literal> segundos.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do PHP 8.2.0 e cURL 7.65.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A quantidade máxima permitida de conexões persistentes.
     Quando o limite é atingido, a mais antiga no cache é fechada
     para evitar o aumento do número de conexões abertas.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize">
   <term>
    <constant>CURLOPT_MAXFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o tamanho máximo aceito (em bytes) de um arquivo para recebimento.
     Se o arquivo solicitado for maior que esse valor,
     a transferência será abortada
     e <constant>CURLE_FILESIZE_EXCEEDED</constant> será retornado.
     Passar <literal>0</literal> desabilita esta opção,
     e passar um tamanho negativo retorna uma
     <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant>.
     Se o tamanho do arquivo não for conhecido antes do início do recebimento,
     esta opção não terá efeito.
     Para definir um limite de tamanho acima de <literal>2GB</literal>,
     <constant>CURLOPT_MAXFILESIZE_LARGE</constant> deve ser usada.
     A partir do cURL 8.4.0, esta opção também interrompe as transferências em andamento
     se atingirem esse limite.
     Esta opção aceita qualquer valor que possa ser convertido em um <type>int</type> válido.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tamanho máximo permitido para arquivo recebido. Se o arquivo requisitado for maior que este valor,
     a transferência não iniciará e <constant>CURLE_FILESIZE_EXCEEDED</constant> será retornada.
     O tamanho do arquivo nem sempre é conhecido antes da transferência, para esses casos esta opção não tem efeito mesmo que
     a transferência termine sendo maior que este limite informado.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do PHP 8.2.0 e cURL 7.11.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo máximo em segundos, desde a criação da conexão, permitido para que uma conexão
     existente possa ser considerada para reúso. Se uma conexão no cache for mais antiga
     que este valor, ela será fechada assim que as transferências em progresso terminem.
     O padrão é <literal>0</literal> segundo, o que significa que a opção está desabilitada e todas as conexões são elegíveis para reúso.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do PHP 8.2.0 e cURL 7.80.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A quantidade máxima de redirecionamentos HTTP a seguir. Esta opção deve ser usada junto com <constant>CURLOPT_FOLLOWLOCATION</constant>.
     O valor padrão de <literal>20</literal> está definido para evitar redirecionamentos infinitos.
     Definir para <literal>-1</literal> permite redirecionamentos infinitos e <literal>0</literal> recusa todos os redirecionamentos.
     Disponível a partir do cURL 7.5.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se um recebimento exceder esta velocidade (medida em bytes por segundo) na
     média cumulativa durante a transferência, ela será pausada para
     manter a média abaixo ou igual ao valor do parâmetro.
     O padrão é velocidade ilimitada.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se um envio exceder esta velocidade (medida em bytes por segundo) na
     média cumulativa durante a transferência, ela será pausada para
     manter a média abaixo ou igual ao valor do parâmetro.
     O padrão é velocidade ilimitada.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como uma máscara de bits das constantes <constant>CURLMIMEOPT_<replaceable>*</replaceable></constant>.
     Atualmente, há apenas uma opção disponível:
     <constant>CURLMIMEOPT_FORMESCAPE</constant>.
     Disponível a partir do PHP 8.3.0 e cURL 7.81.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para manter silêncio completo no que se refere
     às funções cURL.
     Use <constant>CURLOPT_RETURNTRANSFER</constant> em seu lugar.
     Disponível a partir do cURL 7.1.0, descontinuada a partir do cURL 7.8.0
     e pela última vez disponível no cURL 7.15.5.
     Removida a partir do PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para ler o arquivo <filename>~/.netrc</filename>
     buscando usuário e senha para o servidor remoto com o qual
     a conexão está sendo estabelecida.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc-file">
   <term>
    <constant>CURLOPT_NETRC_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> contendo o nome completo do caminho para um arquivo <literal>.netrc</literal>.
     Se esta opção for omitida e <constant>CURLOPT_NETRC</constant> estiver definida,
     o cURL verificará se há um arquivo <literal>.netrc</literal>
     no diretório inicial do usuário atual.
     Disponível a partir do cURL 7.11.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-directory-perms">
   <term>
    <constant>CURLOPT_NEW_DIRECTORY_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Configura o valor das permissões (<type>int</type>) definidas nos diretórios recém-criados
     no servidor remoto. O valor padrão é <literal>0755</literal>.
     Os únicos protocolos que podem usar isso são
     <literal>sftp://</literal>, <literal>scp://</literal>
     e <literal>file://</literal>.
     Disponível a partir do cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-file-perms">
   <term>
    <constant>CURLOPT_NEW_FILE_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Configura o valor das permissões (como um <type>int</type>) que são definidas em arquivos recém-criados
     no servidor remoto. O valor padrão é <literal>0644</literal>.
     Os únicos protocolos que podem usar isso são
     <literal>sftp://</literal>, <literal>scp://</literal>
     e <literal>file://</literal>.
     Disponível a partir do cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para excluir o corpo da saída.
     Para HTTP(S), o cURL faz uma requisição HEAD. Para quase todos os outros protocolos,
     o cURL não solicita os dados do corpo de nenhuma forma.
     Alterar esta opção para &false; resultará na inclusão dos dados do corpo na saída.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para desabilitar a medição de progresso para transferências cURL.
     <note>
      <para>
       O PHP define automaticamente esta opção para &true;, ela só deve ser
       alterada para depuração.
      </para>
     </note>
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noproxy">
   <term>
    <constant>CURLOPT_NOPROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> que consiste em uma lista separada por vírgulas de nomes de servidor
     que não requerem um proxy para serem acessados.
     Cada nome nesta lista é correspondido como um domínio
     que contém o nome do servidor ou como o próprio nome do servidor.
     O único coringa disponível na <type>string</type>
     é um único caractere <literal>*</literal> que corresponde a todos os servidores,
     desativando efetivamente o proxy.
     Definir esta opção como uma <type>string</type> vazia habilita o proxy para todos os nomes de servidor.
     Desde o cURL 7.86.0, os endereços IP definidos com esta opção
     podem ser fornecidos usando a notação CIDR.
     Disponível a partir do cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para ignorar qualquer função cURL que faça com que um
     sinal seja enviado ao processo PHP. Ligado por padrão
     em SAPIs multi-thread para que opções de limite de tempo ainda possam ser usadas.
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno do tipo <type>callable</type> com a seguinte assinatura:
     <methodsynopsis>
      <type>string</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>passwordPrompt</parameter></methodparam>
      <methodparam><type>int</type><parameter>maximumPasswordLength</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>passwordPrompt</parameter></term>
       <listitem>
        <simpara>
         Uma string contendo um texto solicitando senha.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>maximumPasswordLength</parameter></term>
       <listitem>
        <simpara>
         Comprimento máximo da senha.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     A função deve retornar uma <type>string</type> contendo a senha.
     Disponível a partir do cURL 7.4.2, descontinuada a partir do cURL 7.11.1
     e pela última vez disponível no cURL 7.15.5.
     Removida a partir do PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita uma <type>string</type> com a senha a ser usada na autenticação.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para que o cURL não altere caminhos URL antes de encaminhá-los ao servidor.
     O padrão é &false;, que resolve as expressões <literal>/../</literal>
     ou <literal>/./</literal> que possam existir na parte do caminho da URL
     que deveriam ser removidas de acordo com a RFC 3986 seção 5.2.4.
     Disponível a partir do PHP 7.0.7 e cURL 7.42.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com a chave pública fixada.
     A <type>string</type> pode ser o nome do arquivo da chave pública fixada
     no formato PEM ou DER. A <type>string</type> também pode ser qualquer
     número de hashes sha256 codificadas em base 64 precedidas por <literal>sha256//</literal> e
     separadas por <literal>;</literal>.
     Disponível a partir do PHP 7.0.7 e cURL 7.39.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para esperar que uma conexão existente confirme
     que pode fazer multiplexação e fazer uso dela,
     antes de criar e utilizar uma nova conexão.
     Disponível a partir do PHP 7.0.7 e cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um <type>int</type> com um número alternativo de porta para conexão
     ao invés da porta especificada na URL ou da porta padrão para o protocolo usado.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para fazer uma requisição <literal>POST</literal> HTTP.
     Esta requisição usa o cabeçalho <literal>application/x-www-form-urlencoded</literal>.
     O padrão é &false;.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Os dados completos para enviar em uma operação <literal>POST</literal> HTTP.
     Este parâmetro pode ser
     passado como uma <type>string</type> codificada em URL como '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
     ou como um <type>array</type> com o nome do campo como chave e o dado do campo como valor.
     Se <parameter>value</parameter> for um <type>array</type>, o
     cabeçalho <literal>Content-Type</literal> será definido para
     <literal>multipart/form-data</literal>.
     Arquivos podem ser enviados usando <classname>CURLFile</classname> ou <classname>CURLStringFile</classname>,
     onde <parameter>value</parameter> precisa ser um <type>array</type>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um <type>array</type> de <type>string</type>s de comandos FTP
     a executar no servidor depois que a requisição FTP tenha sido realizada.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits de <constant>CURL_REDIR_POST_301</constant>,
     <constant>CURL_REDIR_POST_302</constant> e <constant>CURL_REDIR_POST_303</constant>
     se o método <literal>POST</literal> HTTP deve ser mantido
     quando <constant>CURLOPT_FOLLOWLOCATION</constant> estiver definida e um
     tipo específico de redirecionamento ocorrer.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> contendo o nome do servidor ou endereço IP
     numérico com pontos a ser usado como o pré-proxy ao qual o cURL se conecta antes
     de se conectar ao proxy HTTP(S) especificado na opção
     <constant>CURLOPT_PROXY</constant> para a próxima requisição.
     O pré-proxy somente pode ser um proxy SOCKS e deve ser prefixado com
     <literal>[esquema]://</literal> para especificar que tipo de socks é utilizado.
     Um endereço numérico IPv6 precisa ser escrito entre [colchetes].
     Definir o pré-proxy para uma <type>string</type> vazia desabilita explicitamente o uso de um pré-proxy.
     Para especificar o número da porta nesta <type>string</type>, adicione <literal>:[porta]</literal>
     ao final do nome do servidor. O número da porta do proxy opcionalmente pode ser
     especificado coma opção separada <constant>CURLOPT_PROXYPORT</constant>.
     O padrão é usar a porta 1080 para proxies se não for especificada.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-prequote">
   <term>
    <constant>CURLOPT_PREQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define um <type>array</type> de <type>string</type>s de comandos FTP a serem passados ao servidor
     depois que o tipo de transferência for definido.
     Esses comandos não são executados quando uma listagem de diretórios é realizada,
     apenas para transferências de arquivos.
     Disponível a partir do cURL 7.9.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Quaisquer dados que devem ser associados com este identificador cURL. Estes dados
     podem ser recuperados subsequentemente com a opção
     <constant>CURLINFO_PRIVATE</constant> de
     <function>curl_getinfo</function>. cURL não faz nada com estes dados.
     Ao usar um multi-identificador cURL, estes dados privados são tipicamente uma
     chave única para identificar um identificador cURL padrão.
     Disponível a partir do cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno do tipo <type>callable</type> com a seguinte assinatura:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToDownload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesDownloaded</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToUpload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesUploaded</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToDownload</parameter></term>
       <listitem>
        <simpara>
         O número total de bytes esperados no recebimento desta transferência.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesDownloaded</parameter></term>
       <listitem>
        <simpara>
         O número de bytes já recebidos.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToUpload</parameter></term>
       <listitem>
        <simpara>
         O número total de bytes esperados no envio desta transferência.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesUploaded</parameter></term>
       <listitem>
        <simpara>
         O número de bytes já enviados.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     A função deve retornar um <type>int</type> com um valor diferente de zero para abortar a transferência
     e definir um erro <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
     <note>
      <para>
       A função de retorno é chamada somente quando a opção <constant>CURLOPT_NOPROGRESS</constant>
       estiver definida para &false;.
      </para>
     </note>
     Disponível a partir do cURL 7.1.0 e descontinuada a partir do cURL 7.32.0.
     Use <constant>CURLOPT_XFERINFOFUNCTION</constant> em seu lugar.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits de valores <constant>CURLPROTO_<replaceable>*</replaceable></constant>.
     Se usada, esta máscara limita que protocolos a libcurl pode usar na transferência.
     O padrão é <constant>CURLPROTO_ALL</constant>, ou seja, o cURL aceitará todos os protocolos suportados.
     Consulte também <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
     Disponível a partir do cURL 7.19.4 e descontinuada a partir do cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina para uma <type>string</type> com uma lista de nomes de protocolos
     (esquemas de URL) a serem permitidos na transferência, separados por vírgula, insensíveis a maiúsculas/minúsculas.
     Defina como <literal>ALL</literal> para habilitar todos os protocolos.
     Por padrão, o cURL aceita todos os protocolos com os quais foi compilado para suportar.
     Os protocolos disponíveis são:
     <simplelist type="inline">
      <member><literal>DICT</literal></member>
      <member><literal>FILE</literal></member>
      <member><literal>FTP</literal></member>
      <member><literal>FTPS</literal></member>
      <member><literal>GOPHER</literal></member>
      <member><literal>GOPHERS</literal></member>
      <member><literal>HTTP</literal></member>
      <member><literal>HTTPS</literal></member>
      <member><literal>IMAP</literal></member>
      <member><literal>IMAPS</literal></member>
      <member><literal>LDAP</literal></member>
      <member><literal>LDAPS</literal></member>
      <member><literal>MQTT</literal></member>
      <member><literal>POP3</literal></member>
      <member><literal>POP3S</literal></member>
      <member><literal>RTMP</literal></member>
      <member><literal>RTMPE</literal></member>
      <member><literal>RTMPS</literal></member>
      <member><literal>RTMPT</literal></member>
      <member><literal>RTMPTE</literal></member>
      <member><literal>RTMPTS</literal></member>
      <member><literal>RTSP</literal></member>
      <member><literal>SCP</literal></member>
      <member><literal>SFTP</literal></member>
      <member><literal>SMB</literal></member>
      <member><literal>SMBS</literal></member>
      <member><literal>SMTP</literal></member>
      <member><literal>SMTPS</literal></member>
      <member><literal>TELNET</literal></member>
      <member><literal>TFTP</literal></member>
      <member><literal>WS</literal></member>
      <member><literal>WSS</literal></member>
     </simplelist>.
     Disponível a partir do PHP 8.3.0 e do cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o proxy HTTP através do qual as requisições serão enviadas.
     Deve ser o nome do host, o endereço IP numérico com pontos
     ou um endereço IPv6 numérico escrito entre [colchetes].
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits dos método(s) de autenticação
     (constantes <constant>CURLAUTH_<replaceable>*</replaceable></constant>)
     para usar na conexão ao proxy.
     Para autenticação no proxy, somente <constant>CURLAUTH_BASIC</constant> e
     <constant>CURLAUTH_NTLM</constant> são suportadas atualmente.
     O padrão é <constant>CURLAUTH_BASIC</constant>.
     Disponível a partir do cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um <type>array</type> de <type>string</type>s de cabeçalhos HTTP customizados para passar aos proxies.
     Disponível a partir do PHP 7.0.7 e cURL 7.37.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxypassword">
   <term>
    <constant>CURLOPT_PROXYPASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com a senha a ser usada para autenticação com o proxy.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um <type>int</type> com o número da porta do proxy para conexão.
     Este número de porta também pode ser definido em <constant>CURLOPT_PROXY</constant>.
     Definir como zero faz com que o cURL use o número de porta do proxy padrão
     ou o número de porta especificado na <type>string</type> do URL do proxy.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o tipo do proxy, que pode ser uma das constantes
     <constant>CURLPROXY_<replaceable>*</replaceable></constant>.
     O padrão é <constant>CURLPROXY_HTTP</constant>.
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyusername">
   <term>
    <constant>CURLOPT_PROXYUSERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com o nome de usuário a ser usado para autenticação com o proxy.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com usuário e senha formatados como
     <literal>[usuário]:[senha]</literal> para usar na
     conexão ao proxy.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O caminho para o pacote de Certificados de Autoridade (CA) do proxy. Defina o caminho como uma
     <type>string</type> com o nome do arquivo que contém um ou mais certificados com os quais
     o prohy HTTPS será verificado.
     Esta opção é para conexão a um proxy HTTPS, não a um servidor HTTPS.
     O padrão é o caminho do sistema onde espera-se que o pacote de certificados CA do cURL esteja
     armazenado.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome de um arquivo PEM contendo um ou mais certificados com os quais o proxy HTTPS será verificado.
     Esta opção é para conexão a um proxy HTTPS, não a um servidor HTTPS.
     O padrão é o caminho do sistema onde espera-se que o pacote de certificados CA do cURL esteja
     armazenado.
     Disponível a partir do PHP 8.2.0 e cURL 7.77.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o diretório que contém múltiplos certificados CA
     com os quais o proxy HTTPS será verificado.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como uma <type>string</type> com o nome do arquivo
     com a concatenação de CRL (Lista de Revogação de Certificado)
     no formato PEM a ser usado na validação de certificado que ocorre durante
     a troca de informações SSL.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do arquivo do certificado SSL do emissor do proxy.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o certificado SSL do emissor do proxy.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define a <type>string</type> a ser usada como a senha necessária para usar a
     chave privada <constant>CURLOPT_PROXY_SSLKEY</constant>.
     Nunca é necessária uma senha para carregar um certificado,
     mas será necessária uma para carregar a chave privada.
     Esta opção é para conexão a um proxy HTTPS, não a um servidor HTTPS.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define a chave pública fixada para o proxy HTTPS.
     A <type>string</type> pode ser o nome do arquivo da chave pública fixada
     com formato esperado de <literal>PEM</literal>
     ou <literal>DER</literal>.
     A <type>string</type> também pode ser qualquer número de hashes sha256 codificados em base64
     precedidas por <literal>sha256//</literal> e separadas por <literal>;</literal>.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do serviço de autenticação de proxy.
     Disponível a partir do PHP 7.0.7, cURL 7.43.0 (para proxies HTTP) e cURL 7.49.0 (para proxies SOCKS5).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do arquivo do certificado de cliente usado para conectar-se ao proxy HTTPS.
     O formato padrão é <literal>P12</literal> no Transporte Seguro e <literal>PEM</literal> em outros mecanismos,
     e pode ser alterado com <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
     Com NSS ou Transporte Seguro, este também pode ser o apelido do certificado
     usado para autenticação, conforme nomeado no banco de dados de segurança.
     Se for pretendido usar um arquivo do diretório atual,
     deve ser precedido por <literal>./</literal>
     para evitar confusão com um apelido.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o formato do certificado de cliente usado ao conectar-se a um proxy HTTPS.
     Os formatos suportados são <literal>PEM</literal> e <literal>DER</literal>, exceto com Transporte Seguro.
     OpenSSL (versões 0.9.3 e posteriores) e Transporte Seguro
     (no iOS 5 ou posterior, ou OS X 10.7 ou posterior) também suportam <literal>P12</literal> para
     arquivos codificados em PKCS#12. O padrão é <literal>PEM</literal>.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o certificado de cliente do proxy SSL.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do arquivo da chave privada
     usada para conexão com o proxy HTTPS.
     O formato padrão é <literal>PEM</literal> e pode ser alterado com
     <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
     (somente iOS e Mac OS X) Esta opção será ignorada se o cURL tiver sido compilado com
     Transporte Seguro. Disponível se compilado com TLS habilitado.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o formato da chave privada.
     Os formatos suportados são:
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
     </simplelist>.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com a chave privada para conexão ao proxy HTTPS.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define a versão do TLS do proxy HTTPS para uma das constantes
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>.
     O padrão é
     <constant>CURL_SSLVERSION_DEFAULT</constant>.
     <warning>
      <simpara>
       É melhor não definir esta opção e deixar o padrão
       <constant>CURL_SSLVERSION_DEFAULT</constant>
       que tentará descobrir a versão do protocolo SSL remoto.
      </simpara>
     </warning>
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com a lista de cifras, separadas por dois-pontos (:),
     a serem usadas para a conexão com o proxy HTTPS.
     Quando usada com OpenSSL, vírgulas ou espaços também são separadores aceitáveis
     e <literal>!</literal>, <literal>-</literal> e <literal>+</literal>
     podem ser usados ​​como operadores.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define as opções de comportamento do proxy SSL, que é uma máscara de bits das constantes
     <constant>CURLSSLOPT_<replaceable>*</replaceable></constant>.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como <literal>2</literal> para verificar os campos de nome do certificado do proxy HTTPS em relação ao nome do proxy.
     Quando definido como <literal>0</literal> a conexão é bem-sucedida independentemente dos nomes usados ​​no certificado.
     Use essa capacidade com cuidado!
     Se definida como <literal>1</literal> no cURL 7.28.0 e versões anteriores, serve como uma opção de depuração.
     Se definida como <literal>1</literal> no cURL 7.28.1 ao 7.65.3, a constante <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> é retornada.
     A partir do cURL 7.66.0, <literal>1</literal> e <literal>2</literal> são tratados como o mesmo valor.
     O padrão é <literal>2</literal>.
     Em ambientes de produção, o valor desta opção deve ser mantido em <literal>2</literal>.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &false; para impedir que o cURL verifique o certificado do par.
     Certificados alternativos para verificação podem ser
     especificados com a opção <constant>CURLOPT_CAINFO</constant>
     ou um diretório de certificado pode ser especificado com a
     opção <constant>CURLOPT_CAPATH</constant>.
     Quando definida como &false;, a verificação do certificado será sempre bem-sucedida.
     &true; é o padrão.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com a lista de conjuntos de criptografia a serem usados ​​para a conexão TLS 1.3 com um proxy.
     Esta opção é usada atualmente apenas quando o cURL é compilado para usar OpenSSL 1.1.1 ou posterior.
     Se um SSL diferente estiver sendo usado, os conjuntos de criptografia TLS 1.3 podel ser configurados
     com a opção <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>.
     Disponível a partir do PHP 7.3.0 e cURL 7.61.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com a senha a ser usada para o método de autenticação TLS especificado com a
     opção <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requer que a
     opção <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> também esteja definida.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O método de autenticação TLS usado para a conexão HTTPS.
     O método suportado é <literal>SRP</literal>.
     <note>
      <para>
       A autenticação Secure Remote Password (SRP) para TLS fornece autenticação mútua
       se ambos os lados tiverem um segredo compartilhado. Para usar TLS-SRP, as opções
       <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> e
       <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> também precisam ser definidas.
      </para>
     </note>
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O usuário a ser usado para o método de autenticação TLS especificado com a
     opção <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requer que a
     opção <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> também esteja definida.
     Disponível a partir do PHP 7.3.0 e cURL 7.52.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-transfer-mode">
   <term>
    <constant>CURLOPT_PROXY_TRANSFER_MODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Quando igual a <literal>1</literal>, define o modo de transferência (binário ou ASCII)
     para transferências FTP feitas através de um proxy HTTP, anexando
     <literal>type=a</literal> ou <literal>type=i</literal> ao URL.
     Sem esta configuração ou definida como <literal>0</literal>,
     <constant>CURLOPT_TRANSFERTEXT</constant> não tem efeito
     ao fazer FTP através de um proxy.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.18.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para usar o método PUT HTTP para um arquivo. O arquivo precisa ser
     definido com <constant>CURLOPT_READDATA</constant> e
     <constant>CURLOPT_INFILESIZE</constant>.
     Disponível a partir do cURL 7.1.0 e descontinuada a partir do cURL 7.12.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como &true; para o cURL ignorar a etapa de limpeza de recursos
     ao recuperar de um limite de tempo excedido.
     Isto permite um encerramento rápido do processo cURL às
     custas de um possível vazamento de recursos associados.
     Disponível a partir do PHP 8.3.0 e cURL 7.87.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um <type>array</type> de <type>string</type>s de comandos FTP a executar no servidor antes da requisição FTP.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do arquivo a ser usado para semear o gerador de números aleatórios para o SSL.
     Disponível a partir do cURL 7.7.0 e descontinuada a partir do cURL 7.84.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o(s) intervalo(s) de dados a serem recuperados no formato <literal>X-Y</literal> onde X ou Y são opcionais. Transferências HTTP
     também suportam vários intervalos, separados por vírgulas no formato
     <literal>X-Y,N-M</literal>.
     Defina como &null; para desabilitar a requisição de um intervalo de bytes.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readdata">
   <term>
    <constant>CURLOPT_READDATA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define um ponteiro de arquivo do tipo <type>resource</type> que será usado pela função de leitura de arquivo
     definida com <constant>CURLOPT_READFUNCTION</constant>.
     Disponível a partir do cURL 7.9.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno do tipo <type>callable</type> com a seguinte assinatura:
     <methodsynopsis>
      <type>string</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>resource</type><parameter>streamResource</parameter></methodparam>
      <methodparam><type>int</type><parameter>maxAmountOfDataToRead</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>streamResource</parameter></term>
       <listitem>
        <simpara>
         <type>resource</type> de fluxo fornecido ao cURL através da opção
         <constant>CURLOPT_READDATA</constant>.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>maxAmountOfDataToRead</parameter></term>
       <listitem>
        <simpara>
         A quantidade máxima de dados a serem lidos.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     A função deve retornar uma <type>string</type>
     com comprimento igual ou menor que a quantidade de dados solicitados,
     normalmente lendo-a do <type>resource</type> de fluxo passado. Deve retornar
     uma <type>string</type> vazia para sinalizar <literal>EOF</literal>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Máscara de bits de valores <constant>CURLPROTO_<replaceable>*</replaceable></constant>
     que limita quais protocolos o cURL pode usar em uma transferência que segue
     um redirecionamento quando <constant>CURLOPT_FOLLOWLOCATION</constant> está habilitado.
     Isso permite limitar transferências específicas para usar apenas um subconjunto
     de protocolos em redirecionamentos.
     A partir do cURL 7.19.4, por padrão o cURL permitirá todos os protocolos,
     exceto <literal>FILE</literal> e <literal>SCP</literal>.
     Antes do cURL 7.19.4, o cURL seguiria incondicionalmente todos os protocolos suportados.
     Veja também <constant>CURLOPT_PROTOCOLS</constant> para valores constantes de protocolo.
     Disponível a partir do cURL 7.19.4 e descontinuada a partir do cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina como uma <type>string</type> com uma lista de nomes de protocolos (esquemas URL),
     insensíveis a maiúsculas/minúsculas, separados por vírgulas,
     para permitir o seguimento de um redirecionamento quando
     <constant>CURLOPT_FOLLOWLOCATION</constant> estiver habilitada.
     Defina como <literal>ALL</literal> para habilitar todos os protocolos.
     A partir do cURL 7.65.2, o padrão é <literal>FTP</literal>,
     <literal>FTPS</literal>, <literal>HTTP</literal> e <literal>HTTPS</literal>.
     Do cURL 7.40.0 até o 7.65.1, o padrão são todos os protocolos exceto
     <literal>FILE</literal>, <literal>SCP</literal>, <literal>SMB</literal> e
     <literal>SMBS</literal>.
     Antes do cURL 7.40.0, o padrão são todos os protocolos exceto
     <literal>FILE</literal> e <literal>SCP</literal>.
     Os protocolos disponíveis são:
     <simplelist type="inline">
      <member><literal>DICT</literal></member>
      <member><literal>FILE</literal></member>
      <member><literal>FTP</literal></member>
      <member><literal>FTPS</literal></member>
      <member><literal>GOPHER</literal></member>
      <member><literal>GOPHERS</literal></member>
      <member><literal>HTTP</literal></member>
      <member><literal>HTTPS</literal></member>
      <member><literal>IMAP</literal></member>
      <member><literal>IMAPS</literal></member>
      <member><literal>LDAP</literal></member>
      <member><literal>LDAPS</literal></member>
      <member><literal>MQTT</literal></member>
      <member><literal>POP3</literal></member>
      <member><literal>POP3S</literal></member>
      <member><literal>RTMP</literal></member>
      <member><literal>RTMPE</literal></member>
      <member><literal>RTMPS</literal></member>
      <member><literal>RTMPT</literal></member>
      <member><literal>RTMPTE</literal></member>
      <member><literal>RTMPTS</literal></member>
      <member><literal>RTSP</literal></member>
      <member><literal>SCP</literal></member>
      <member><literal>SFTP</literal></member>
      <member><literal>SMB</literal></member>
      <member><literal>SMBS</literal></member>
      <member><literal>SMTP</literal></member>
      <member><literal>SMTPS</literal></member>
      <member><literal>TELNET</literal></member>
      <member><literal>TFTP</literal></member>
      <member><literal>WS</literal></member>
      <member><literal>WSS</literal></member>
     </simplelist>.
     Disponível a partir do PHP 8.3.0 e cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o conteúdo do cabeçalho <literal>Referer: </literal>
     a ser usado em uma requisição HTTP.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> a ser usada na próxima requisição
     em vez do caminho extraído do URL.
     Disponível a partir do PHP 7.3.0 e cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Forneça um <type>array</type> de <type>string</type>s com endereços
     personalizados separados por dois-pontos para um par específico de servidor e porta no formato:
     <code>
      array(
        "example.com:80:127.0.0.1",
        "example2.com:443:127.0.0.2",
      )
     </code>
     Disponível a partir do cURL 7.21.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O deslocamento, em bytes, a partir do qual uma transferência deve ser retomada.
     Esta opção aceita qualquer valor que possa ser convertido para um <type>int</type> válido.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para retornar a transferência como uma <type>string</type> do
     valor de retorno de <function>curl_exec</function> em vez de enviá-la
     diretamente.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-client-cseq">
   <term>
    <constant>CURLOPT_RTSP_CLIENT_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define um <type>int</type> com o número CSEQ a ser emitido para a próxima solicitação RTSP.
     Útil se o aplicativo estiver retomando uma conexão interrompida anteriormente.
     O CSEQ é inrementado a partir deste novo número.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-request">
   <term>
    <constant>CURLOPT_RTSP_REQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o tipo de solicitação RTSP a ser feita.
     Deve ser uma das constantes <constant>CURL_RTSPREQ_<replaceable>*</replaceable></constant>.
     Disponível
     a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-server-cseq">
   <term>
    <constant>CURLOPT_RTSP_SERVER_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define um <type>int</type> com o número CSEQ esperado
     para a próxima solicitação do servidor RTSP para o cliente.
     Este recurso (escutar solicitações do servidor) não está implementado.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-session-id">
   <term>
    <constant>CURLOPT_RTSP_SESSION_ID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Defina uma <type>string</type> com o valor do ID da sessão RTSP atual para o identificador.
     Depois que esse valor for definido como qualquer valor não &null;,
     o cURL retornará <constant>CURLE_RTSP_SESSION_ERROR</constant>
     se o ID recebido do servidor não corresponder.
     Se definido como &null;, o cURL define automaticamente o ID
     na primeira vez que o servidor o define em uma resposta.
     O padrão é &null;.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-stream-uri">
   <term>
    <constant>CURLOPT_RTSP_STREAM_URI</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com o URI do fluxo para operar.
     Se não for definido, o padrão do cURL é operar em opções genéricas do servidor,
     passando <literal>*</literal> no lugar do URI do fluxo RTSP.
     Ao trabalhar com RTSP, <literal>CURLOPT_RTSP_STREAM_URI</literal>
     indica qual URL enviar ao servidor no cabeçalho da solicitação
     enquanto <literal>CURLOPT_URL</literal> indica
     onde a conexão deve ser feita.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-transport">
   <term>
    <constant>CURLOPT_RTSP_TRANSPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o cabeçalho <literal>Transport:</literal> para esta sessão RTSP.
     Disponível a partir do cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sempre &true;, o que desativa o suporte ao prefixo <literal>@</literal> para
     envio de arquivos em <constant>CURLOPT_POSTFIELDS</constant>, o que
     significa que valores começando com <literal>@</literal> podem ser passados ​
     ​com segurança como campos. <classname>CURLFile</classname> pode ser usada para
     envios.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A <type>string</type> de identidade de autorização (autzid) para a transferência. Aplicável apenas ao mecanismo de autenticação
     PLAIN SASL onde é opcional. Quando não especificada, apenas a identidade de autenticação
     (authcid) especificada pelo nome de usuário será enviada ao servidor, juntamente com a senha.
     O servidor derivará o authzid do authcid quando não for fornecido, que será usado internamente.
     Disponível a partir do PHP 8.2.0 e cURL 7.66.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar o envio da resposta inicial no primeiro pacote.
     Disponível a partir do PHP 7.0.7 e cURL 7.31.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o nome do serviço de autenticação.
     Disponível a partir do PHP 7.0.7 e cURL 7.43.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um resultado de <function>curl_share_init</function>. Faz com que o identificador
     cURL use os dados do identificador compartilhado.
     Disponível a partir do cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Os métodos de autenticação SOCKS5 a serem utilizados. As opções são:
     <simplelist type="inline">
      <member><constant>CURLAUTH_BASIC</constant></member>
      <member><constant>CURLAUTH_GSSAPI</constant></member>
      <member><constant>CURLAUTH_NONE</constant></member>
     </simplelist>.
     Quando mais de um método estiver definido, o cURL irá interrogar o servidor para ver
     que métodos ele suporta, e escolherá o melhor.
     O padrão é <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
     Defina o usuário e senha reais com a opção <constant>CURLOPT_PROXYUSERPWD</constant>.
     Disponível a partir do PHP 7.3.0 e cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-nec">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_NEC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida como <literal>1</literal> habilita, e como <literal>0</literal> desabilita,
     a troca desprotegida da negociação do modo de proteção
     como parte da negociação GSSAPI.
     Disponível a partir do cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-service">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_SERVICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> contendo o nome do serviço SOCKS5.
     O padrão é <literal>rcmd</literal>
     Disponível a partir do cURL 7.19.4 e descontinuada a partir do cURL 7.49.0.
     Use <constant>CURLOPT_PROXY_SERVICE_NAME</constant> em seu lugar.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma máscara de bits que consiste de uma ou mais das seguintes constantes:
     <simplelist type="inline">
      <member><constant>CURLSSH_AUTH_PUBLICKEY</constant></member>
      <member><constant>CURLSSH_AUTH_PASSWORD</constant></member>
      <member><constant>CURLSSH_AUTH_HOST</constant></member>
      <member><constant>CURLSSH_AUTH_KEYBOARD</constant></member>
      <member><constant>CURLSSH_AUTH_AGENT</constant></member>
      <member><constant>CURLSSH_AUTH_ANY</constant></member>
     </simplelist>.
     O padrão é <constant>CURLSSH_AUTH_ANY</constant>.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar, &false; para desabilitar a compactação SSH interna.
     Observe que o servidor pode desconsiderar esta requisição.
     O padrão é &false;
     Disponível a partir do PHP 7.3.0 e cURL 7.56.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função do tipo <type>callable</type> que será chamada quando a verificação de chave do host SSH for necessária.
     A função precisa ter a seguinte assinatura:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>keyType</parameter></methodparam>
      <methodparam><type>string</type><parameter>key</parameter></methodparam>
      <methodparam><type>int</type><parameter>keyLength</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>keyType</parameter></term>
       <listitem>
        <simpara>
         Um dos tipos de chave <constant>CURLKHTYPE_<replaceable>*</replaceable></constant>.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>key</parameter></term>
       <listitem>
        <simpara>
         A chave a ser verificada.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>keyLength</parameter></term>
       <listitem>
        <simpara>
         O comprimento da chave em bytes.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Esta função substitui <constant>CURLOPT_SSH_KNOWNHOSTS</constant>.
     Disponível a partir do PHP 8.3.0 e cURL 7.84.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> contendo 32 dígitos hexadecimais que deve conter a
     soma de verificação MD5 da chave pública do servidor remoto, e o cURL rejeitará
     a conexão com o servidor, a menos que as somas correspondam.
     Esta opção é apenas para transferências SCP e SFTP.
     Disponível a partir do cURL 7.17.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o hash SHA256 codificado em base64
     da chave pública do servidor remoto.
     A transferência falhará se o hash fornecido não corresponder ao hash fornecido pelo servidor remoto.
     Disponível a partir do PHP 8.2.0 e cURL 7.80.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-knownhosts">
   <term>
    <constant>CURLOPT_SSH_KNOWNHOSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Deve ser definida como o nome do arquivo <filename>known_host</filename> a ser usado,
     que deve usar o formato de arquivo OpenSSH conforme suportado pela libssh2.
     Disponível a partir do cURL 7.19.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo com a chave privada. Se não for usado, o padrão do cURL é
     <filename>$HOME/.ssh/id_dsa</filename> se a variável de ambiente HOME estiver definida,
     e apenas <literal>id_dsa</literal> no diretório atual se HOME não estiver definida.
     Se o arquivo estiver protegido por senha, defina a senha com
     <constant>CURLOPT_KEYPASSWD</constant>.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome do arquivo com a chave pública. Se não for usado, o padrão do cURL é
     <filename>$HOME/.ssh/id_dsa.pub</filename> se a variável de ambiente HOME estiver definida,
     e apenas <literal>id_dsa.pub</literal> no diretório atual se HOME não estiver definida.
     Disponível a partir do cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de um arquivo que contém um certificado no formato PEM.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A senha requerida para usar o certificado
     <constant>CURLOPT_SSLCERT</constant>.
     Disponível a partir do cURL 7.1.0 e descontinuada a partir do cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o formato do certificado. Os formatos suportados são:
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
      <member><literal>P12</literal></member>
     </simplelist>.
     A partir do OpenSSL 0.9.3, o formato <literal>P12</literal> (para arquivos codificados em PKCS#12) está disponível.
     O padrão é <literal>PEM</literal>.
     Disponível a partir do cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o certificado de cliente SSL do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o identificador do mecanismo de criptografia da chave SSL privada
     especificada em <constant>CURLOPT_SSLKEY</constant>.
     Disponível a partir do cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com o identificador do mecanismo de criptografia usado para operações de criptografia
     assimétricas.
     Disponível a partir do cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de um arquivo que contém uma chave SSL privada.
     Disponível a partir do cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A senha secreta necessária para usar a chave SSL privada especificada em
     <constant>CURLOPT_SSLKEY</constant>.
     <note>
      <para>
       Como esta opção contém uma senha confidencial, lembre-se de manter
       seguro o script PHP que a contém.
      </para>
     </note>
     Disponível a partir do cURL 7.9.3 e descontinuada a partir do cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tipo de chave da chave SSL privada especificada em
     <constant>CURLOPT_SSLKEY</constant>. Tipos de chave suportados são:
     <simplelist type="inline">
      <member><literal>PEM</literal></member>
      <member><literal>DER</literal></member>
      <member><literal>ENG</literal></member>
     </simplelist>.
     O padrão é <literal>PEM</literal>.
     Disponível a partir do cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com a chave privada para certificado de cliente do blob de memória.
     Disponível a partir do PHP 8.1.0 e cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma das
     constantes <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>.
     <warning>
      <simpara>
       É melhor não definir esta opção e deixar no padrão,
       já que definir para
       <constant>CURL_SSLVERSION_SSLv2</constant>
       ou
       <constant>CURL_SSLVERSION_SSLv3</constant>
       é bastante perigoso, dadas as vulnerabilidades
       conhecidas no SSLv2 e no SSLv3.
      </simpara>
     </warning>
     O padrão é <constant>CURL_SSLVERSION_DEFAULT</constant>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com uma lista de cifras separadas por dois-pontos,
     a serem usadas para a conexão TLS 1.2 (1.1, 1.0).
     Disponível a partir do cURL 7.9.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma lista delimitada por dois pontos de algoritmos de curva elíptica. Por exemplo,
     <literal>X25519:P-521</literal> é uma lista válida de duas curvas elípticas.
     Esta opção define os algoritmos de troca de chaves do cliente na comunicação inicial do SSL,
     se o SSL com o qual o cURL foi compilado suportá-los.
     Disponível a partir do PHP 8.2.0 e cURL 7.73.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para desabilitar o ALPN na comunicação inicial do SSL (se o SSL com o qual
     o cURL foi compilado suportá-lo), que pode ser usado para
     negociar HTTP2.
     Disponível a partir do PHP 7.0.7 e do cURL 7.36.0 e descontinuada a partir do cURL 7.86.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para desabilitar o NPN na comunicação inicial do SSL (se o SSL com o qual
     a libcurl foi compilada suportá-lo), que pode ser usado para
     negociar HTTP2.
     Disponível a partir do PHP 7.0.7 e cURL 7.36.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar e &false; para desabilitar o início falso do TLS
     que é um modo onde um cliente TLS inicia o envio de dados da aplicação
     antes de verificar a mensagem <literal>Finished</literal> do servidor.
     Disponível a partir do PHP 7.0.7 e cURL 7.42.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define as opções de comportamento do SSL, que é uma máscara de bits das
     constantes <constant>CURLSSLOPT_<replaceable>*</replaceable></constant>.
     O padrão é nenhum bit definido.
     Disponível a partir do PHP 7.0.7. e cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-sessionid-cache">
   <term>
    <constant>CURLOPT_SSL_SESSIONID_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida como <literal>0</literal> desativa, e como <literal>1</literal> ativa
     o cache de ID de sessão SSL.
     Por padrão todas as transferências são feitas usando o cache habilitado.
     Disponível a partir do cURL 7.16.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> para verificar que um campo "Common Name" ou um campo "Subject Alternate Name"
     no certificado SSL corresponde ao nome de servidor informado.
     <literal>0</literal> para não verificar os nomes.
     <literal>1</literal> não deve ser usado.
     Em ambientes de produção o valor para esta opção
     deve ser mantido em <literal>2</literal> (valor padrão). Suporte para o valor <literal>1</literal> foi removido no cURL 7.28.1.
     Disponível a partir do cURL 7.8.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false; para impedir o cURL de verificar o certificado
     do servidor. Certificados alternativos para verificar podem ser
     especificados com a opção <constant>CURLOPT_CAINFO</constant>
     ou um diretório de certificados pode ser especificado com a opção
     <constant>CURLOPT_CAPATH</constant>.
     &true; é o padrão a partir do cURL 7.10.
     Pacote padrão de certificados CA instalado a partir do cURL 7.10.
     Disponível a partir do cURL 7.4.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar e &false; para desabilitar a verificação do status do certificado.
     Disponível a partir do PHP 7.0.7 e cURL 7.41.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita um identificador de arquivo do tipo <type>resource</type> apontando para
     uma localização alternativa para enviar os erros no lugar de
     <constant>STDERR</constant>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o peso numérico do fluxo (um número entre <literal>1</literal> e <literal>256</literal>).
     Disponível a partir do PHP 7.0.7 e cURL 7.46.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para suprimir cabeçalhos de resposta CONNECT do proxy a partir das funções de retorno de usuário
     <constant>CURLOPT_HEADERFUNCTION</constant> e <constant>CURLOPT_WRITEFUNCTION</constant>,
     quando <constant>CURLOPT_HTTPPROXYTUNNEL</constant> é usada e uma requisição CONNECT é realizada.
     O padrão é &false;.
     Disponível a partir do PHP 7.3.0 e cURL 7.54.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para habilitar e &false; para desabilitar a extensão "Fast Open" (abertura rápida) do TCP.
     Disponível a partir do PHP 7.0.7 e cURL 7.49.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se definida para <literal>1</literal>, sondas de manutenção de atividade serão enviadas. O atraso e a
     frequência destas sondas podem ser controlados pelas opções <constant>CURLOPT_TCP_KEEPIDLE</constant>
     e <constant>CURLOPT_TCP_KEEPINTVL</constant>, desde que o sistema operacional
     as suporte. Se definida para <literal>0</literal> (padrão), as sondas são desabilitadas.
     O número máximo de sondas pode ser definido com a opção
     <constant>CURLOPT_TCP_KEEPCNT</constant>.
     Disponível a partir do cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o atraso, em segundos, que o sistema operacional aguardará enquanto a conexão estiver
     ociosa antes de enviar sondas de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant> estiver
     habilitada. Nem todos os sistemas operacionais suportam esta opção.
     O padrão é <literal>60</literal>.
     Disponível a partir do cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o intervalo, em segundos, que o sistema operacional aguardará entre o envio
     de sondas de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant> estiver habilitada.
     Nem todos os sistemas operacionais suportam esta opção.
     O padrão é <literal>60</literal>.
     Disponível a partir do cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepcnt">
   <term>
    <constant>CURLOPT_TCP_KEEPCNT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o número máximo de sondas de verificação de atividade TCP.
     O padrão é <literal>9</literal>.
     Disponível a partir do PHP 8.4.0 e cURL 8.9.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para desabilitar o algoritmo Nagle do TCP, que tenta minimizar
     o número de pacotes pequenos na rede.
     O padrão é &true;.
     Disponível a partir do cURL 7.11.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-telnetoptions">
   <term>
    <constant>CURLOPT_TELNETOPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define um <type>array</type> de <type>string</type>s a ser passado às negociações telnet.
     As variáveis ​​devem estar no formato <literal>&gt;opção=valor&lt;</literal>.
     O cURL suporta as opções <literal>TTYPE</literal>,
     <literal>XDISPLOC</literal> e <literal>NEW_ENV</literal>.
     Disponível a partir do cURL 7.7.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-blksize">
   <term>
    <constant>CURLOPT_TFTP_BLKSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o tamanho do bloco a ser usado para transmissão de dados TFTP.
     O intervalo válido é <literal>8</literal>-<literal>65464</literal> bytes.
     O padrão de <literal>512</literal> bytes será usado se esta opção não for especificada.
     O tamanho de bloco especificado só será usado se for suportado pelo servidor remoto.
     Se o servidor não retornar uma confirmação de opção
     ou retornar uma confirmação de opção sem tamanho de bloco,
     o padrão de <literal>512</literal> bytes será usado.
     Disponível a partir do cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para não enviar requisições de opções TFTP.
     O padrão é &false;.
     Disponível a partir do PHP 7.0.7 e do cURL 7.48.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define como <constant>CURLOPT_TIMEVALUE</constant> é tratada.
     Use <constant>CURL_TIMECOND_IFMODSINCE</constant> para retornar a
     página somente se ela tenha sido modificada desde o momento especificado em
     <constant>CURLOPT_TIMEVALUE</constant>. Se ela não foi modificada,
     um cabeçalho <literal>304 Not Modified</literal> será retornado
     assumindo que <constant>CURLOPT_HEADER</constant> seja &true;.
     Use <constant>CURL_TIMECOND_IFUNMODSINCE</constant> para o efeito
     reverso. Use <constant>CURL_TIMECOND_NONE</constant> para ignorar
     <constant>CURLOPT_TIMEVALUE</constant> e sempre retornar a página.
     <constant>CURL_TIMECOND_NONE</constant> é o padrão.
     Antes do cURL 7.46.0, o padrão era
     <constant>CURL_TIMECOND_IFMODSINCE</constant>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número máximo de segundos para permitir a execução de funções cURL.
     O padrão é <literal>0</literal>, que significa que as funções nunca expiram durante a transferência.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O número máximo de milissegundos para permitir a execução de funções
     cURL.
     Se o cURL for compilado para usar o resolvedor de nome padrão do sistema, essa
     parte da conexão ainda usará resolução de segundos completos para
     tempos limite com um mínimo permitido de um segundo.
     O padrão é <literal>0</literal>, que significa que as funções nunca expiram durante a transferência.
     Disponível a partir do cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado
     por <constant>CURLOPT_TIMECONDITION</constant>.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado
     por <constant>CURLOPT_TIMECONDITION</constant>. O padrão é zero.
     A diferença entre esta opção e <constant>CURLOPT_TIMEVALUE</constant>
     é o tipo do argumento. Em sistemas onde o inteiro longo é de somente 32 bits de comprimento,
     esta opção tem que ser usada para definir datas além do ano 2038.
     Disponível a partir do PHP 7.3.0 e cURL 7.59.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma <type>string</type> com a lista de conjuntos de criptografia
     a serem usados ​​para a conexão TLS 1.3, separados por dois-pontos.
     Esta opção é usada atualmente apenas quando o cURL é compilado para usar OpenSSL 1.1.1 ou posterior.
     Se um SSL diferente estiver sendo usado, os conjuntos de criptografia TLS 1.3 podem ser configurados
     com a opção <constant>CURLOPT_SSL_CIPHER_LIST</constant>.
     Disponível a partir do PHP 7.3.0 e cURL 7.61.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-password">
   <term>
    <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma senha a ser usada para o método de autenticação TLS especificado
     com a opção <constant>CURLOPT_TLSAUTH_TYPE</constant>. Requer que
     a opção <constant>CURLOPT_TLSAUTH_USERNAME</constant> também seja definida.
     Este recurso depende do TLS SRP, que não funciona com o TLS 1.3.
     Disponível a partir do cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-type">
   <term>
    <constant>CURLOPT_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com o método de autenticação TLS.
     O método suportado é <literal>SRP</literal>
     (autenticação TLS "Secure Remote Password").
     Disponível a partir do cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-username">
   <term>
    <constant>CURLOPT_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define uma <type>string</type> com o nome de usuário a ser usado para o método de autenticação TLS
     especificado com a opção <constant>CURLOPT_TLSAUTH_TYPE</constant>.
     Requer que a opção <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
     também esteja definida.
     Este recurso depende do TLS SRP, que não funciona com o TLS 1.3.
     Disponível a partir do cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfer-encoding">
   <term>
    <constant>CURLOPT_TRANSFER_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definida como <literal>1</literal> ativa, e como <literal>0</literal> desativa
     a solicitação de <literal>Transfer Encoding</literal> compactada na solicitação
     HTTP de saída. Se o servidor responder com uma
     <literal>Transfer Encoding</literal> compactada,
     o cURL irá descompactá-la automaticamente na recepção.
     O padrão é <literal>0</literal>.
     Disponível a partir do cURL 7.21.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para usar modo ASCII para transferências FTP.
     Para LDAP, os dados são recuperados em texto puro ao invés de HTML. Em
     sistemas Windows, <constant>STDOUT</constant> não será definido para modo
     binário.
     O padrão é &false;.
     Disponível a partir do cURL 7.1.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Permite o uso de soquetes de domínio Unix como terminal de conexão e
     define o caminho para a <type>string</type> fornecida.
     Defina como &null; para desabilitar.
     O padrão é &null;.
     Disponível a partir do PHP 7.0.7 e cURL 7.40.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para continuar enviando usuário e senha
     ao seguir localizações (usando
     <constant>CURLOPT_FOLLOWLOCATION</constant>), mesmo quando o
     nome do servidor tiver mudado.
     O padrão é &false;.
     Disponível a partir do cURL 7.10.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Alguns protocolos possuem mecanismos de "manutenção da conexão". Esses mecanismos geralmente enviam algum tráfego
     nas conexões existentes para mantê-las ativas. Esta opção define o intervalo de manutenção da conexão.
     Atualmente, o único protocolo com mecanismo de manutenção de conexão é o HTTP/2. Quando o intervalo de manutenção
     da conexão é excedido, um quadro PING HTTP/2 é enviado na conexão.
     O padrão é <constant>CURL_UPKEEP_INTERVAL_DEFAULT</constant>
     que atualmente é <literal>60</literal> segundos.
     Disponível a partir do PHP 8.2.0 e cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para se preparar e realizar um envio.
     O padrão é &false;.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Tamanho de buffer preferido em bytes para o buffer de upload cURL.
     O tamanho do buffer de upload por padrão é de 64 kilobytes. O tamanho máximo do buffer que pode ser definido é de 2 megabytes.
     O tamanho mínimo do buffer que pode ser definido é de 16 kilobytes.
     Disponível a partir do PHP 8.2.0 e cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O URL a ser buscado. Isto também pode ser definido ao inicializar uma
     sessão com <function>curl_init</function>.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-use-ssl">
   <term>
    <constant>CURLOPT_USE_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Define o nível desejado de SSL/TLS para a transferência
     ao usar FTP, SMTP, POP3, IMAP etc.
     Todos esses são protocolos que iniciam em texto simples
     e são "atualizados" para SSL usando o comando STARTTLS.
     Deve ser definida como uma das
     constantes <constant>CURLUSESSL_<replaceable>*</replaceable></constant>.
     Disponível a partir do cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O conteúdo do cabeçalho <literal>User-Agent: </literal> a ser
     usado em uma requisição HTTP.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     O nome de usuário a ser utilizado na autenticação.
     Disponível a partir do cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um nome de usuário e senha formatados como
     <literal>[usuário]:[senha]</literal> a serem usados para a
     conexão.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; para gerar informações detalhadas. Grava
     a saída em <constant>STDERR</constant> ou no arquivo especificado usando
     <constant>CURLOPT_STDERR</constant>.
     O padrão é &false;.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-wildcardmatch">
   <term>
    <constant>CURLOPT_WILDCARDMATCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Se definida como <literal>1</literal>, transfere vários arquivos
     de acordo com um padrão de nome de arquivo.
     O padrão pode ser especificado como parte da
     opção <constant>CURLOPT_URL</constant>,
     usando um padrão semelhante ao fnmatch (Shell Pattern Matching)
     na última parte da URL (nome do arquivo).
     Disponível a partir do cURL 7.21.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno do tipo <type>callable</type> com a seguinte assinatura:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem>
        <simpara>
         Os dados a serem escritos.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Os dados devem ser gravados por esta função de retorno e ela
     deve retornar o número exato de bytes escritos
     ou a transferência será abortada com erro.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita um identificador de arquivo do tipo <type>resource</type> no qual a parte do cabeçalho da transferência é gravada.
     Disponível a partir do cURL 7.1.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aceita uma máscara de bits configurando as opções de comportamento do WebSocket.
     A única opção disponível é <constant>CURLWS_RAW_MODE</constant>.
     O padrão é <literal>0</literal>.
     Disponível a partir do PHP 8.3.0 e cURL 7.86.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função de retorno do tipo <type>callable</type> com a seguinte assinatura:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToDownload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesDownloaded</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesToUpload</parameter></methodparam>
      <methodparam><type>int</type><parameter>bytesUploaded</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToDownload</parameter></term>
       <listitem>
        <simpara>
         O número total de bytes esperados para recebimento nesta transferência.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesDownloaded</parameter></term>
       <listitem>
        <simpara>
         O número de bytes recebidos até o momento.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesToUpload</parameter></term>
       <listitem>
        <simpara>
         O número total de bytes esperados para envio nesta transferência.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>bytesUploaded</parameter></term>
       <listitem>
        <simpara>
         O número de bytes enviados até o momento.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Retorne <literal>1</literal> para abortar a transferência
     e definir um erro <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
     Disponível a partir do PHP 8.2.0 e cURL 7.32.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-server-response-timeout">
   <term>
    <constant>CURLOPT_SERVER_RESPONSE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Um tempo limite em segundos que o cURL esperará por uma resposta de um servidor
     <acronym>FTP</acronym>, <acronym>SFTP</acronym>, <acronym>IMAP</acronym>,
     <acronym>SCP</acronym>, <acronym>SMTP</acronym> ou <acronym>POP3</acronym>.
     Esta opção substitui a opção <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant> existente
     que foi descontinuada no cURL 7.85.0.
     Disponível a partir do PHP 8.4.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Especifica o token de acesso do OAuth 2.0.
     Defina como &null; para desabilitar.
     O padrão é &null;.
     Disponível a partir do PHP 7.0.7 e cURL 7.33.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-prereqfunction">
   <term>
    <constant>CURLOPT_PREREQFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Uma função do tipo <type>callable</type> com a seguinte assinatura que é chamada depois que
     a conexão é estabelecida, mas antes que a carga útil da solicitação (por exemplo, a
     solicitação GET/POST/DELETE de uma conexão HTTP) seja enviada e pode ser usada para cancelar
     ou permitir a conexão dependendo do endereço IP de origem e destino e dos números
     de porta:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>CurlHandle</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>destination_ip</parameter></methodparam>
      <methodparam><type>string</type><parameter>local_ip</parameter></methodparam>
      <methodparam><type>int</type><parameter>destination_port</parameter></methodparam>
      <methodparam><type>int</type><parameter>local_port</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>destination_ip</parameter></term>
       <listitem>
        <simpara>
         O IP primário do servidor remoto estabelecido com esta conexão.
         Para <acronym>FTP</acronym>, este é o IP da conexão de controle.
         Os endereços IPv6 são representados sem colchetes.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>local_ip</parameter></term>
       <listitem>
        <simpara>
         O IP de origem para esta conexão.
         Os endereços IPv6 são representados sem colchetes.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>destination_port</parameter></term>
       <listitem>
        <simpara>
         O número da porta primária no servidor remoto estabelecido com esta conexão.
         Para <acronym>FTP</acronym>, esta é a porta para a conexão de controle.
         Este pode ser um número de porta <acronym>TCP</acronym> ou <acronym>UDP</acronym> dependendo do protocolo.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>local_port</parameter></term>
       <listitem>
        <simpara>
         O número da porta de origem para esta conexão.
         Este pode ser um número de porta <acronym>TCP</acronym> ou <acronym>UDP</acronym> dependendo do protocolo.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Retorne <constant>CURL_PREREQFUNC_OK</constant> para permitir a solicitação ou
     <constant>CURL_PREREQFUNC_ABORT</constant> para abortar a transferência.
     Disponível a partir do PHP 8.4.0 e cURL 7.80.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-debugfunction">
   <term>
    <constant>CURLOPT_DEBUGFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Disponível a partir do PHP 8.4.0.
     Esta opção requer a opção <constant>CURLOPT_VERBOSE</constant> habilitada.
     Uma função do tipo <type>callable</type> para substituir a saída detalhada do cURL padrão.
     Esse retorno de chamada é chamado durante vários estágios da solicitação com informações detalhadas de depuração.
     O retorno de chamada deve corresponder à seguinte assinatura:
     <methodsynopsis>
      <type>void</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>CurlHandle</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>type</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         O identificador cURL.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>type</parameter></term>
       <listitem>
        <simpara>
         Uma das seguintes constantes indicando o tipo do valor <parameter>data</parameter>:
        </simpara>
        <variablelist xml:id="constant.curl-debugfunction.constants" role="constant_list">
         <varlistentry xml:id="constant.curlinfo-text">
          <term>
           <constant>CURLINFO_TEXT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            Texto informativo.
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-header-in">
          <term>
           <constant>CURLINFO_HEADER_IN</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            Dados de cabeçalho (ou semelhantes a cabeçalho) recebidos do par.
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-header-out-debug">
          <term>
           <constant linkend="constant.curlinfo-header-out-debug">CURLINFO_HEADER_OUT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            Dados de cabeçalho (ou semelhantes a cabeçalho) enviados ao par.
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-data-in">
          <term>
           <constant>CURLINFO_DATA_IN</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            Dados de protocolo não processados ​​recebidos do par.
            Mesmo que os dados sejam codificados ou compactados, eles não são fornecidos decodificados nem descompactados para esse retorno de chamada.
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-data-out">
          <term>
           <constant>CURLINFO_DATA_OUT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            Dados de protocolo enviados ao par.
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-ssl-data-in">
          <term>
           <constant>CURLINFO_SSL_DATA_IN</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            Dados <acronym>SSL</acronym>/<acronym>TLS</acronym> (binários) recebidos do par.
           </simpara>
          </listitem>
         </varlistentry>
         <varlistentry xml:id="constant.curlinfo-ssl-data-out">
          <term>
           <constant>CURLINFO_SSL_DATA_OUT</constant>
           (<type>int</type>)
          </term>
          <listitem>
           <simpara>
            Dados <acronym>SSL</acronym>/<acronym>TLS</acronym> (binários) enviados ao par.
           </simpara>
          </listitem>
         </varlistentry>
        </variablelist>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem>
        <simpara>
         Dados detalhados de depuração do tipo indicado pelo parâmetro <parameter>type</parameter>.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
