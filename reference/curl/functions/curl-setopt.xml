<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1d124fb2e4a1dd82c8e2ba089420cd6a3c7c7ea6 Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin,leonardolara -->
<refentry xml:id="function.curl-setopt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_setopt</refname>
  <refpurpose>Define uma opção para uma transferência cURL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>curl_setopt</methodname>
   <methodparam><type>CurlHandle</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Define uma opção no identificador de sessão cURL fornecido.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.ch.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       A opção <literal>CURLOPT_XXX</literal> a ser definida.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       O valor a ser definido na <parameter>option</parameter>.
      </para>
      <para>
       <parameter>value</parameter> deve ser um <type>bool</type> para os
       seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry valign="top">Opção</entry>
           <entry valign="top">Definir <parameter>value</parameter> para</entry>
           <entry valign="top">Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_AUTOREFERER</constant></entry>
           <entry valign="top">
            &true; para definir automaticamente o campo <literal>Referer:</literal>
            nas solicitações em que segue um <literal>Location:</literal> redirect.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIESESSION</constant></entry>
           <entry valign="top">
            &true; para marcar isso como uma nova "sessão" de cookie. Isso forçará o libcurl
            a ignorar todos os cookies que está prestes a carregar que são "cookies de sessão"
            da sessão anterior. Por padrão, libcurl sempre armazena e carrega todos os
            cookies, independente se são cookies de sessão ou não.
            Os cookies de sessão são cookies sem prazo de validade e devem estar ativos
            e existentes apenas para esta "sessão".
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CERTINFO</constant></entry>
           <entry valign="top">
            &true; para enviar informações de certificação SSL para <constant>STDERR</constant>
            em transferências seguras.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.1.
            Requer que <constant>CURLOPT_VERBOSE</constant> esteja ativado para ter efeito.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_ONLY</constant></entry>
           <entry valign="top">
            &true; diz à biblioteca para executar toda a autenticação de proxy necessária
            e configuração de conexão, mas nenhuma transferência de dados. Esta opção é implementada
            para HTTP, SMTP e POP3.
           </entry>
           <entry valign="top">
            Adicionado em 7.15.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CRLF</constant></entry>
           <entry valign="top">
            &true; para converter novas linhas Unix em novas linhas CRLF
            em transferências.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant></entry>
           <entry valign="top">
            &true; para não permitir URLs que incluam um nome de usuário. Os nomes de usuário são permitidos por padrão (0).
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.61.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant></entry>
           <entry valign="top">
            &true; para embaralhar a ordem de todos os endereços retornados para que sejam usados
            em uma ordem aleatória, quando um nome for resolvido e mais de um endereço IP for retornado.
            Isso pode fazer com que o IPv4 seja usado antes do IPv6 ou vice-versa.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.60.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPROXYPROTOCOL</constant></entry>
           <entry valign="top">
            &true; para enviar um cabeçalho do protocolo HAProxy PROXY v1 no início da conexão.
            A ação padrão é não enviar este cabeçalho.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.60.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_COMPRESSION</constant></entry>
           <entry valign="top">
            &true; para ativar a compactação SSH integrada. Este é um pedido, não uma ordem;
            o servidor pode ou não fazê-lo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.56.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant></entry>
           <entry valign="top">
            &true; para usar um cache DNS global. Esta opção não é thread-safe.
            Ele é ativado condicionalmente por padrão se o PHP for construído para uso não encadeado
            (CLI, FCGI, Apache2-Prefork, etc.).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FAILONERROR</constant></entry>
           <entry valign="top">
            &true; para falhar detalhadamente se o código HTTP retornado
            for maior ou igual a 400. O comportamento padrão é retornar
            a página normalmente, ignorando o código.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_FALSESTART</constant></entry>
           <entry valign="top">
            &true; para habilitar início falso de TLS.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.42.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FILETIME</constant></entry>
           <entry valign="top">
            &true; para tentar recuperar a data de modificação
            do documento remoto. Esse valor pode ser recuperado usando
            a opção <constant>CURLINFO_FILETIME</constant> com
            <function>curl_getinfo</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FOLLOWLOCATION</constant></entry>
           <entry valign="top">
            &true; para seguir qualquer cabeçalho
            <literal>"Location: "</literal> que o servidor envia como
            parte do cabeçalho HTTP.
            Consulte também <constant>CURLOPT_MAXREDIRS</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FORBID_REUSE</constant></entry>
           <entry valign="top">
            &true; para forçar a conexão a fechar explicitamente
            quando terminar o processamento e não ser agrupada para reutilização.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FRESH_CONNECT</constant></entry>
           <entry valign="top">
            &true; para forçar o uso de uma nova conexão
            em vez de uma em cache.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPRT</constant></entry>
           <entry valign="top">
            &true; para usar EPRT (e LPRT) ao fazer downloads
            FTP ativos. Use &false; para desabilitar EPRT e LPRT e use
            apenas PORT.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPSV</constant></entry>
           <entry valign="top">
            &true; para tentar primeiro um comando EPSV para
            transferências FTP antes de reverter para PASV. Defina como &false;
            para desativar o EPSV.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant></entry>
           <entry valign="top">
            &true; para criar diretórios ausentes quando uma operação de FTP
            encontra um caminho que não existe no momento.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPAPPEND</constant></entry>
           <entry valign="top">
            &true; para acrescentar ao arquivo remoto em vez de
            substituí-lo.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_NODELAY</constant></entry>
           <entry valign="top">
            &true; para desabilitar o algoritmo Nagle do TCP, que tenta minimizar
            o número de pequenos pacotes na rede.
           </entry>
           <entry valign="top">
            Disponível para versões compiladas com libcurl 7.11.2 ou
            superior.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPASCII</constant></entry>
           <entry valign="top">
            Um alias de
            <constant>CURLOPT_TRANSFERTEXT</constant>. Use isso em vez disso.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPLISTONLY</constant></entry>
           <entry valign="top">
            &true; para listar apenas os nomes de um
            diretório FTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADER</constant></entry>
           <entry valign="top">
            &true; para incluir o cabeçalho na saída.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry><constant>CURLINFO_HEADER_OUT</constant></entry>
           <entry valign="top">
            &true; para rastrear a string de solicitação do identificador.
           </entry>
           <entry valign="top">
            O prefixo <constant>CURLINFO_</constant>
            é intencional.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP09_ALLOWED</constant></entry>
           <entry valign="top">
            Se deve permitir respostas HTTP/0.9. O padrão é &false; a partir de libcurl 7.66.0;
            anteriormente, o padrão era &true;.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.15 e 7.4.3, respectivamente, se construído em libcurl >= 7.64.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPGET</constant></entry>
           <entry valign="top">
            &true; para redefinir o método de solicitação HTTP para GET.
            Como GET é o padrão, isso só é necessário se o método de
            solicitação tiver sido alterado.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPPROXYTUNNEL</constant></entry>
           <entry valign="top">
            &true; para encapsular por meio de um determinado proxy HTTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_CONTENT_DECODING</constant></entry>
           <entry valign="top">
            &false; para obter o corpo da resposta HTTP bruta.
           </entry>
           <entry valign="top">
            Disponível se construído em libcurl >= 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant></entry>
           <entry valign="top">
            &true; para continuar enviando o corpo da solicitação se o código HTTP retornado
            for igual ou maior que 300. A ação padrão seria interromper o envio
            e fechar o fluxo ou a conexão. Adequado para autenticação NTLM manual.
            A maioria dos aplicativos não precisa dessa opção.
           </entry>
           <entry valign="top">
            Disponível a partir do PHP 7.3.0 se construído em libcurl >= 7.51.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MUTE</constant></entry>
           <entry valign="top">
            &true; para ser completamente silencioso em relação
            às funções cURL.
           </entry>
           <entry valign="top">
            Removido no cURL 7.15.5 (em vez disso, você pode usar CURLOPT_RETURNTRANSFER)
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NETRC</constant></entry>
           <entry valign="top">
            &true; para verificar o arquivo <filename>~/.netrc</filename>
            para localizar um nome de usuário e senha para o site remoto com
            o qual uma conexão está sendo estabelecida.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOBODY</constant></entry>
           <entry valign="top">
            &true; para excluir o corpo da saída.
            O método de solicitação é definido como HEAD. Alterar isso para &false; não
            o altera para GET.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOPROGRESS</constant></entry>
           <entry valign="top"><para>
            &true; para desabilitar o medidor de progresso para transferências cURL.
            <note>
             <para>
              O PHP define automaticamente esta opção como &true;, isso só deve
              ser alterado para fins de depuração.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOSIGNAL</constant></entry>
           <entry valign="top">
            &true; para ignorar qualquer função cURL que faça
            com que um sinal seja enviado ao processo PHP. Isso é ativado por padrão
            em SAPIs multi-threaded para que as opções de tempo limite ainda possam ser usadas.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PATH_AS_IS</constant></entry>
           <entry valign="top">
            &true; para não lidar com sequências de ponto e ponto.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.42.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PIPEWAIT</constant></entry>
           <entry valign="top">
            &true; para aguardar pipelining/multiplexing.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.42.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POST</constant></entry>
           <entry valign="top">
            &true; para fazer um POST HTTP regular. Este POST é o
            tipo <literal>application/x-www-form-urlencoded</literal> normal,
            mais comumente usado por formulários HTML.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PUT</constant></entry>
           <entry valign="top">
            &true; para HTTP PUT um arquivo. O arquivo para PUT
            deve ser configurado com <constant>CURLOPT_INFILE</constant> e
            <constant>CURLOPT_INFILESIZE</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RETURNTRANSFER</constant></entry>
           <entry valign="top">
            &true; para retornar a transferência como uma string do
            valor de retorno de <function>curl_exec</function> em vez de
            emiti-la diretamente.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SASL_IR</constant></entry>
           <entry valign="top">
            &true; para habilitar o envio da resposta inicial no primeiro pacote.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.31.10. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_ALPN</constant></entry>
           <entry valign="top">
            &false; para desabilitar o ALPN no handshake SSL (se o backend
            SSL libcurl for construído para usá-lo), que pode ser usado para
            negociar http2.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.36.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_NPN</constant></entry>
           <entry valign="top">
            &false; para desabilitar o NPN no handshake SSL (se o backend
            SSL libcurl for construído para usá-lo), que pode ser usado para
            negociar http2.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.36.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; para impedir que o cURL verifique o certificado do
            par. Certificados alternativos para verificação podem ser
            especificados com a opção <constant>CURLOPT_CAINFO</constant> ou um
            diretório de certificados pode ser especificado com a
            opção <constant>CURLOPT_CAPATH</constant>.
           </entry>
           <entry valign="top">
            &true; por padrão a partir do cURL 7.10. Pacote padrão instalado a partir do
            cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYSTATUS</constant></entry>
           <entry valign="top">
            &true; para verificar o status do certificado.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.41.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; para impedir que o cURL verifique o certificado do par.
            Certificados alternativos para verificação podem ser especificados
            com a opção <constant>CURLOPT_CAINFO</constant> ou um
            diretório de certificados pode ser especificado com a
            opção <constant>CURLOPT_CAPATH</constant>.
            Quando definido como falso, a verificação do certificado de mesmo nível é bem-sucedida.
           </entry>
           <entry valign="top">
            &true; por padrão. Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SAFE_UPLOAD</constant></entry>
           <entry valign="top">
            Sempre &true;, o que desabilita o suporte para o prefixo <literal>@</literal>
            para upload de arquivos em <constant>CURLOPT_POSTFIELDS</constant>, o que
            significa que os valores que começam com <literal>@</literal> podem ser passados
            com segurança como campos. <classname>CURLFile</classname> pode ser usado
            para uploads.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant></entry>
           <entry valign="top">
            &true; para suprimir os cabeçalhos de resposta CONNECT do proxy das funções de callback
            do usuário <constant>CURLOPT_HEADERFUNCTION</constant> e <constant>CURLOPT_WRITEFUNCTION</constant>,
            quando <constant>CURLOPT_HTTPPROXYTUNNEL</constant> é usado e uma solicitação CONNECT é feita.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.54.0. Disponível desde PHP 7.3.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_FASTOPEN</constant></entry>
           <entry valign="top">
            &true; para habilitar TCP Fast Open.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.49.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TFTP_NO_OPTIONS</constant></entry>
           <entry valign="top">
            &true; para não enviar solicitações de opções TFTP.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.48.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TRANSFERTEXT</constant></entry>
           <entry valign="top">
            &true; para usar o modo ASCII para transferências FTP.
            Para LDAP, ele recupera dados em texto simples em vez de HTML. Em
            sistemas Windows, ele não definirá <constant>STDOUT</constant> para o
            modo binário.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNRESTRICTED_AUTH</constant></entry>
           <entry valign="top">
            &true; para continuar enviando o nome de usuário e a senha
            ao seguir os locais (usando
            <constant>CURLOPT_FOLLOWLOCATION</constant>), mesmo quando o
            nome do host foi alterado.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD</constant></entry>
           <entry valign="top">
            &true; para se preparar para um upload.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_VERBOSE</constant></entry>
           <entry valign="top">
            &true; para gerar informações detalhadas. Grava a
            saída em <constant>STDERR</constant> ou no arquivo especificado
            usando <constant>CURLOPT_STDERR</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> deve ser um <type>int</type> para os
       seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
           <entry>Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_BUFFERSIZE</constant></entry>
           <entry valign="top">
            O tamanho do buffer a ser usado para cada leitura. No entanto,
            não há garantia de que essa solicitação será atendida.
           </entry>
           <entry valign="top">
            Added in cURL 7.10.
           </entry>
          </row>
          <row>
           <entry><constant>CURLOPT_CONNECTTIMEOUT</constant></entry>
           <entry valign="top">
            O número de segundos a aguardar durante a tentativa de conexão. Use 0
            para esperar indefinidamente.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT_MS</constant></entry>
           <entry valign="top">
            O número de milissegundos de espera durante a tentativa de conexão. Use 0
            para esperar indefinidamente.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Se libcurl for construído para usar o resolvedor de nome do sistema padrão, essa
            parte da conexão ainda usará a resolução de segundo completo para
            tempos limite com um tempo limite mínimo permitido de um segundo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_CACHE_TIMEOUT</constant></entry>
           <entry valign="top">
            O número de segundos para manter as entradas DNS na memória. Esta
            opção é definida como 120 (2 minutos) por padrão.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            O tempo limite para respostas de <literal>Expect: 100-continue</literal> em milissegundos.
            O padrão é 1000 milissegundos.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.36.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Avance para o ipv6 para o algoritmo de happy eyeballs. Happy eyeballs tenta se
            conectar a endereços IPv4 e IPv6 para hosts dual-stack,
            preferindo IPv6 primeiro para milissegundos de tempo limite.
            O padrão é CURL_HET_DEFAULT, que atualmente é de 200 milissegundos.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.59.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPSSLAUTH</constant></entry>
           <entry valign="top">
            O método de autenticação FTP (quando ativado):
            <constant>CURLFTPAUTH_SSL</constant> (tenta SSL primeiro),
            <constant>CURLFTPAUTH_TLS</constant> (tenta TLS primeiro) ou
            <constant>CURLFTPAUTH_DEFAULT</constant> (deixa o cURL decidir).
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.12.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADEROPT</constant></entry>
           <entry valign="top">
            Como lidar com cabeçalhos. Uma das seguintes constantes:
            <simpara>
             <constant>CURLHEADER_UNIFIED</constant>: os cabeçalhos especificados em
             <constant>CURLOPT_HTTPHEADER</constant> serão utilizados nas requisições
             tanto para servidores quanto para proxies. Com esta opção habilitada,
             <constant>CURLOPT_PROXYHEADER</constant> não terá nenhum efeito.
            </simpara>
            <simpara>
             <constant>CURLHEADER_SEPARATE</constant>: faz
             com que os cabeçalhos <constant>CURLOPT_HTTPHEADER</constant> sejam enviados
             apenas para um servidor e não para um proxy. Os cabeçalhos de proxy devem ser definidos com
             <constant>CURLOPT_PROXYHEADER</constant> para serem usados. Observe que,
             se uma solicitação non-CONNECT for enviada a um proxy, libcurl enviará cabeçalhos
             de servidor e cabeçalhos de proxy. Ao fazer CONNECT, libcurl
             enviará cabeçalhos <constant>CURLOPT_PROXYHEADER</constant> apenas para o proxy e,
             em seguida, cabeçalhos <constant>CURLOPT_HTTPHEADER</constant>
             apenas para o servidor.
            </simpara>
            <simpara>
             O padrão é <constant>CURLHEADER_SEPARATE</constant> a partir de cURL
             7.42.1 e <constant>CURLHEADER_UNIFIED</constant> antes.
            </simpara>
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.37.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_VERSION</constant></entry>
           <entry valign="top">
            <constant>CURL_HTTP_VERSION_NONE</constant> (padrão, permite que CURL
            decida qual versão usar),
            <constant>CURL_HTTP_VERSION_1_0</constant> (força HTTP/1.0),
            <constant>CURL_HTTP_VERSION_1_1</constant> (força HTTP/1.1),
            <constant>CURL_HTTP_VERSION_2_0</constant> (tenta HTTP 2),
            <constant>CURL_HTTP_VERSION_2</constant> (alias de <constant>CURL_HTTP_VERSION_2_0</constant>),
            <constant>CURL_HTTP_VERSION_2TLS</constant> (somente tenta HTTP 2 sobre TLS (HTTPS)) ou
            <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant> (emite solicitações HTTP não TLS usando HTTP/2 sem atualização HTTP/1.1).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPAUTH</constant></entry>
           <entry valign="top">
            <para>
             Os métodos de autenticação HTTP a serem usados. As opções são:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_DIGEST</constant>,
             <constant>CURLAUTH_GSSNEGOTIATE</constant>,
             <constant>CURLAUTH_NTLM</constant>,
             <constant>CURLAUTH_AWS_SIGV4</constant>,
             <constant>CURLAUTH_ANY</constant> e
             <constant>CURLAUTH_ANYSAFE</constant>.
            </para>
            <para>
             O operador <literal>|</literal> (ou) pode ser usado para combinar
             mais de um método. Se isso for feito, o cURL pesquisará o servidor para ver
             quais métodos ele suporta e escolher o melhor.
            </para>
            <para>
             <constant>CURLAUTH_ANY</constant> define todos os bits. cURL selecionará automaticamente
             aquele que encontrar mais seguro.
            </para>
            <para>
             <constant>CURLAUTH_ANYSAFE</constant> define todos os bits, exceto <constant>CURLAUTH_BASIC</constant>.
             cURL selecionará automaticamente o método que considerar mais seguro.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILESIZE</constant></entry>
           <entry valign="top">
            O tamanho esperado, em bytes, do arquivo ao fazer upload de um arquivo
            para um site remoto. Observe que usar esta opção não impedirá que libcurl
            envie mais dados, pois exatamente o que é enviado depende de
            <constant>CURLOPT_READFUNCTION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_LIMIT</constant></entry>
           <entry valign="top">
            A velocidade de transferência, em bytes por segundo, que a transferência deve estar
            abaixo durante a contagem de <constant>CURLOPT_LOW_SPEED_TIME</constant> segundos
            antes do PHP considerar a transferência muito lenta e abortar.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_TIME</constant></entry>
           <entry valign="top">
            O número de segundos que a velocidade de transferência deve estar abaixo de
            <constant>CURLOPT_LOW_SPEED_LIMIT</constant> antes que o PHP considere
            a transferência muito lenta e aborte.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant></entry>
           <entry valign="top">
            Permite que o comando RCPT TO falhe para alguns destinatários.
           </entry>
           <entry valign="top">
            Ao enviar dados para vários destinatários, por padrão, o cURL abortará a conversa SMTP se pelo menos um dos
            destinatários causar um erro ao comando RCPT TO. Esta opção instrui o cURL a ignorar erros e prosseguir com
            os destinatários válidos restantes. Se todos os destinatários acionarem falhas no RCPT TO e esta sinalização
            estiver configurada, o cURL abortará a conversa SMTP e retornará o erro recebido do último comando RCPT TO.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXAGE_CONN</constant></entry>
           <entry valign="top">
            O tempo máximo de inatividade permitido para que uma conexão existente seja considerada para reutilização.
            O padrão é definido como <literal>118</literal> segundos.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXFILESIZE_LARGE</constant></entry>
           <entry valign="top">
            O tamanho máximo do arquivo em bytes permitido para download. Se o arquivo solicitado for encontrado com um
            tamanho maior do que esse valor, a transferência não será iniciada e será retornado <constant>CURLE_FILESIZE_EXCEEDED</constant>.
            O tamanho do arquivo nem sempre é conhecido antes do download, e para tais arquivos, esta opção não tem efeito,
            mesmo que a transferência do arquivo acabe sendo maior do que esse limite fornecido.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXLIFETIME_CONN</constant></entry>
           <entry valign="top">
            O tempo máximo em segundos, desde a criação da conexão, permitido para que uma conexão existente
            seja considerada para reutilização. Se for encontrada uma conexão em cache que seja mais antiga do que
            esse valor, ela será fechada assim que quaisquer transferências em andamento forem concluídas.
            O padrão é 0 segundos, o que significa que a opção está desativada e todas as conexões são elegíveis para reutilização.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXCONNECTS</constant></entry>
           <entry valign="top">
            A quantidade máxima de conexões persistentes permitidas.
            Quando o limite é atingido, o mais antigo do cache é fechado
            para evitar o aumento do número de conexões abertas.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXREDIRS</constant></entry>
           <entry valign="top">
            A quantidade máxima de redirecionamentos HTTP a seguir. Use esta opção
            juntamente com <constant>CURLOPT_FOLLOWLOCATION</constant>.
            O valor padrão de <literal>20</literal> é definido para evitar redirecionamentos infinitos.
            Definir como <literal>-1</literal> permite redirecionamentos infinitos e <literal>0</literal>
            recusa todos os redirecionamentos.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PORT</constant></entry>
           <entry valign="top">
            Um número de porta alternativo para se conectar.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTREDIR</constant></entry>
           <entry valign="top">
            Uma máscara de bits de 1 (301 movido permanentemente), 2 (302 encontrado)
            e 4 (303 consulte outro) se o método HTTP POST deve ser mantido
            quando <constant>CURLOPT_FOLLOWLOCATION</constant> é definido e
            ocorre um tipo específico de redirecionamento.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROTOCOLS</constant></entry>
           <entry valign="top">
            <para>
             Máscara de bits de valores <constant>CURLPROTO_*</constant>. Se usado, esta máscara de bits
             limita quais protocolos libcurl pode usar na transferência. Isso permite que
             você tenha um libcurl construído para suportar uma ampla gama de protocolos, mas
             ainda limitar transferências específicas para poder usar apenas um subconjunto
             deles. Por padrão, o libcurl aceitará todos os protocolos que ele suporta.
             Consulte também <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
            </para>
            <para>
             As opções de protocolo válidas são:
             <constant>CURLPROTO_HTTP</constant>,
             <constant>CURLPROTO_HTTPS</constant>,
             <constant>CURLPROTO_FTP</constant>,
             <constant>CURLPROTO_FTPS</constant>,
             <constant>CURLPROTO_SCP</constant>,
             <constant>CURLPROTO_SFTP</constant>,
             <constant>CURLPROTO_TELNET</constant>,
             <constant>CURLPROTO_LDAP</constant>,
             <constant>CURLPROTO_LDAPS</constant>,
             <constant>CURLPROTO_DICT</constant>,
             <constant>CURLPROTO_FILE</constant>,
             <constant>CURLPROTO_TFTP</constant>,
             <constant>CURLPROTO_MQTT</constant>,
             <constant>CURLPROTO_ALL</constant>
            </para>
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYAUTH</constant></entry>
           <entry valign="top">
            Os métodos de autenticação HTTP a serem usados para a conexão proxy.
            Use as mesmas máscaras de bits descritas em
            <constant>CURLOPT_HTTPAUTH</constant>. Para autenticação de proxy,
            apenas <constant>CURLAUTH_BASIC</constant> e
            <constant>CURLAUTH_NTLM</constant> são suportados atualmente.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYPORT</constant></entry>
           <entry valign="top">
            O número da porta do proxy ao qual se conectar. Esse número de porta
            também pode ser definido em <constant>CURLOPT_PROXY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYTYPE</constant></entry>
           <entry valign="top">
            <constant>CURLPROXY_HTTP</constant> (padrão),
            <constant>CURLPROXY_SOCKS4</constant>,
            <constant>CURLPROXY_SOCKS5</constant>,
            <constant>CURLPROXY_SOCKS4A</constant> ou
            <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REDIR_PROTOCOLS</constant></entry>
           <entry valign="top">
            Máscara de bits de valores <constant>CURLPROTO_*</constant> Se usado, esta máscara de bits
            limita quais protocolos libcurl pode usar em uma transferência que segue
            em um redirecionamento quando <constant>CURLOPT_FOLLOWLOCATION</constant> está ativado.
            Isso permite que você limite transferências específicas para usar apenas um subconjunto
            de protocolos em redirecionamentos. Por padrão, libcurl permitirá todos os protocolos,
            exceto FILE e SCP. Esta é uma diferença em relação às versões pré-7.19.4
            que seguiriam incondicionalmente para todos os protocolos suportados.
            Consulte também <constant>CURLOPT_PROTOCOLS</constant> para valores constantes de protocolo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESUME_FROM</constant></entry>
           <entry valign="top">
            O deslocamento, em bytes, do qual retomar uma transferência.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SOCKS5_AUTH</constant></entry>
           <entry valign="top">
            <para>
             Os métodos de autenticação SOCKS5 a serem usados. As opções são:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_GSSAPI</constant>,
             <constant>CURLAUTH_NONE</constant>.
            </para>
            <para>
             O operador <literal>|</literal> (ou) pode ser usado para combinar
             mais de um método. Se isso for feito, o cURL pesquisará o servidor
             para ver quais métodos ele suporta e escolher o melhor.
            </para>
            <para>
             <constant>CURLAUTH_BASIC</constant> permite autenticação de nome de usuário/senha.
            </para>
            <para>
             <constant>CURLAUTH_GSSAPI</constant> permite autenticação GSS-API.
            </para>
            <para>
             <constant>CURLAUTH_NONE</constant> não permite autenticação.
            </para>
            <para>
             O padrão é <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
             Defina o nome de usuário e a senha reais com a opção <constant>CURLOPT_PROXYUSERPWD</constant>.
            </para>
           </entry>
           <entry valign="top">
            Disponível a partir de 7.3.0 e curl >= 7.55.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Defina as opções de comportamento SSL, que é uma máscara de bits de qualquer uma das seguintes constantes:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: não tente usar soluções
             alternativas para uma falha de segurança nos protocolos SSL3 e TLS1.0.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: desabilita as verificações
             de revogação de certificado para os back-ends SSL em que tal comportamento
             está presente.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_AUTO_CLIENT_CERT</constant>: localiza e
             utiliza automaticamente um certificado de cliente para autenticação quando
             solicitado pelo servidor. Esta opção é suportada apenas para Schannel
             (a biblioteca SSL nativa do Windows).
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NATIVE_CA</constant>: utiliza o armazenamento de CA
             nativo do sistema operacional para verificação de certificados. Funciona apenas no Windows
             quando construído para usar o OpenSSL. Esta opção é experimental e seu comportamento está sujeito a alterações.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>: não aceite cadeias de certificados
             'parciais', que o cURL, de outra forma, faz por padrão. Esta opção é suportada apenas para o OpenSSL e
             falhará na verificação do certificado se a cadeia terminar com um certificado
             intermediário e não com um certificado raiz.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_REVOKE_BEST_EFFORT</constant>: ignora verificações de revogação de certificado
             no caso de pontos de distribuição ausentes ou offline para os backends SSL em que esse
             comportamento está presente. Esta opção é suportada apenas para Schannel (a biblioteca SSL nativa do Windows).
             Se combinada com <constant>CURLSSLOPT_NO_REVOKE</constant>, esta última tem precedência.
            </simpara>
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            <literal>2</literal> para verificar se um campo Nome comum ou um campo Nome alternativo
            do assunto no certificado de mesmo nível SSL corresponde ao nome de host fornecido.
            <literal>0</literal> para não verificar os nomes.
            <literal>1</literal> não deve ser usado.
            Em ambientes de produção o valor desta opção
            deve ser mantido em <literal>2</literal> (valor padrão).
           </entry>
           <entry valign="top">
            Suporte para o valor <literal>1</literal> removido no cURL 7.28.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLVERSION</constant></entry>
           <entry valign="top">
            Um de <constant>CURL_SSLVERSION_DEFAULT</constant> (0),
            <constant>CURL_SSLVERSION_TLSv1</constant> (1),
            <constant>CURL_SSLVERSION_SSLv2</constant> (2),
            <constant>CURL_SSLVERSION_SSLv3</constant> (3),
            <constant>CURL_SSLVERSION_TLSv1_0</constant> (4),
            <constant>CURL_SSLVERSION_TLSv1_1</constant> (5),
            <constant>CURL_SSLVERSION_TLSv1_2</constant> (6) ou
            <constant>CURL_SSLVERSION_TLSv1_3</constant> (7).
            A versão máxima do TLS pode ser definida usando uma das constantes
            <constant>CURL_SSLVERSION_MAX_*</constant>. Também é possível OR uma das constantes <constant>CURL_SSLVERSION_*</constant>
            com uma das constantes <constant>CURL_SSLVERSION_MAX_*</constant>.
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (a versão máxima suportada pela biblioteca),
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>, ou
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant>.
            <note>
             <para>
              Sua melhor aposta é não definir isso e deixá-lo usar o padrão.
              Defini-lo como 2 ou 3 é muito perigoso devido às vulnerabilidades
              conhecidas em SSLv2 e SSLv3.
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Defina as opções de comportamento SSL do proxy, que é uma máscara de bits de qualquer uma das seguintes constantes:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: não tente usar soluções
             alternativas para uma falha de segurança nos protocolos SSL3 e TLS1.0.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: desabilita as verificações de
             revogação de certificado para os back-ends SSL em que tal comportamento está
             presente. (curl >= 7.44.0)
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>: não aceita cadeias de
             certificados "parciais", o que de outra forma faz por padrão. (curl >= 7.68.0)
            </simpara>
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            Defina como <literal>2</literal> para verificar os campos de nome do certificado do proxy HTTPS em relação ao nome do proxy.
            Quando definido como <literal>0</literal>, a conexão é bem-sucedida, independentemente dos nomes usados no certificado.
            Use essa habilidade com cuidado!
            <literal>1</literal> tratado como uma opção de depuração no curl 7.28.0 e anteriores.
            De curl 7.28.1 a 7.65.3, <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> é retornado.
            Do curl 7.66.0 em diante, <literal>1</literal> e <literal>2</literal> são tratados como o mesmo valor.
            Em ambientes de produção o valor desta opção deve ser mantido em <literal>2</literal>  (valor padrão).
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLVERSION</constant></entry>
           <entry valign="top">
            Um de <constant>CURL_SSLVERSION_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_TLSv1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_TLSv1_3</constant>,
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant> ou
            <constant>CURL_SSLVERSION_SSLv3</constant>.
            <note>
             <para>
              Sua melhor aposta é não definir isso e deixá-lo usar o <constant>CURL_SSLVERSION_DEFAULT</constant> padrão,
              que tentará descobrir a versão remota do protocolo SSL.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STREAM_WEIGHT</constant></entry>
           <entry valign="top">
            Defina o peso numérico do fluxo (um número entre 1 e 256).
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.46.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPALIVE</constant></entry>
           <entry valign="top">
            Se definido como <literal>1</literal>, as sondagens de manutenção de atividade do TCP serão enviadas.
            O atraso e a frequência dessas sondagens podem ser controlados pelas opções <constant>CURLOPT_TCP_KEEPIDLE</constant>
            e <constant>CURLOPT_TCP_KEEPINTVL</constant>, desde que o sistema operacional as
            suporte. Se definido como <literal>0</literal> (padrão), os testes de manutenção de atividade são desativados.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPIDLE</constant></entry>
           <entry valign="top">
            Define o atraso, em segundos, que o sistema operacional aguardará enquanto a conexão
            estiver ociosa antes de enviar testes de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant>
            estiver ativado. Nem todos os sistemas operacionais oferecem suporte a essa opção.
            O padrão é <literal>60</literal>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPINTVL</constant></entry>
           <entry valign="top">
            Define o intervalo, em segundos, que o sistema operacional aguardará entre o envio de
            análises de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant> estiver ativado.
            Nem todos os sistemas operacionais oferecem suporte a essa opção.
            O padrão é <literal>60</literal>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMECONDITION</constant></entry>
           <entry valign="top">
            Como <constant>CURLOPT_TIMEVALUE</constant> é tratado.
            Use <constant>CURL_TIMECOND_IFMODSINCE</constant> para retornar a
            página somente se ela tiver sido modificada desde o horário especificado em
            <constant>CURLOPT_TIMEVALUE</constant>. Se não foi modificado,
            um cabeçalho <literal>"304 Not Modified"</literal> será retornado
            assumindo que <constant>CURLOPT_HEADER</constant> é &true;.
            Use <constant>CURL_TIMECOND_IFUNMODSINCE</constant> para o efeito reverso.
            Use <constant>CURL_TIMECOND_NONE</constant> para ignorar
            <constant>CURLOPT_TIMEVALUE</constant> e sempre retornar a página.
            <constant>CURL_TIMECOND_NONE</constant> é o padrão.
           </entry>
           <entry valign="top">
            Antes do cURL 7.46.0, o padrão era
            <constant>CURL_TIMECOND_IFMODSINCE</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT</constant></entry>
           <entry valign="top">
            O número máximo de segundos para permitir que as funções cURL sejam executadas.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            O número máximo de milissegundos para permitir que as funções cURL
            sejam executadas.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Se libcurl for construído para usar o resolvedor de nome do sistema padrão, essa
            parte da conexão ainda usará a resolução de segundo completo para
            tempos limite com um tempo limite mínimo permitido de um segundo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE</constant></entry>
           <entry valign="top">
            O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado por
            <constant>CURLOPT_TIMECONDITION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE_LARGE</constant></entry>
           <entry valign="top">
            O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado
            por <constant>CURLOPT_TIMECONDITION</constant>. O padrão é zero.
            A diferença entre esta opção e <constant>CURLOPT_TIMEVALUE</constant>
            é o tipo do argumento. Em sistemas onde 'long' tem apenas 32 bits de largura,
            esta opção deve ser usada para definir datas além do ano de 2038.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.59.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPKEEP_INTERVAL_MS</constant></entry>
           <entry valign="top">
            Alguns protocolos possuem mecanismos de 'manutenção de conexão'. Esses mecanismos geralmente enviam algum
            tráfego nas conexões existentes para mantê-las ativas. Esta opção define o intervalo de manutenção de conexão.
            Atualmente, o único protocolo com um mecanismo de manutenção de conexão é o HTTP/2. Quando o intervalo de
            manutenção de conexão é excedido, um quadro PING do HTTP/2 é enviado na conexão.
            O valor padrão é de <literal>60</literal> segundos.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD_BUFFERSIZE</constant></entry>
           <entry valign="top">
            Tamanho de buffer preferido em bytes para o buffer de envio do cURL.
            O tamanho padrão do buffer de envio é de 64 kilobytes. O tamanho máximo do buffer permitido a ser definido é de 2 megabytes.
            O tamanho mínimo do buffer permitido a ser definido é de 16 kilobytes.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Se um download exceder essa velocidade (contada em bytes por segundo) na
            média cumulativa durante a transferência, a transferência será pausada para
            manter a taxa média menor ou igual ao valor do parâmetro.
            O padrão é velocidade ilimitada.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Se um upload exceder essa velocidade (contada em bytes por segundo) na
            média cumulativa durante a transferência, a transferência será pausada para
            manter a taxa média menor ou igual ao valor do parâmetro.
            O padrão é velocidade ilimitada.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_AUTH_TYPES</constant></entry>
           <entry valign="top">
            Uma máscara de bits que consiste em um ou mais
            <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
            <constant>CURLSSH_AUTH_PASSWORD</constant>,
            <constant>CURLSSH_AUTH_HOST</constant>,
            <constant>CURLSSH_AUTH_KEYBOARD</constant>. Defina como
            <constant>CURLSSH_AUTH_ANY</constant> para permitir que libcurl escolha um.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_IPRESOLVE</constant></entry>
           <entry valign="top">
            Permite que um aplicativo selecione que tipo de endereço IP usar ao
            resolver nomes de host. Isso só é interessante ao usar nomes de host que
            resolvem endereços usando mais de uma versão de IP, os valores possíveis são
            <constant>CURL_IPRESOLVE_WHATEVER</constant>,
            <constant>CURL_IPRESOLVE_V4</constant>,
            <constant>CURL_IPRESOLVE_V6</constant>, por padrão
            <constant>CURL_IPRESOLVE_WHATEVER</constant>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.8.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_FILEMETHOD</constant></entry>
           <entry valign="top">
            Diga ao curl qual método usar para acessar um arquivo em um servidor FTP(S). Os valores possíveis são
            <constant>CURLFTPMETHOD_DEFAULT</constant>,
            <constant>CURLFTPMETHOD_MULTICWD</constant>,
            <constant>CURLFTPMETHOD_NOCWD</constant> e
            <constant>CURLFTPMETHOD_SINGLECWD</constant>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.15.1.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> deve ser uma <type>string</type> para os
       seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
           <entry>Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant></entry>
           <entry valign="top">
            Permite o uso de um socket de domínio Unix abstrato em vez de estabelecer
            uma conexão TCP com um host e define o caminho para
            a <type>string</type> fornecida. Esta opção compartilha a mesma semântica
            que <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Essas duas opções compartilham
            o mesmo armazenamento e, portanto, apenas uma delas pode ser definida por
            identificador.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e cURL 7.53.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ALTSVC</constant></entry>
           <entry valign="top">
            Passe o nome do arquivo para o cURL usar como arquivo de cache Alt-Svc para ler os conteúdos em cache
            existentes e, possivelmente, gravá-los de volta após uma transferência, a menos que <constant>CURLALTSVC_READONLYFILE</constant>
            seja definido via <constant>CURLOPT_ALTSVC_CTRL</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ALTSVC_CTRL</constant></entry>
           <entry valign="top">
            Preencha a máscara de bits com o conjunto correto de recursos para instruir o cURL sobre como lidar com Alt-Svc
            para as transferências. O cURL só aceita cabeçalhos Alt-Svc sobre HTTPS. Ele também só completará
            uma solicitação para uma origem alternativa se essa origem estiver devidamente hospedada sobre HTTPS.
            Definir qualquer bit habilitará o mecanismo Alt-Svc. As opções são:
            <constant>CURLALTSVC_H1</constant>,
            <constant>CURLALTSVC_H2</constant>,
            <constant>CURLALTSVC_H3</constant>, e
            <constant>CURLALTSVC_READONLYFILE</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_AWS_SIGV4</constant></entry>
           <entry valign="top">
            <para>
             Fornecer autenticação de assinatura AWS V4 no cabeçalho HTTP(S).
            </para>
            <para>
             Esta opção substitui quaisquer outros tipos de autenticação que tenham sido definidos em
             <constant>CURLOPT_HTTPAUTH</constant>. Este método não pode ser combinado com outros tipos de autenticação.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO</constant></entry>
           <entry valign="top">
            O nome de um arquivo contendo um ou mais certificados para verificar
            com o par. Isso só faz sentido quando usado em combinação com
            <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
            Pode exigir um caminho absoluto.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO_BLOB</constant></entry>
           <entry valign="top">
            O nome de um arquivo PEM que contém um ou mais certificados para verificar o
            peer. Esta opção substitui <constant>CURLOPT_CAINFO</constant>.
           </entry>
           <entry valign="top">
            Disponível a partir do PHP 8.2.0 e cURL 7.77.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAPATH</constant></entry>
           <entry valign="top">
            Um diretório que contém vários certificados de CA. Use esta opção
            juntamente com <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIE</constant></entry>
           <entry valign="top">
            O conteúdo do cabeçalho <literal>"Cookie: "</literal> a ser usado
            na solicitação HTTP.
            Observe que vários cookies são separados por um ponto e vírgula
            seguido por um espaço (exemplo: "<literal>fruit=apple; colour=red</literal>")
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEFILE</constant></entry>
           <entry valign="top">
            O nome do arquivo que contém os dados do cookie. O arquivo de cookie
            pode estar no formato Netscape ou apenas cabeçalhos de estilo HTTP
            simples despejados em um arquivo.
            Se o nome for uma string vazia, nenhum cookie será carregado, mas
            a manipulação de cookies ainda estará habilitada.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEJAR</constant></entry>
           <entry valign="top">
            O nome de um arquivo no qual serão gravados todos os cookies internos quando o destrutor
            do identificador for chamado.
            <warning>
             <simpara>
              A partir do PHP 8.0.0, <function>curl_close</function> não tem função
              e <emphasis>não</emphasis> destrói o identificador.
              Se for necessário gravar cookies antes do identificador ser automaticamente
              destruído, deve-se chamar <function>unset</function> no identificador.
             </simpara>
            </warning>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIELIST</constant></entry>
           <entry valign="top">
            Uma string de cookie (ou seja, uma única linha no formato Netscape/Mozilla ou um
            cabeçalho Set-Cookie regular estilo HTTP) adiciona esse único cookie ao armazenamento interno de cookies.
            <literal>"ALL"</literal> apaga todos os cookies mantidos na memória.
            <literal>"SESS"</literal> apaga todos os cookies de sessão mantidos na memória.
            <literal>"FLUSH"</literal> grava todos os cookies conhecidos no arquivo especificado por <constant>CURLOPT_COOKIEJAR</constant>.
            <literal>"RELOAD"</literal> carrega todos os cookies dos arquivos especificados por <constant>CURLOPT_COOKIEFILE</constant>.
           </entry>
           <entry valign="top">
            Disponível desde cURL 7.14.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CUSTOMREQUEST</constant></entry>
           <entry valign="top"><para>
            Um método de solicitação personalizado para usar em vez de
            <literal>"GET"</literal> ou <literal>"HEAD"</literal> ao fazer uma
            solicitação HTTP. Isso é útil para fazer
            <literal>"DELETE"</literal> ou outras solicitações HTTP mais obscuras.
            Os valores válidos são coisas como <literal>"GET"</literal>,
            <literal>"POST"</literal>, <literal>"CONNECT"</literal> e assim por diante;
            ou seja, não insira uma linha de solicitação HTTP inteira aqui. Por exemplo,
            inserir <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
            seria incorreto.
            <note>
             <para>
              Não faça isso sem antes certificar-se de que o servidor oferece suporte
              ao método de solicitação personalizado.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DEFAULT_PROTOCOL</constant></entry>
           <entry valign="top"><para>
            O protocolo padrão a ser usado se a URL não tiver um nome de esquema.
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.45.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_INTERFACE</constant></entry>
           <entry valign="top"><para>
            Defina o nome da interface de rede à qual o resolvedor de DNS deve se vincular.
            Deve ser um nome de interface (não um endereço).
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.33.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP4</constant></entry>
           <entry valign="top"><para>
            Defina o endereço IPv4 local ao qual o resolvedor deve se vincular. O argumento
            deve conter um único endereço IPv4 numérico como string.
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.33.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP6</constant></entry>
           <entry valign="top"><para>
            Defina o endereço IPv6 local ao qual o resolvedor deve se vincular. O argumento
            deve conter um único endereço IPv6 numérico como string.
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.33.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EGDSOCKET</constant></entry>
           <entry valign="top">
            Como <constant>CURLOPT_RANDOM_FILE</constant>, exceto um nome de arquivo
            para um socket Entropy Gathering Daemon.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ENCODING</constant></entry>
           <entry valign="top">
            O conteúdo do cabeçalho <literal>"Accept-Encoding: "</literal>.
            Isso permite a decodificação da resposta. As codificações suportadas são
            <literal>"identity"</literal>, <literal>"deflate"</literal> e
            <literal>"gzip"</literal>. Se uma string vazia,  <literal>""</literal>,
            for definida, um cabeçalho contendo todos os tipos de codificação suportados será enviado.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPPORT</constant></entry>
           <entry valign="top">
            O valor que será usado para obter o endereço IP a ser usado
            para a instrução FTP "PORT". A instrução "PORT" diz ao
            servidor remoto para se conectar ao nosso endereço IP especificado. A
            string pode ser um endereço IP simples, um nome de host, um nome de interface de rede
            (no Unix) ou apenas um '-' simples para usar o endereço
            IP padrão do sistema.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HSTS</constant></entry>
           <entry valign="top">
            <para>
             Nome do arquivo de cache do HSTS (HTTP Strict Transport Security).
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HSTS_CTRL</constant></entry>
           <entry valign="top">
            <para>
             Controla o comportamento do HSTS (HTTP Strict Transport Security). Preencha a máscara de bits com o conjunto
             correto de recursos para instruir o cURL sobre como lidar com o HSTS para as transferências.
             <constant>CURLHSTS_ENABLE</constant> habilita o cache HSTS na memória. Se o arquivo de cache HSTS estiver definido,
             defina <constant>CURLHSTS_READONLYFILE</constant> para tornar o arquivo somente leitura.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INTERFACE</constant></entry>
           <entry valign="top">
            O nome da interface de rede de saída a ser usada. Pode ser um nome de interface,
            um endereço IP ou um nome de host.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEYPASSWD</constant></entry>
           <entry valign="top">
            A senha necessária para usar a chave privada <constant>CURLOPT_SSLKEY</constant>
            ou <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.16.1
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KRB4LEVEL</constant></entry>
           <entry valign="top">
            O nível de segurança KRB4 (Kerberos 4). Qualquer um dos seguintes valores
            (do menos para o mais poderoso) são válidos:
            <literal>"clear"</literal>,
            <literal>"safe"</literal>,
            <literal>"confidential"</literal>,
            <literal>"private".</literal>.
            Se a string não corresponder a um desses,
            <literal>"private"</literal> será usado. Definir esta opção como &null;
            desativará a segurança KRB4. Atualmente a segurança KRB4 funciona
            apenas com transações FTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOGIN_OPTIONS</constant></entry>
           <entry valign="top">
            Pode ser usado para definir opções de login específicas do protocolo,
            como o mecanismo de autenticação preferencial via "AUTH=NTLM" ou "AUTH=*",
            e deve ser usado em conjunto com a opção
            <constant>CURLOPT_USERNAME</constant>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.34.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
            Defina a chave pública fixada.
            A string pode ser o nome do arquivo da sua chave pública fixada. O formato
            de arquivo esperado é "PEM" ou "DER". A string também pode ser qualquer número
            de hashes sha256 codificados em base64 precedidos por "sha256//" e
            separados por ";".
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.39.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTFIELDS</constant></entry>
           <entry valign="top">
            <simpara>
             Os dados completos a serem postados em uma operação HTTP "POST".
             Este parâmetro pode ser passado
             como uma string com código urlen como '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
             ou como uma matriz com o nome do campo como chave e os dados do campo como valor.
             Se <parameter>value</parameter>  for um array, o cabeçalho
             <literal>multipart/form-data</literal> será definido como
             <literal>Content-Type</literal>.
            </simpara>
            <simpara>
             Os arquivos podem ser enviados usando <classname>CURLFile</classname> ou <classname>CURLStringFile</classname>,
             caso em que o <parameter>value</parameter> deve ser uma matriz.
            </simpara>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRIVATE</constant></entry>
           <entry valign="top">
            Quaisquer dados que devem ser associados a este identificador cURL. Esses dados
            podem ser posteriormente recuperados com a opção
            <constant>CURLINFO_PRIVATE</constant> de
            <function>curl_getinfo</function>. cURL não faz nada com esses dados.
            Ao usar um identificador cURL múltiplo, esses dados privados geralmente são
            uma chave exclusiva para identificar um identificador cURL padrão.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRE_PROXY</constant></entry>
           <entry valign="top">
            Defina uma <type>string</type> contendo o nome do host ou o endereço IP numérico
            pontilhado a ser usado como o pré-proxy ao qual o curl se conecta antes
            de se conectar ao proxy HTTP(S) especificado na opção
            <constant>CURLOPT_PROXY</constant> para a próxima solicitação.
            O pré-proxy só pode ser um proxy SOCKS e deve ser prefixado com
            <literal>[scheme]://</literal> para especificar que tipo de meias é usado.
            Um endereço IPv6 numérico deve ser escrito entre [colchetes].
            Definir o pré-proxy como uma string vazia desativa explicitamente o uso de um pré-proxy.
            Para especificar o número da porta nesta string, anexe :<literal>:[port]</literal>
            ao final do nome do host. O número da porta do proxy pode opcionalmente
            ser especificado com a opção separada <constant>CURLOPT_PROXYPORT</constant>.
            O padrão é usar a porta 1080 para proxies se uma porta não for especificada.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY</constant></entry>
           <entry valign="top">
            O proxy HTTP para o túnel de solicitações.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SERVICE_NAME</constant></entry>
           <entry valign="top">
            O nome do serviço de autenticação de proxy.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.43.0 para proxies HTTP e no cURL 7.49.0 para proxies SOCKS5.
            Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAINFO</constant></entry>
           <entry valign="top">
            O caminho para o pacote de Autoridade de Certificação (CA) do proxy. Defina o caminho
            como uma <type>string</type> que nomeia um arquivo contendo um ou mais certificados para
            verificar o proxy HTTPS.
            Esta opção é para conectar a um proxy HTTPS, não a um servidor HTTPS.
            Padrões definidos para o caminho do sistema onde o pacote cacert do libcurl
            é considerado armazenado.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAINFO_BLOB</constant></entry>
           <entry valign="top">
            O nome de um arquivo PEM que contém um ou mais certificados para verificar o proxy HTTPS.
            Esta opção é para se conectar a um proxy HTTPS, não a um servidor HTTPS.
            O valor padrão é definido como o caminho do sistema onde se presume que o pacote cacert do libcurl
            está armazenado.
           </entry>
           <entry valign="top">
            Disponível a partir do PHP 8.2.0 e libcurl >= cURL 7.77.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAPATH</constant></entry>
           <entry valign="top">
            O diretório que contém vários certificados CA para verificar o proxy HTTPS.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CRLFILE</constant></entry>
           <entry valign="top">
            Defina o nome do arquivo com a concatenação de CRL (Certificate Revocation List)
            no formato PEM para usar na validação do certificado que ocorre
            durante a troca SSL.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_KEYPASSWD</constant></entry>
           <entry valign="top">
            Defina a string a ser usada como a senha necessária para usar a
            chave privada <constant>CURLOPT_PROXY_SSLKEY</constant>. Você nunca precisa
            de uma senha para carregar um certificado, mas precisa de uma para carregar sua chave privada.
            Esta opção é para conectar a um proxy HTTPS, não a um servidor HTTPS.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
            Defina a chave pública fixada para o proxy HTTPS. A string pode ser o nome do arquivo
            da sua chave pública fixada. O formato de arquivo esperado é "PEM" ou "DER".
            A string também pode ser qualquer número de hashes sha256 codificados em
            base64 precedidos por "sha256//" e separados por ";"
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERT</constant></entry>
           <entry valign="top">
            O nome do arquivo do seu certificado de cliente usado para se conectar ao proxy HTTPS.
            O formato padrão é "P12" no Secure Transport e "PEM" em outros mecanismos
            e pode ser alterado com <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
            Com NSS ou Secure Transport, também pode ser o apelido do certificado
            com o qual você deseja autenticar, pois é nomeado no banco de dados de segurança.
            Se você deseja usar um arquivo do diretório atual, preceda-o com o
            prefixo "./", para evitar confusão com um apelido.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            O formato do seu certificado de cliente usado ao se conectar a um proxy HTTPS.
            Os formatos suportados são "PEM" e "DER", exceto com Transporte Seguro.
            OpenSSL (versões 0.9.3 e posteriores) e Secure Transport
            (no iOS 5 ou posterior, ou OS X 10.7 ou posterior) também suportam "P12" para
            arquivos codificados com PKCS#12. O padrão é "PEM".
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            A lista de cifras a serem usadas para a conexão com o proxy HTTPS.
            A lista deve estar sintaticamente correta, consiste em uma ou mais cadeias
            de cifras separadas por dois pontos. Vírgulas ou espaços também são separadores aceitáveis,
            mas dois pontos são normalmente usados, !, - e + podem ser usados como operadores.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            A lista de conjuntos de cifras a serem usados para a conexão TLS 1.3 com um proxy.
            A lista deve estar sintaticamente correta, ela consiste em uma ou mais sequências
            de conjuntos de cifras separadas por dois pontos. Esta opção é usada atualmente
            apenas quando o curl é construído para usar o OpenSSL 1.1.1 ou posterior.
            Se você estiver usando um back-end SSL diferente, tente configurar
            os conjuntos de cifras TLS 1.3 usando a opção <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl &gt;= cURL 7.61.0. Disponível quando construído com OpenSSL &gt;= 1.1.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEY</constant></entry>
           <entry valign="top">
            O nome do arquivo de sua chave privada usada para conectar-se ao proxy HTTPS.
            O formato padrão é "PEM" e pode ser alterado com
            <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
            (Somente iOS e Mac OS X) Essa opção será ignorada se o curl tiver sido criado no Secure Transport.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0. Disponível se construído com TLS ativado.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            O formato da sua chave privada. Os formatos suportados são "PEM", "DER" e "ENG".
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant></entry>
           <entry valign="top">
            A senha a ser usada para o método de autenticação TLS especificado com a opção
            <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requer que a opção
            <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> também seja definida.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant></entry>
           <entry valign="top">
            O método de autenticação TLS usado para a conexão HTTPS. O método suportado é "SRP".
            <note>
             <para>
              A autenticação Secure Remote Password (SRP) para TLS fornece autenticação mútua
              se ambos os lados tiverem um segredo compartilhado. Para usar TLS-SRP, você também deve definir
              as opções <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> e
              <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant></entry>
           <entry valign="top">
            O nome de usuário a ser usado para o método de autenticação TLS do proxy HTTPS especificado com a opção
            <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>. Requer que a opção
            <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> também seja definida.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYUSERPWD</constant></entry>
           <entry valign="top">
            Um nome de usuário e senha formatados como
            <literal>"[username]:[password]"</literal> para usar na
            conexão com o proxy.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANDOM_FILE</constant></entry>
           <entry valign="top">
            Um nome de arquivo a ser usado para propagar o gerador de números aleatórios para SSL.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANGE</constant></entry>
           <entry valign="top">
            Faixa(s) de dados a serem recuperados no formato
            <literal>"X-Y"</literal> onde X ou Y são opcionais. As transferências HTTP
            também suportam vários intervalos, separados por vírgulas no formato
            <literal>"X-Y,N-M"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REFERER</constant></entry>
           <entry valign="top">
            O conteúdo do cabeçalho <literal>"Referer: "</literal> a ser usado em uma
            solicitação HTTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SASL_AUTHZID</constant></entry>
           <entry valign="top">
            A identidade de autorização (authzid) para a transferência. Aplicável apenas ao mecanismo de autenticação
            SASL PLAIN, onde é opcional. Quando não especificado, apenas a identidade de autenticação
            (authcid) conforme especificada pelo nome de usuário será enviada para o servidor, junto com a senha.
            O servidor derivará o authzid do authcid quando não fornecido, que será então usado internamente.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SERVICE_NAME</constant></entry>
           <entry valign="top">
            O nome do serviço de autenticação.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.43.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant></entry>
           <entry valign="top">
            Uma string contendo 32 dígitos hexadecimais. A string deve ser a soma
            de verificação MD5 da chave pública do host remoto e libcurl rejeitará
            a conexão com o host, a menos que os md5sums correspondam.
            Esta opção é apenas para transferências SCP e SFTP.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.17.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant></entry>
           <entry valign="top">
            Hash SHA256 codificado em Base64 da chave pública do host remoto.
            A transferência falhará se o hash fornecido não corresponder ao hash fornecido pelo host remoto.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant></entry>
           <entry valign="top">
            O nome do arquivo para sua chave pública. Se não for usado, o padrão de
            libcurl é $HOME/.ssh/id_dsa.pub se a variável de ambiente HOME estiver definida
            e apenas "id_dsa.pub" no diretório atual se HOME não estiver definido.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant></entry>
           <entry valign="top">
            O nome do arquivo para sua chave privada. Se não for usado, libcurl
            assume como padrão $HOME/.ssh/id_dsa se a variável de ambiente HOME estiver definida
            e apenas "id_dsa" no diretório atual se HOME não estiver definido.
            Se o arquivo estiver protegido por senha, defina a senha com
            <constant>CURLOPT_KEYPASSWD</constant>CURLOPT_KEYPASSWD.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            Uma lista de cifras a serem usadas para SSL. Por exemplo,
            <literal>RC4-SHA</literal> e <literal>TLSv1</literal> são listas de
            cifras válidas.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_EC_CURVES</constant></entry>
           <entry valign="top">
            Uma lista delimitada por dois-pontos de algoritmos de curva elíptica. Por exemplo,
            <literal>X25519:P-521</literal> é uma lista válida de duas curvas elípticas.
            Esta opção define os algoritmos de troca de chaves do cliente no handshake SSL,
            se o backend SSL que o cURL está construído para usar o suportar.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERT</constant></entry>
           <entry valign="top">
            O nome de um arquivo que contém um certificado no formato PEM.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTPASSWD</constant></entry>
           <entry valign="top">
            A senha necessária para usar o certificado
            <constant>CURLOPT_SSLCERT</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            O formato do certificado. Os formatos suportados são
            <literal>"PEM"</literal> (padrão), <literal>"DER"</literal>
            e <literal>"ENG"</literal>.
            A partir do OpenSSL 0.9.3, <literal>"P12"</literal> (para arquivos codificados em PKCS#12)
            também é suportado.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.9.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE</constant></entry>
           <entry valign="top">
            O identificador para o mecanismo de criptografia da chave SSL
            privada especificada em <constant>CURLOPT_SSLKEY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE_DEFAULT</constant></entry>
           <entry valign="top">
            O identificador do mecanismo de criptografia usado para operações de
            criptografia assimétricas.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEY</constant></entry>
           <entry valign="top">
            O nome de um arquivo que contém uma chave SSL privada.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYPASSWD</constant></entry>
           <entry valign="top"><para>
            A senha secreta necessária para usar a chave SSL privada especificada em
            <constant>CURLOPT_SSLKEY</constant>.
            <note>
             <para>
              Como esta opção contém uma senha confidencial, lembre-se de manter
              o script PHP contido nela seguro.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            O tipo de chave da chave SSL privada especificada em
            <constant>CURLOPT_SSLKEY</constant>. Os tipos de chave suportados são
            <literal>"PEM"</literal> (padrão), <literal>"DER"</literal>
            e <literal>"ENG"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            A lista de conjuntos de cifras a serem usados para a conexão TLS 1.3. A lista deve
            estar sintaticamente correta, ela consiste em uma ou mais sequências de conjuntos de cifras
            separadas por dois pontos. Esta opção é usada atualmente apenas quando o curl é construído para usar o OpenSSL 1.1.1 ou posterior.
            Se você estiver usando um back-end SSL diferente, tente configurar
            os conjuntos de cifras TLS 1.3 usando a opção <constant>CURLOPT_SSL_CIPHER_LIST</constant>.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.61.0. Disponível quando construído com OpenSSL >= 1.1.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNIX_SOCKET_PATH</constant></entry>
           <entry valign="top">
            Habilita o uso de sockets de domínio Unix como endpoint de conexão e
            define o caminho para a <type>string</type> fornecida.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.40.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_URL</constant></entry>
           <entry valign="top">
            A URL a ser buscada. Isso também pode ser definido ao inicializar uma
            sessão com <function>curl_init</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERAGENT</constant></entry>
           <entry valign="top">
            O conteúdo do cabeçalho <literal>"User-Agent: "</literal> a ser usado
            em uma solicitação HTTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERNAME</constant></entry>
           <entry valign="top">
            O nome de usuário a ser usado na autenticação.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWORD</constant></entry>
           <entry valign="top">
            A senha a ser usada na autenticação.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERPWD</constant></entry>
           <entry valign="top">
            Um nome de usuário e senha formatados como
            <literal>"[username]:[password]"</literal> para usar na
            conexão.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_XOAUTH2_BEARER</constant></entry>
           <entry valign="top">
            Especifica o token de acesso OAuth 2.0.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.33.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> deve ser um array para
       os seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
           <entry>Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_TO</constant></entry>
           <entry valign="top">
            Conecte-se a um host e porta específicos em vez do host e da porta da URL.
            Aceita uma matriz de strings com o formato
            <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.49.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP200ALIASES</constant></entry>
           <entry valign="top">
            Uma matriz de respostas HTTP 200 que serão tratadas como respostas
            válidas e não como erros.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPHEADER</constant></entry>
           <entry valign="top">
            Uma matriz de campos de cabeçalho HTTP para definir, no formato
            <code>
             array('Content-type: text/plain', 'Content-length: 100')
            </code>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTQUOTE</constant></entry>
           <entry valign="top">
            Uma matriz de comandos de FTP a serem executados no servidor após
            a execução da solicitação de FTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYHEADER</constant></entry>
           <entry valign="top">
            Uma matriz de cabeçalhos HTTP personalizados para passar para proxies.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.37.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_QUOTE</constant></entry>
           <entry valign="top">
            Uma matriz de comandos de FTP a serem executados no servidor antes da
            solicitação de FTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESOLVE</constant></entry>
           <entry valign="top">
            Forneça um endereço personalizado para um host específico e um par de portas. Uma matriz
            de strings de nome de host, porta e endereço IP, cada elemento separado por
            dois pontos. No formato: array("example.com:80:127.0.0.1")
            <code>
             array("example.com:80:127.0.0.1")
            </code>
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.21.3.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> deve ser um recurso de fluxo (usando
       <function>fopen</function>, por exemplo) para os seguintes valores do parâmetro
       <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_FILE</constant></entry>
           <entry valign="top">
            O arquivo no qual a transferência deve ser gravada. O padrão
            é <constant>STDOUT</constant> (a janela do navegador).
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILE</constant></entry>
           <entry valign="top">
            O arquivo do qual a transferência deve ser lida durante o upload.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STDERR</constant></entry>
           <entry valign="top">
            Um local alternativo para gerar erros em vez de
            <constant>STDERR</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEHEADER</constant></entry>
           <entry valign="top">
            O arquivo no qual a parte do cabeçalho da transferência é gravada.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> deve ser o nome de uma função válida ou um Closure
       para os seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
           <entry>Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADERFUNCTION</constant></entry>
           <entry valign="top">
            Um callback que aceita dois parâmetros.
            O primeiro é o recurso cURL, o segundo é uma
            string com os dados do cabeçalho a serem gravados. Os dados do
            cabeçalho devem ser gravados por este callback. Retorna o número
            de bytes gravados.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWDFUNCTION</constant></entry>
           <entry valign="top">
            Um callback que aceita três parâmetros.
            O primeiro é o recurso cURL, o segundo é uma
            string contendo um prompt de senha e o terceiro é o tamanho máximo
            da senha. Retorna a string contendo a senha.
           </entry>
           <entry>Removido a partir do PHP 7.3.0.</entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROGRESSFUNCTION</constant></entry>
           <entry valign="top">
            <para>
             Um callback que aceita cinco parâmetros.
             O primeiro é o recurso cURL, o segundo é o número total de
             bytes que se espera que sejam baixados nesta transferência, o terceiro é
             o número de bytes baixados até agora, o quarto é o número total
             de bytes que se espera que sejam carregados nesta transferência, e o
             quinto é o número de bytes enviados até agora.
            </para>
            <note>
             <para>
              O callback só é chamado quando a opção <constant>CURLOPT_NOPROGRESS</constant>
              é definida como &false;.
             </para>
            </note>
            <para>
             Retorne um valor diferente de zero para abortar a transferência. Nesse caso, a
             transferência definirá um erro
             <constant>CURLE_ABORTED_BY_CALLBACK</constant>.
            </para>
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_READFUNCTION</constant></entry>
           <entry valign="top">
            Um callback que aceita três parâmetros.
            O primeiro é o recurso cURL, o segundo é um
            recurso de fluxo fornecido ao cURL por meio da opção
            <constant>CURLOPT_INFILE</constant> e o terceiro é a quantidade máxima
            de dados a serem lidos. O callback deve retornar uma string
            com comprimento igual ou menor que a quantidade de dados solicitados,
            geralmente lendo-a do recurso de fluxo passado. Ele deve
            retornar uma string vazia para sinalizar <literal>EOF</literal>.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEFUNCTION</constant></entry>
           <entry valign="top">
            Um callback que aceita dois parâmetros.
            O primeiro é o recurso cURL e o segundo é uma
            string com os dados a serem gravados. Os dados devem ser salvos
            por este callback. Deve retornar o número exato de bytes escritos ou
            a transferência será abortada com erro.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_XFERINFOFUNCTION</constant></entry>
           <entry valign="top">
            Um callback que aceita dois parâmetros.
            Tem um propósito semelhante ao <constant>CURLOPT_PROGRESSFUNCTION</constant>, mas é mais moderno
            e a opção preferida do cURL.
           </entry>
           <entry valign="top">
            Adicionado em 7.32.0. Disponível a partir do PHP 8.2.0.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Other values:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_SHARE</constant></entry>
           <entry valign="top">
            Um resultado de <function>curl_share_init</function>. Faz com que o
            identificador cURL use os dados do identificador compartilhado.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &curl.changelog.handle-param;
      <row>
       <entry>7.3.15, 7.4.3</entry>
       <entry>
        Introduzido <constant>CURLOPT_HTTP09_ALLOWED</constant>.
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        Introduzido <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>, <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>,
        <constant>CURLOPT_PRE_PROXY</constant>, <constant>CURLOPT_PROXY_CAINFO</constant>,
        <constant>CURLOPT_PROXY_CAPATH</constant>, <constant>CURLOPT_PROXY_CRLFILE</constant>,
        <constant>CURLOPT_PROXY_KEYPASSWD</constant>, <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PROXY_SSLCERT</constant>, <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>,
        <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>, <constant>CURLOPT_PROXY_SSLKEY</constant>,
        <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>, <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>,
        <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>, <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>,
        <constant>CURLOPT_PROXY_SSLVERSION</constant>, <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>,
        <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>, <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>,
        <constant>CURLOPT_SOCKS5_AUTH</constant>, <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>,
        <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>, <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>,
        <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>, <constant>CURLOPT_HAPROXYPROTOCOL</constant>,
        <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>, <constant>CURLOPT_SSH_COMPRESSION</constant>,
        <constant>CURLOPT_TIMEVALUE_LARGE</constant> e <constant>CURLOPT_TLS13_CIPHERS</constant>.
       </entry>
      </row>
      <row>
       <entry>7.0.7</entry>
       <entry>
        Introduzido <constant>CURL_HTTP_VERSION_2</constant>, <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant>,
        <constant>CURL_HTTP_VERSION_2TLS</constant>, <constant>CURL_REDIR_POST_301</constant>,
        <constant>CURL_REDIR_POST_302</constant>, <constant>CURL_REDIR_POST_303</constant>,
        <constant>CURL_REDIR_POST_ALL</constant>, <constant>CURL_VERSION_KERBEROS5</constant>,
        <constant>CURL_VERSION_PSL</constant>, <constant>CURL_VERSION_UNIX_SOCKETS</constant>,
        <constant>CURLAUTH_NEGOTIATE</constant>, <constant>CURLAUTH_NTLM_WB</constant>,
        <constant>CURLFTP_CREATE_DIR</constant>, <constant>CURLFTP_CREATE_DIR_NONE</constant>,
        <constant>CURLFTP_CREATE_DIR_RETRY</constant>, <constant>CURLHEADER_SEPARATE</constant>,
        <constant>CURLHEADER_UNIFIED</constant>, <constant>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</constant>,
        <constant>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</constant>, <constant>CURLMOPT_MAX_HOST_CONNECTIONS</constant>,
        <constant>CURLMOPT_MAX_PIPELINE_LENGTH</constant>, <constant>CURLMOPT_MAX_TOTAL_CONNECTIONS</constant>,
        <constant>CURLOPT_CONNECT_TO</constant>, <constant>CURLOPT_DEFAULT_PROTOCOL</constant>,
        <constant>CURLOPT_DNS_INTERFACE</constant>, <constant>CURLOPT_DNS_LOCAL_IP4</constant>,
        <constant>CURLOPT_DNS_LOCAL_IP6</constant>, <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>,
        <constant>CURLOPT_HEADEROPT</constant>, <constant>CURLOPT_LOGIN_OPTIONS</constant>,
        <constant>CURLOPT_PATH_AS_IS</constant>, <constant>CURLOPT_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PIPEWAIT</constant>, <constant>CURLOPT_PROXY_SERVICE_NAME</constant>,
        <constant>CURLOPT_PROXYHEADER</constant>, <constant>CURLOPT_SASL_IR</constant>,
        <constant>CURLOPT_SERVICE_NAME</constant>, <constant>CURLOPT_SSL_ENABLE_ALPN</constant>,
        <constant>CURLOPT_SSL_ENABLE_NPN</constant>, <constant>CURLOPT_SSL_FALSESTART</constant>,
        <constant>CURLOPT_SSL_VERIFYSTATUS</constant>, <constant>CURLOPT_STREAM_WEIGHT</constant>,
        <constant>CURLOPT_TCP_FASTOPEN</constant>, <constant>CURLOPT_TFTP_NO_OPTIONS</constant>,
        <constant>CURLOPT_UNIX_SOCKET_PATH</constant>, <constant>CURLOPT_XOAUTH2_BEARER</constant>,
        <constant>CURLPROTO_SMB</constant>, <constant>CURLPROTO_SMBS</constant>,
        <constant>CURLPROXY_HTTP_1_0</constant>, <constant>CURLSSH_AUTH_AGENT</constant> e
        <constant>CURLSSLOPT_NO_REVOKE</constant>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Inicializando uma nova sessão cURL e buscando uma página da web</title>
    <programlisting role="php">
     <![CDATA[
<?php
// criar um novo recurso cURL
$ch = curl_init();

// definir URL e outras opções apropriadas
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// pegar URL e passá-lo para o navegador
curl_exec($ch);

// feche o recurso cURL e libere recursos do sistema
curl_close($ch);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Passar uma matriz para <constant>CURLOPT_POSTFIELDS</constant>
    codificará os dados como <emphasis>multipart/form-data</emphasis>,
    enquanto passar uma string codificada em URL codificará os dados como
    <emphasis>application/x-www-form-urlencoded</emphasis>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt_array</function></member>
    <member><classname>CURLFile</classname></member>
    <member><classname>CURLStringFile</classname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
