<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 427ab27e525c67f731ea0ef15d3d89e5f87fe191 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.curl-multi-info-read" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_multi_info_read</refname>
  <refpurpose>Obtém informação sobre as transferências atuais</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>curl_multi_info_read</methodname>
   <methodparam><type>CurlMultiHandle</type><parameter>multi_handle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">queued_messages</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Interroga o manipulador múltiplo se existem mensagens ou informações das transferências individuais.
   Mensagens podem incluir informações como um código de erro da transferência ou apenas o fato
   de uma transferência ter sido concluída.
  </para>
  <para>
   Chamadas repetidas a esta função irão retornar um novo resultado a cada vez, até que um valor &false; for retornado
   como um sinal de que não há mais o que receber no momento. O inteiro apontado pelo parâmetro
   <parameter>queued_messages</parameter> conterá o número de mensagens remanescentes depois que esta
   função foi chamada.
  </para>
  <warning>
   <para>
    Os dados apontados pelo recurso retornado não irão sobreviver à chamada a
    <function>curl_multi_remove_handle</function>.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.mh.description;
    <varlistentry>
     <term><parameter>queued_messages</parameter></term>
     <listitem>
      <para>
       Número de mensagens que ainda estão na fila
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Em caso de sucesso, retorna um array associativo para a mensagem, &false; em caso de falha.
  </para>
  <para>
   <table>
    <title>Conteúdo do array retornado</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Chave:</entry>
       <entry>Valor:</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>msg</literal></entry>
       <entry>A constante <constant>CURLMSG_DONE</constant>. Outros valores de retorno
       autalmente não estão disponíveis.</entry>
      </row>
      <row>
       <entry><literal>result</literal></entry>
       <entry>Uma das constantes <constant>CURLE_*</constant>. Se tudo estiver
       correto, a constante <constant>CURLE_OK</constant> será o resultado.</entry>
      </row>
      <row>
       <entry><literal>handle</literal></entry>
       <entry>Recurso do tipo curl que indica o manipulador em questão.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &curl.changelog.multi-handle-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um exemplo de <function>curl_multi_info_read</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$urls = array(
   "http://www.cnn.com/",
   "http://www.bbc.co.uk/",
   "http://www.yahoo.com/"
);

$mh = curl_multi_init();

foreach ($urls as $i => $url) {
    $conn[$i] = curl_init($url);
    curl_setopt($conn[$i], CURLOPT_RETURNTRANSFER, 1);
    curl_multi_add_handle($mh, $conn[$i]);
}

do {
    $status = curl_multi_exec($mh, $active);
    if ($active) {
        curl_multi_select($mh);
    }
    while (false !== ($info = curl_multi_info_read($mh))) {
        var_dump($info);
    }
} while ($active && $status == CURLM_OK);

foreach ($urls as $i => $url) {
    $res[$i] = curl_multi_getcontent($conn[$i]);
    curl_close($conn[$i]);
}

var_dump(curl_multi_info_read($mh));

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(3) {
  ["msg"]=>
  int(1)
  ["result"]=>
  int(0)
  ["handle"]=>
  resource(5) of type (curl)
}
array(3) {
  ["msg"]=>
  int(1)
  ["result"]=>
  int(0)
  ["handle"]=>
  resource(7) of type (curl)
}
array(3) {
  ["msg"]=>
  int(1)
  ["result"]=>
  int(0)
  ["handle"]=>
  resource(6) of type (curl)
}
bool(false)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_multi_init</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
