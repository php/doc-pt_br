<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a0fcdcb58023bd4cb017fdba511df29b9f7a25f5 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.easter-date" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>easter_date</refname>
  <refpurpose>Obtém o timestamp Unix para a meia-noite da Páscoa de um ano informado</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>easter_date</methodname>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>year</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>CAL_EASTER_DEFAULT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Retorna o timestamp Unix correspondente à meia-noite de Páscoa do
   ano informado.
  </para>
  <para>
   A data do Dia de Páscoa foi definida pelo Concílio de Niceia no
   ano 325 D.C. como o domingo após a primeira lua cheia que caia no
   Equinócio de Primavera ou depois dele. Assume-se que o Equinócio seja sempre
   no dia 21 de março, portanto o cálculo se reduz a determinar a data
   da lua cheia e a data do domingo seguinte. O
   algoritmo usado aqui foi introduzido por volta do ano 532 por
   Dionísio, o Exíguo. Sob o calendário Juliano (para anos anteriores a
   1753) um ciclo simples de 19 anos é usado para acompanhar as fases da
   lua. Sob o calendário Gregoriano (para anos posteriores a 1753 -
   concebido por Cristóvão Clávio e Luís Lílio, e introduzido pelo Papa Gregório
   XIII em outubro de 1582, e na Grã-Bretanha e suas então colônias em
   setembro de 1752) dois fatores de correção são adicionados para deixar
   o ciclo mais preciso.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>year</parameter></term>
     <listitem>
      <para>
       O ano deve ser um número entre 1970 e 2037 para sistemas de 32 bits, ou entre 1970 e 2.000.000.000 para sistemas de 64 bits.
       Se omitido ou &null;, será usado o padrão que é o ano atual conforme o horário local.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Permite que datas de Páscoa sejam calculadas com base no calendário Juliano quando definido
       para <constant>CAL_EASTER_ALWAYS_JULIAN</constant>. Consulte também as
       <link linkend="calendar.constants">constantes de calendário</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A data de Páscoa como um timestamp Unix.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Uma exceção <classname>ValueError</classname> é lançada se o ano for anterior a 1970 ou posterior a 2037
   em sistemas de 32 bits, ou posterior a 2.000.000.000 em sistemas de 64 bits.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Em sistemas de 64 bits, o parâmetro <parameter>year</parameter> agora aceita valores na faixa de 1970 a 2.000.000.000.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>year</parameter> agora pode ser nulo.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Uma exceção <classname>ValueError</classname> agora é lançada quando
       <parameter>year</parameter> estiver fora do intervalo permitido.
       Anteriormente, um <constant>E_WARNING</constant> era emitido
       e a função retornava &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>easter_date</function></title>
    <programlisting role="php">
<![CDATA[
<?php

echo date("M-d-Y", easter_date(1999));        // Apr-04-1999
echo date("M-d-Y", easter_date(2000));        // Apr-23-2000
echo date("M-d-Y", easter_date(2001));        // Apr-15-2001

?>
]]>
    </programlisting>
   </example>

   <example>
    <title>Usando <function>easter_date</function> com <classname>DateTime</classname></title>
    <programlisting role="php">
<![CDATA[
<?php

$timestamp = easter_date(2023);

$datetime = new \DateTime();
$datetime->setTimestamp($timestamp);

echo $datetime->format('M-d-Y'); // Apr-09-2023

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>easter_date</function> depende das funções de horário da biblioteca
    C do sistema, ao invés de usar as funções de data e horário internas do PHP. Como uma
    consequência, <function>easter_date</function> usa a variável de ambiente
    <literal>TZ</literal> para determinar o fuso horário onde ela deve
    operar, ao invés de usar o
    <link linkend="ini.date.timezone">fuso horário padrão</link> do PHP, o que pode
    retultar em comportamento inesperado ao usar esta função em conjunto
    com outras funções de data no PHP.
   </para>
   <para>
    Como uma maneira de contornar isso, pode-se usar <function>easter_days</function> com
    <classname>DateTime</classname> e <classname>DateInterval</classname> para
    calcular o início da Páscoa no fuso horário do PHP como no exemplo a seguir:
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function get_easter_datetime($year) {
    $base = new DateTime("$year-03-21");
    $days = easter_days($year);

    return $base->add(new DateInterval("P{$days}D"));
}

foreach (range(2012, 2015) as $year) {
    printf("Páscoa em %d é no dia %s\n",
           $year,
           get_easter_datetime($year)->format('d/m'));
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Páscoa em 2012 é no dia 08/04
Páscoa em 2013 é no dia 31/03
Páscoa em 2014 é no dia 20/04
Páscoa em 2015 é no dia 05/04
]]>
    </screen>
   </informalexample>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>easter_days</function> para cálculo da Páscoa
     antes de 1970 ou depois de 2037
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
