<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ba9021d03c30d208158471c45dc83613e3159edf Maintainer: leonardolara Status: ready --><!-- CREDITS: rogeriopradoj,leonardolara -->

<refentry xml:id="function.password-verify" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>password_verify</refname>
  <refpurpose>Verifica se uma senha corresponde a um hash</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>password_verify</methodname>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>hash</parameter></methodparam>
  </methodsynopsis>
  <para>
   Verifica se o hash fornecido corresponde à senha informada
   <function>password_verify</function> é compatível com <function>crypt</function>.
   Portanto, hashes de senha criadas por <function>crypt</function> podem ser usados com
   <function>password_verify</function>.
  </para>
  <para>
   Perceba que <function>password_hash</function> retorna o algoritmo, custo e o salt
   como parte do hash retornado. Por isso, toda a informação necessária para verificar
   o hash está incluída nele. Isso permite que a função de verificação faça isso
   sem precisar de um armazenamento separado para a informação do salt ou do algoritmo.
  </para>
  <para>
   Esta função é segura contra ataques de sincronismo.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>password</parameter></term>
    <listitem>
     <para>
      &password.parameter.password;
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>hash</parameter></term>
    <listitem>
     <para>
      &password.parameter.hash;
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna &true; se o password e o hash corresponderem, ou &false; caso contrário.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>password_verify</function></title>
    <para>
     Este é um exemplo simplificado; é recomendável recalcular o hash de uma senha correta
     se necessário; consulte a página da função <function>password_needs_rehash</function> para um exemplo.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Veja o exemplo de password_hash() para ver de onde veio esta string.
$hash = '$2y$10$.vGA1O9wmRjrwAVXD98HNOgsNpDczlqm3Jq7KnEd1rVAGv3Fykk1a';

if (password_verify('rasmuslerdorf', $hash)) {
    echo 'Senha válida!';
} else {
    echo 'Senha inválida';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Senha válida!
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>password_needs_rehash</function></member>
    <member><function>password_hash</function></member>
    <member><link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="&url.password.compat;">implementação no espaço de usuário</link></member>
    <member><function>sodium_crypto_pwhash_str_verify</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
