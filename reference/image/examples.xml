<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 10c69571e7dd8a7cc0fbc9f20a55d24b1b1032be Maintainer: leonardolara Status: ready -->

<chapter xml:id="image.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <section xml:id="image.examples-png">
  <title>Criação de PNG com PHP</title>
  <para>
   <example>
    <title>Criação de PNG com PHP</title>
    <programlisting role="php">
<![CDATA[
<?php

header("Content-type: image/png");
$string = $_GET['text'];
$im     = imagecreatefrompng("images/button1.png");
$orange = imagecolorallocate($im, 220, 210, 60);
$px     = (imagesx($im) - 7.5 * strlen($string)) / 2;
imagestring($im, 3, $px, 9, $string, $orange);
imagepng($im);
imagedestroy($im);

?>
]]>
    </programlisting>
   </example>
   Este exemplo seria chamado de uma página com uma etiqueta HTML parecida com: <literal>&lt;img
   src=&quot;button.php?text=text&quot;&gt;</literal>. O script <filename>button.php</filename> acima
   usa essa string <literal>&quot;text&quot;</literal> e o sobrepõe uma camada na imagem
   base que neste caso é <literal>&quot;images/button1.png&quot;</literal>
   e produz a imagem resultante. Esta é uma forma muito conveniente de
   evitar que se desenhe novas imagens de botões toda vez que se deseja
   alterar o texto de um botão. Com este método, eles são
   gerados dinamicamente.
  </para>
 </section>
 <section xml:id="image.examples-watermark">
  <title>Adicionando marcas d'água a imagens usando canais alfa</title>
  <para>
   <example>
    <title>Adicionando marcas d'água a imagens usando canais alfa</title>
    <programlisting role="php">
<![CDATA[
<?php
// Carrega o carimbo e a foto para aplicar a marca d'água
$stamp = imagecreatefrompng('stamp.png'); // carimbo
$im = imagecreatefromjpeg('photo.jpeg'); // foto

// Define as margens para o carimbo e obtém a altura/largura da imagem
$marge_right = 10;
$marge_bottom = 10;
$sx = imagesx($stamp);
$sy = imagesy($stamp);

// Copia a imagem do carimbo na foto usando os deslocamentos das margens e a largura
// da foto para calcular o posicionamento do carimbo.
imagecopy($im, $stamp, imagesx($im) - $sx - $marge_right, imagesy($im) - $sy - $marge_bottom, 0, 0, imagesx($stamp), imagesy($stamp));

// Mostra a imagem e libera a memória
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
    <mediaobject>
     <alt>Adicionando marcas d'água a imagens usando canais alfa</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/watermarks.png" />
     </imageobject>
    </mediaobject>
   </example>
   Este exemplo é uma forma comum de adicionar marcas d'água e carimbos a fotos
   e imagens com direitos autorais. Note que a presença de um canal alfa na
   imagem do carimbo tem suavização de serrilhado. Isto é preservado durante a cópia.
  </para>
 </section>
 <section xml:id="image.examples.merged-watermark">
  <title>Usando <function>imagecopymerge</function> para criar uma marca d'água translúcida</title>
  <para>
   <example>
    <title>Usando <function>imagecopymerge</function> para criar uma marca d'água translúcida</title>
    <programlisting role="php">
<![CDATA[
<?php
// Carrega o carimbo e a foto para aplicar a marca d'água
$im = imagecreatefromjpeg('photo.jpeg');

// Primeiro cria-se a imagem do carimbo manualmente a partir da GD
$stamp = imagecreatetruecolor(100, 70);
imagefilledrectangle($stamp, 0, 0, 99, 69, 0x0000FF);
imagefilledrectangle($stamp, 9, 9, 90, 60, 0xFFFFFF);
imagestring($stamp, 5, 20, 20, 'libGD', 0x0000FF);
imagestring($stamp, 3, 20, 40, '(c) 2007-9', 0x0000FF);

// Define-se as margens para o carimbo e obtém-se a altura/largura da imagem do carimbo
$marge_right = 10;
$marge_bottom = 10;
$sx = imagesx($stamp);
$sy = imagesy($stamp);

// Funde o carimbo com a foto usando uma opacidade de 50%
imagecopymerge($im, $stamp, imagesx($im) - $sx - $marge_right, imagesy($im) - $sy - $marge_bottom, 0, 0, imagesx($stamp), imagesy($stamp), 50);

// Salva a imagem em arquivo e libera memória
imagepng($im, 'photo_stamp.png');
imagedestroy($im);

?>
]]>
    </programlisting>
    <mediaobject>
     <alt>Usando imagecopymerge() para criar uma marca d'água translúcida</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/watermark-merged.png" />
     </imageobject>
    </mediaobject>
   </example>
   Este exemplo usa <function>imagecopymerge</function> para fundir a estampa
   com a imagem original. Desta forma pode-se definir a opacidade do carimbo -
   no exemplo foi definido para 50%. Na prática isto pode ser útil
   em proteção contra cópia já que marcas d'água semi-transparentes são difíceis de se remover
   mas ainda permitem que a imagem seja visualizada.
  </para>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

