<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 593ea510e853ff034e03f78a4be0daa41661c9d4 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.imagecolorallocate" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecolorallocate</refname>
  <refpurpose>Aloca uma cor para uma imagem</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>imagecolorallocate</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>red</parameter></methodparam>
   <methodparam><type>int</type><parameter>green</parameter></methodparam>
   <methodparam><type>int</type><parameter>blue</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retorna um identificador de cor representando a cor composta pelos
   componentes <acronym>RGB</acronym>.
  </para>
  <para>
   <function>imagecolorallocate</function> precisa ser chamada
   para criar cada cor que será usada na imagem representada
   por <parameter>image</parameter>.
  </para>
  <note>
   <para>
    A primeira chamada a <function>imagecolorallocate</function> preenche
    a cor de fundo em imagens com base em paletas - imagens criadas usando
    <function>imagecreate</function>.
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>red</parameter></term>
     <listitem>
      <para>&gd.value.red;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>green</parameter></term>
     <listitem>
      <para>&gd.value.green;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>blue</parameter></term>
     <listitem>
      <para>&gd.value.blue;</para>
     </listitem>
    </varlistentry>
   </variablelist>
   Estes parâmetros são inteiros entre 0 e 255 ou hexadecimais entre
   0x00 e 0xFF.
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Um identificadore de cor ou &false; se a alocação falhar.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>imagecolorallocate</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$im = imagecreate(100, 100);

// define a cor de fundo para vermelha
$background = imagecolorallocate($im, 255, 0, 0);

// define algumas cores
$white = imagecolorallocate($im, 255, 255, 255); //branca
$black = imagecolorallocate($im, 0, 0, 0); //preta

// com hexadecimais
$white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF); //branca
$black = imagecolorallocate($im, 0x00, 0x00, 0x00); //preta

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagecolorallocatealpha</function></member>
   <member><function>imagecolordeallocate</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
