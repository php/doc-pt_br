<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 4e6f0774f03131cbeeb8c21019a690bf97fd22b6 Maintainer: leonardolara Status: ready --><!-- CREDITS: thiago,leonardolara -->
<refentry xml:id="function.fsockopen" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fsockopen</refname>
  <refpurpose>Abre uma conexão socket de domínio Unix ou Internet</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>false</type></type><methodname>fsockopen</methodname>
   <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">error_code</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">error_message</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>float</type><type>null</type></type><parameter>timeout</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Inicia uma conexão socket para o recurso especificado em
   <parameter>hostname</parameter>.
  </para>
  <para>
   O PHP suporta alvos na Internet ou domínios Unix, conforme descrito em
   <xref linkend="transports"/>. Uma lista dos transportes suportados pode
   ser encontrada utilizando-se a função <function>stream_get_transports</function>.
  </para>
  <para>
   Por padrão o socket será aberto em modo de bloqueio. Pode-se mudar para o
   modo de não-bloqueio utilizando-se a função
   <function>stream_set_blocking</function>.
  </para>
  <para>
   A função <function>stream_socket_client</function> é similar mas fornece um
   número maior de opções, incluindo conexão não bloqueada e a habilidade de
   fornecer um contexto de fluxo .
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hostname</parameter></term>
     <listitem>
      <para>
       Se o suporte Open SSL <link linkend="openssl.installation">estiver
       instalado</link>, pode-se prefixar o <parameter>hostname</parameter>
       com <literal>ssl://</literal> ou <literal>tls://</literal> para utilizar
       uma conexão SSL ou TLS sobre TCP/IP para conectar-se ao
       servidor remoto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       O número da porta. Pode ser omitido e ignorado com
       <literal>-1</literal> para transportes que não usam portas, como
       <literal>unix://</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_code</parameter></term>
     <listitem>
      <para>
       Se informado, guarda o número do erro do sistema que aconteceu na chamada de
       <literal>connect()</literal> no nível do sistema.
      </para>
      <para>
       Se o valor retornado em <parameter>error_code</parameter> for
       <literal>0</literal> e a função retornou &false;, é uma indicação que o
       erro aconteceu antes da chamada a
       <literal>connect()</literal>. A causa mais provável é um
       problema na inicialização do socket.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_message</parameter></term>
     <listitem>
      <para>
       A mensagem de erro como uma string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Limite de tempo de conexão, em segundos. Quando igual a &null;, a configuração
       <link linkend="ini.default-socket-timeout">default_socket_timeout</link> &php.ini; é usada.
      </para>
      <note>
       <para>
        Se for necessário um limite de tempo para ler/escrever dados através do
        socket, use <function>stream_set_timeout</function>, já que o
        parâmetro <parameter>timeout</parameter> de
        <function>fsockopen</function> somente é aplicável enquanto o socket
        estiver conectando.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>fsockopen</function> retorna um ponteiro de arquivo que pode ser
   usado em em conjunto com outras funções de arquivo (como
   <function>fgets</function>, <function>fgetss</function>,
   <function>fwrite</function>, <function>fclose</function> e
   <function>feof</function>). Se a chamada falhar, ela retornará &false;.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Dispara um <constant>E_WARNING</constant> se <parameter>hostname</parameter> não
   for um domínio válido.
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>timeout</parameter> agora pode ser nulo.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>fsockopen</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fp = fsockopen("www.example.com", 80, $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br />\n";
} else {
    $out = "GET / HTTP/1.1\r\n";
    $out .= "Host: www.example.com\r\n";
    $out .= "Connection: Close\r\n\r\n";
    fwrite($fp, $out);
    while (!feof($fp)) {
        echo fgets($fp, 128);
    }
    fclose($fp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Utilizando conexão UDP</title>
    <para>
     O exemplo abaixo mostra como obter o dia e o horário do serviço
     UDP (porta 13) da própria máquina.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$fp = fsockopen("udp://127.0.0.1", 13, $errno, $errstr);
if (!$fp) {
    echo "ERRO: $errno - $errstr<br />\n";
} else {
    fwrite($fp, "\n");
    echo fread($fp, 26);
    fclose($fp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Dependedendo do ambiente, o domínio Unix ou o limite opcional de tempo
    de conexão podem não estar disponíveis.
   </para>
  </note>
  <warning>
   <para>
    Sockets UDP algumas vezes irão parecer que foram abertos sem erro, mesmo
    que o servidor remoto seja inalcançável. O erro só se tornará
    aparente quando dados são lidos ou escritos no socket.
    A razão disso é porque o UDP é um protocolo "sem conexão",
    o que significa que o sistema operacional não tenta estabelecer
    uma ligação para o socket até que ele realmente precise enviar ou receber dados.
   </para>
  </warning>
  &ipv6.brackets;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pfsockopen</function></member>
    <member><function>stream_socket_client</function></member>
    <member><function>stream_set_blocking</function></member>
    <member><function>stream_set_timeout</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>fwrite</function></member>
    <member><function>fclose</function></member>
    <member><function>feof</function></member>
    <member><function>socket_connect</function></member>
    <member>A <link linkend="ref.curl">extensão Curl</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
