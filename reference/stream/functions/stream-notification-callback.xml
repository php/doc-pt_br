<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: aca589264ab655bb1505d01e1a6d34cda6ba3d53 Maintainer: leonardolara Status: ready -->

<refentry xml:id="function.stream-notification-callback" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>stream_notification_callback</refname>
  <refpurpose>Uma função de chamada de retorno para o parâmetro de contexto de <literal>notification</literal></refpurpose>
 </refnamediv>

 <refsect1 role="description"><!-- {{{ -->
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname><replaceable>stream_notification_callback</replaceable></methodname>
   <methodparam><type>int</type><parameter>notification_code</parameter></methodparam>
   <methodparam><type>int</type><parameter>severity</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>message</parameter></methodparam>
   <methodparam><type>int</type><parameter>message_code</parameter></methodparam>
   <methodparam><type>int</type><parameter>bytes_transferred</parameter></methodparam>
   <methodparam><type>int</type><parameter>bytes_max</parameter></methodparam>
  </methodsynopsis>
  <para>
   Uma função do tipo <type>callable</type>, usada pelo
   <link linkend="context.params.notification">parâmetro de contexto de notificação</link>,
   chamado durante um evento.
  </para>
  <note>
   <para>
    Esta <emphasis>não</emphasis> é uma função real, apenas um protótipo de como uma função
    deve ser.
   </para>
  </note>
 </refsect1><!-- }}} -->

 <refsect1 role="parameters"><!-- {{{ -->
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>notification_code</parameter></term>
     <listitem>
      <para>
       Uma das constantes de notificação <constant>STREAM_NOTIFY_*</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>severity</parameter></term>
     <listitem>
      <para>
       Uma das constantes de notificação <constant>STREAM_NOTIFY_SEVERITY_*</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>message</parameter></term>
     <listitem>
      <para>
       Passado se uma mensagem descritiva estiver disponível para o evento.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>message_code</parameter></term>
     <listitem>
      <para>
       Passado se um código de mensagem descritiva estiver disponível para o evento.
      </para>
      <para>
       O significado deste valor depende do empacotador específico em uso.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bytes_transferred</parameter></term>
     <listitem>
      <para>
       Se aplicável, o número de bytes em <parameter>bytes_transferred</parameter> será
       preenchido.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bytes_max</parameter></term>
     <listitem>
      <para>
       Se aplicável, o número máximo de bytes em <parameter>bytes_max</parameter> será
       preenchido.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="returnvalues"><!-- {{{ -->
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <para>
   <example xml:id="stream-notification-callback.example.basic"><!-- {{{ -->
    <title>Exemplo de <function>stream_notification_callback</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function stream_notification_callback($notification_code, $severity, $message, $message_code, $bytes_transferred, $bytes_max) {

    switch($notification_code) {
        case STREAM_NOTIFY_RESOLVE:
        case STREAM_NOTIFY_AUTH_REQUIRED:
        case STREAM_NOTIFY_COMPLETED:
        case STREAM_NOTIFY_FAILURE:
        case STREAM_NOTIFY_AUTH_RESULT:
            var_dump($notification_code, $severity, $message, $message_code, $bytes_transferred, $bytes_max);
            /* Ignora */
            break;

        case STREAM_NOTIFY_REDIRECTED:
            echo "Sendo redirecionado para: ", $message;
            break;

        case STREAM_NOTIFY_CONNECT:
            echo "Conectado...";
            break;

        case STREAM_NOTIFY_FILE_SIZE_IS:
            echo "Tamanho do arquivo: ", $bytes_max;
            break;

        case STREAM_NOTIFY_MIME_TYPE_IS:
            echo "Encontrado o tipo de mídia: ", $message;
            break;

        case STREAM_NOTIFY_PROGRESS:
            echo "Algum progresso, já baixados ", $bytes_transferred, " bytes até agora";
            break;
    }
    echo "\n";
}

$ctx = stream_context_create();
stream_context_set_params($ctx, array("notification" => "stream_notification_callback"));

file_get_contents("http://php.net/contact", false, $ctx);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Conectado...
Encontrado o tipo de mídia: text/html; charset=utf-8
Sendo redirecionado para: http://no.php.net/contact
Conectado...
Tamanho do arquivo: 0
Encontrado o tipo de mídia: text/html; charset=utf-8
Sendo redirecionado para: http://no.php.net/contact.php
Conectado...
Tamanho do arquivo: 4589
Encontrado o tipo de mídia: text/html;charset=utf-8
Algum progresso, já baixados 0 até agora
Algum progresso, já baixados 0 até agora
Algum progresso, já baixados 0 até agora
Algum progresso, já baixados 1440 até agora
Algum progresso, já baixados 2880 até agora
Algum progresso, já baixados 4320 até agora
Algum progresso, já baixados 5760 até agora
Algum progresso, já baixados 6381 até agora
Algum progresso, já baixados 7002 até agora
]]>
    </screen>
   </example><!-- }}} -->
  </para>
  <para>
   <example xml:id="stream-notification-callback.example.download"><!-- {{{ -->
    <title>Barra de progresso simples para cliente de download em linha de comando</title>
    <programlisting role="php">
<![CDATA[
<?php
function usage($argv) {
    echo "Uso:\n";
    printf("\tphp %s <http://example.com/file> <localfile>\n", $argv[0]);
    exit(1);
}

function stream_notification_callback($notification_code, $severity, $message, $message_code, $bytes_transferred, $bytes_max) {
    static $filesize = null;

    switch($notification_code) {
    case STREAM_NOTIFY_RESOLVE:
    case STREAM_NOTIFY_AUTH_REQUIRED:
    case STREAM_NOTIFY_COMPLETED:
    case STREAM_NOTIFY_FAILURE:
    case STREAM_NOTIFY_AUTH_RESULT:
        /* Ignore */
        break;

    case STREAM_NOTIFY_REDIRECTED:
        echo "Sendo redirecionado para: ", $message, "\n";
        break;

    case STREAM_NOTIFY_CONNECT:
        echo "Conectado...\n";
        break;

    case STREAM_NOTIFY_FILE_SIZE_IS:
        $filesize = $bytes_max;
        echo "Tamanho do arquivo: ", $filesize, "\n";
        break;

    case STREAM_NOTIFY_MIME_TYPE_IS:
        echo "Tipo de mídia: ", $message, "\n";
        break;

    case STREAM_NOTIFY_PROGRESS:
        if ($bytes_transferred > 0) {
            if (!isset($filesize)) {
                printf("\rTamanho de arquivo desconhecido.. %2d kb concluídos..", $bytes_transferred/1024);
            } else {
                $length = (int)(($bytes_transferred/$filesize)*100);
                printf("\r[%-100s] %d%% (%2d/%2d kb)", str_repeat("=", $length). ">", $length, ($bytes_transferred/1024), $filesize/1024);
            }
        }
        break;
    }
}

isset($argv[1], $argv[2]) or usage($argv);

$ctx = stream_context_create();
stream_context_set_params($ctx, array("notification" => "stream_notification_callback"));

$fp = fopen($argv[1], "r", false, $ctx);
if (is_resource($fp) && file_put_contents($argv[2], $fp)) {
    echo "\nPronto!\n";
    exit(0);
}

$err = error_get_last();
echo "\nErrrrro..\n", $err["message"], "\n";
exit(1);
?>
]]>
    </programlisting>
    <para>
     Executing the example above with:
     <literal>php -n fetch.php
     http://no2.php.net/get/php-5-LATEST.tar.bz2/from/this/mirror
     php-latest.tar.bz2</literal> will output something similar too:
    </para>
    <screen>
<![CDATA[
Conectado...
Tipo de mídia: text/html; charset=utf-8
Sendo redirecionado para: http://no2.php.net/distributions/php-5.2.5.tar.bz2
Conectado...
Tamanho do arquivo: 7773024
Tipo de mídia: application/octet-stream
[========================================>                                                           ] 40% (3076/7590 kb)
]]>
    </screen>
   </example>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="context.params" /></member>
   </simplelist>
  </para>
 </refsect1><!-- }}} -->

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

