<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 181e9c5572ed04ed712b8d7f858f61a94647c6ac Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.stream-socket-client" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_socket_client</refname>
  <refpurpose>Abre conexão de socket de domínio Internet ou Unix</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>false</type></type><methodname>stream_socket_client</methodname>
   <methodparam><type>string</type><parameter>address</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">error_code</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">error_message</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>float</type><type>null</type></type><parameter>timeout</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>STREAM_CLIENT_CONNECT</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>resource</type><type>null</type></type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Inicia uma conexão de fluxo ou datagrada ao destino especificado pelo parâmetro
   <parameter>address</parameter>. O tipo de socket criado
   é determinado pelo transporte especificado usando-se formatação de URL padrão:
   <literal>transporte://alvo</literal>. Para sockets de domínio Internet
   (AF_INET) tais como TCP e UDP, a porção <literal>alvo</literal>
   do parâmetro <parameter>address</parameter> deve consistir de um
   nome de servidor ou endereço IP seguido por dois-pontos e um número de porta. Para sockets
   de domínio Unix, a porção <literal>alvo</literal> seve apontar
   ao arquivo de socket no sistema de arquivos.
  </para>
  <note>
   <para>
    O fluxo por padrão será aberto em modo de bloqueio. Pode-se
    trocar para modo de não-bloqueio usando
    <function>stream_set_blocking</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters"><!-- {{{ -->
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>address</parameter></term>
     <listitem>
      <para>
       Endereço ao qual o socket deve se conectar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_code</parameter></term>
     <listitem>
      <para>
       Será definido para o número de erro no nível do sistema se a conexão falhar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_message</parameter></term>
     <listitem>
      <para>
       Será definido para a mensagem de erro no nível do sistema se a conexão falhar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Número máximo de segundos que a chamada de sistema <literal>connect()</literal>
       deve esperar. Por padrão, <link linkend="ini.default-socket-timeout">default_socket_timeout</link>
       é usado.
       <note>
        <simpara>
         Este parâmetro aplica-se somente quando não há tentativas de
         se fazer conexões assíncronas.
        </simpara>
       </note>
       <note>
        <para>
         Para definir um limite de tempo para leitura/escrita de dados no socket, use a função
         <function>stream_set_timeout</function>, já que
         <parameter>timeout</parameter> se aplica somente enquanto está sendo feita a conexão
         ao socket.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Um campo de máscara de bits que pode ser configurada para qualquer combinação de opções de conexão.
       Atualmente a seleção de opções de conecão está limitada a
       <constant>STREAM_CLIENT_CONNECT</constant> (padrão),
       <constant>STREAM_CLIENT_ASYNC_CONNECT</constant> e
       <constant>STREAM_CLIENT_PERSISTENT</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Um recurso válido de contexto criado com <function>stream_context_create</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="returnvalues"><!-- {{{ -->
  &reftitle.returnvalues;
  <para>
   Em caso de sucesso, um recurso de fluxo é retornado, e pode
   ser usado com outras funções de arquivos (como
   <function>fgets</function>, <function>fgetss</function>,
   <function>fwrite</function>, <function>fclose</function> e
   <function>feof</function>), &false; em caso de falha.
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="errors"><!-- {{{ -->
  &reftitle.errors;
  <para>
   Em caso de falha, os argumentos <parameter>error_code</parameter> e
   <parameter>error_message</parameter> serão preenchidos com o erro real no
   que ocorreu na chamada no nível de sistema a
   <literal>connect()</literal>. Se o valor retornado em
   <parameter>error_code</parameter> for <literal>0</literal> e a
   função retornar &false;, é uma indicação que o erro
   ocorreu antes da chamada a <literal>connect()</literal>. Isto é mais provavelmente
   devido a um problema na inicialização do socket. Note que os argumentos
   <parameter>error_code</parameter> e
   <parameter>error_message</parameter> serão sempre passados por
   referência.
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>timeout</parameter> e <parameter>context</parameter> agora podem ser nulos.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <para>
   <example xml:id="stream-socket-client.example.basic"><!-- {{{ -->
    <title>Exemplo de <function>stream_socket_client</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fp = stream_socket_client("tcp://www.example.com:80", $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br />\n";
} else {
    fwrite($fp, "GET / HTTP/1.0\r\nHost: www.example.com\r\nAccept: */*\r\n\r\n");
    while (!feof($fp)) {
        echo fgets($fp, 1024);
    }
    fclose($fp);
}
?>
]]>
    </programlisting>
   </example><!-- }}} -->
   <example xml:id="stream-socket-client.example.daytime"><!-- {{{ -->
    <title>Usando conexão UDP</title>
    <para>
     Obtendo dia e horário do serviço UDP "daytime" (porta 13)
     no servidor local.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$fp = stream_socket_client("udp://127.0.0.1:13", $errno, $errstr);
if (!$fp) {
    echo "ERRO: $errno - $errstr<br />\n";
} else {
    fwrite($fp, "\n");
    echo fread($fp, 26);
    fclose($fp);
}
?>
]]>
    </programlisting>
   </example><!-- }}} -->
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="notes"><!-- {{{ -->
  &reftitle.notes;
  <warning>
   <simpara>
     Sockets UDP algumas vezes irão aparentar ter sido abertos sem erro,
     mesmo se o servidor remoto não puder ser contactado. O erro só ficará
     aparente quando for realizada leitura/escrita no socket.
     A razão para isto é porque o UDP é um protocolo "sem conexão",
     o que significa que o sistema operacional não tenta estabelecer
     uma ligação ao socket até que realmente precise enviar ou receber dados.
   </simpara>
  </warning>
  &ipv6.brackets;
  <note>
   <para>
    Dependendo do ambiente, o domínio Unix ou o limite opcional de tempo
    de conexão podem não estar disponíveis. Uma lista de transportes
    disponíveis pode sem obtida usando-se <function>stream_get_transports</function>.
    Consulte <xref linkend="transports"/> para uma lista de transportes incluídos.
   </para>
  </note>
 </refsect1><!-- }}} -->

 <refsect1 role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stream_socket_server</function></member>
    <member><function>stream_set_blocking</function></member>
    <member><function>stream_set_timeout</function></member>
    <member><function>stream_select</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>fwrite</function></member>
    <member><function>fclose</function></member>
    <member><function>feof</function></member>
    <member><xref linkend="ref.curl"/></member>
   </simplelist>
  </para>
 </refsect1><!-- }}} -->

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
