<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ec2fe9a592f794978114ef5021db9f1d00c2e05d Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="reflectionparameter.getdefaultvalueconstantname" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionParameter::getDefaultValueConstantName</refname>
  <refpurpose>Retorna o nome da constante do valor padrão se o valor padrão for constante ou nulo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionParameter">
   <modifier>public</modifier> <type class="union"><type>string</type><type>null</type></type><methodname>ReflectionParameter::getDefaultValueConstantName</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Retorna o nome da constante do valor padrão do parâmetro de qualquer função ou método,
   seja interno ou definido pelo usuário, se o valor padrão for constante ou nulo.
   Se o parâmetro não for opcional, um <classname>ReflectionException</classname>
   será lançado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna string em caso de sucesso ou &null; em caso de falha.
  </para>
 </refsect1>

  <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        Este método agora permite obter os nomes das constantes dos valores padrão das funções integradas e
        métodos de classe integrados. Anteriormente, um <classname>ReflectionException</classname> era lançado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Obtendo nomes constantes de valores padrão de parâmetros de função</title>
    <programlisting role="php">
<![CDATA[
<?php
function foo($test, $bar = PHP_INT_MIN)
{
    echo $test . $bar;
}

$function = new ReflectionFunction('foo');

foreach ($function->getParameters() as $param) {
    echo 'Name: ' . $param->getName() . PHP_EOL;
    if ($param->isOptional()) {
        echo 'Default value: ' . $param->getDefaultValueConstantName() . PHP_EOL;
    }
    echo PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs;
   <screen>
<![CDATA[
Name: test

Name: bar
Default value: PHP_INT_MIN
]]>
   </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionParameter::isOptional</methodname></member>
    <member><methodname>ReflectionParameter::isDefaultValueConstant</methodname></member>
    <member><methodname>ReflectionParameter::getDefaultValue</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
