<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: diogo Status: ready --><!-- CREDITS: ae -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.move-uploaded-file">
 <refnamediv>
  <refname>move_uploaded_file</refname>
  <refpurpose>Move um arquivo enviado para uma nova localização</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>move_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>destination</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função verifica para ter certeza de que o arquivo designado
   por <parameter>filename</parameter> é um arquivo de upload válido
   (que tenha sido enviado pelo mecanismo PHP de envio por POST HTTP).
   Se o arquivo for válido, ele será movido para o nome de arquivo dado
   por <parameter>destination</parameter>.
  </para>
  <para>
   Este tipo de verificação é especialmente imporante se existir alguma
   change que qualquer coisa feita com os arquivos enviados possa revelar
   seu conteúdo ao usuário, ou mesmo para outros usuários no memo sistema.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       O nome do arquivo enviado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>destination</parameter></term>
     <listitem>
      <para>
       O destino do arquivo movido.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se <parameter>filename</parameter> não for um arquivo enviado 
   válido, então nenhuma ação ocorrerá e
   <function>move_uploaded_file</function> retornará &false;.
  </para>
  <para>
   Se <parameter>filename</parameter> for um arquivo enviado válido,
   mas não puder ser movido por alguma razão, nenhuma ação ocorrerá
   e <function>move_uploaded_file</function> retornará &false;.
   Adicionalmente, um alerta será emitido.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>move_uploaded_file</function> é afetado por
    <link linkend="ini.open-basedir">open_basedir</link>.
    Entretanto, restrições são aplicadas apenas no caminho de 
    <parameter>destination</parameter> para permitir que arquivos onde
    <parameter>filename</parameter> venha a conflitar com tais restrições
    possam ser movidos. <function>move_uploaded_file</function> assegura
    a segurança desta operação permitindo que apenas arquivos carregados
    pelo PHP possam ser movidos.
   </para>
  </note>
  <warning>
   <para>
    Se o arquivo de destino já existir, ele será sobrescrito.
   </para>
  </warning>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_uploaded_file</function></member>
    <member>Veja <link linkend="features.file-upload">Gerenciar o upload de arquivos</link> para um exemplo de uso simples</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
