<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ea62fb83196997032641b50fe44420305466195e Maintainer: diogo Status: ready --><!-- CREDITS: narigone,lhsazevedo,leonardolara -->

<refentry xml:id="function.file-put-contents" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>file_put_contents</refname>
  <refpurpose>Escreve dados em um arquivo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>file_put_contents</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>resource</type><type>null</type></type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta função é idêntica a chamar <function>fopen</function>,
   <function>fwrite</function> e <function>fclose</function> sucessivamente
   para escrever dados em um arquivo.
  </para>
  <para>
   Se o arquivo informado em <parameter>filename</parameter> não existir, o arquivo é criado. Do
   contrário, o arquivo existente é sobrescrito, a não ser que a opção
   <constant>FILE_APPEND</constant> seja definida.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       O caminho para o arquivo onde os dados serão escritos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Os dados a serem escritos. Pode ser uma <type>string</type>, um
       <type>array</type> ou um recurso <type>stream</type>.
      </para>
      <para>
       Se <parameter>data</parameter> for um recurso <type>stream</type>, o
       buffer restante desse fluxo será copiado para o arquivo especificado,
       semelhante à utilização de <function>stream_copy_to_stream</function>.
      </para>
      <para>
       Você também pode especificar o parâmetro <parameter>data</parameter> como
       um array unidimensional. Isso é equivalente a
       <literal>file_put_contents($filename, implode('', $array))</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       O valor de <parameter>flags</parameter> pode ser qualquer combinação das
       seguintes opções, adicionadas com o operador binário OR (<literal>|</literal>).

      </para>
      <para>
       <table>
        <title>Opções disponíveis</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Descrição</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <constant>FILE_USE_INCLUDE_PATH</constant>
           </entry>
           <entry>
            Procura o arquivo <parameter>filename</parameter> nos diretórios de
            include. Consulte <link linkend="ini.include-path">include_path</link>
            para mais informações.
           </entry>
          </row>
          <row>
           <entry>
            <constant>FILE_APPEND</constant>
           </entry>
           <entry>
            Se o arquivo <parameter>filename</parameter> já existir, acrescenta
            os dados ao arquivo ao invés de sobrescrevê-lo.
           </entry>
          </row>
          <row>
           <entry>
            <constant>LOCK_EX</constant>
           </entry>
           <entry>
            Adquire uma trava exclusiva no arquivo ao prosseguir para a escrita.
            Em outras palavras, uma chamada a <function>flock</function> acontece
            entre a chamada <function>fopen</function> e a chamada
            <function>fwrite</function>. Isso não é idêntico à uma chamada
            <function>fopen</function> com modo "x".
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Um recurso de contexto válido criado com
       <function>stream_context_create</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta função retorna a quantidade de bytes que foi escrita no arquivo ou
   &false; em caso de falha.
  </para>
  &return.falseproblem;
 </refsect1>

  <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de uso simples</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'people.txt';
// Abre o arquivo para obter o conteúdo existente
$current = file_get_contents($file);
// Acrescenta a nova pessoa no arquivo
$current .= "John Smith\n";
// Escreve o conteúdo de volta no arquivo
file_put_contents($file, $current);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Usando flags</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = 'people.txt';
// A nova pessoa para adicionar no arquivo
$person = "John Smith\n";
// Escreve o conteúdo no arquivo,
// usando a flag FILE_APPEND para acrescentar o conteúdo no fim do arquivo
// e a flag LOCK_EX para evitar que outra pessoa escreva no arquivo ao mesmo tempo
file_put_contents($file, $person, FILE_APPEND | LOCK_EX);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  &tip.fopen-wrapper;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fopen</function></member>
    <member><function>fwrite</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
