<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 61374bbe228e8e9c55a24aba59a1e2bb2a871148 Maintainer: thiago Status: ready --><!-- CREDITS: diogo, rarruda, ae, leonardolara -->
<refentry xml:id="function.fgetcsv" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fgetcsv</refname>
  <refpurpose>Lê uma linha do ponteiro de arquivos e a interpreta como campos CSV</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>fgetcsv</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Similar à função <function>fgets</function>, exceto que a
   <function>fgetcsv</function> interpreta a linha em busca de campos no
   formato <acronym>CSV</acronym> e retorna um array contendo os campos
   lidos.
  </para>
  <note>
   <para>
    As configurações de localidade são consideradas por esta função. Se
    <constant>LC_CTYPE</constant> for por exemplo <literal>en_US.UTF-8</literal>, arquivos em
    codificação de um byte podem ser lidos incorretamente por esta função.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       Um ponteiro de arquivo válido para um arquivo aberto com sucesso por
       <function>fopen</function>, <function>popen</function> ou
       <function>fsockopen</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Deve ser maior do que a maior linha (em caracteres) a ser encontrada no
       arquivo CSV (considerando também os caracteres de fim-de-linha). Caso contrário a
       linha é dividida em partes de <parameter>length</parameter> caracteres,
       a não ser que a divisão ocorra dentro de um caractere que cerca os campos (enclosure).
      </para>
      <para>
       Se este parâmetro for omitido (ou definido em 0
       ou &null; a partir do PHP 8.0.0), o tamanho máximo das linhas não é limitado, o que é
       um pouco mais lento.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       O parâmetro opcional <parameter>separator</parameter> define o delimitador de campo (somente um caractere de um byte).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       O parâmetro opctional <parameter>enclosure</parameter> define o caractere que cerca um campo (somente um caractere de um byte).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       O parâmetro opcional <parameter>escape</parameter> define o caractere de escape (no máximo um caractere de um byte).
       Uma string vazia (<literal>""</literal>) desabilita o mecanismo de escape proprietário.
      </para>
      <note>
       <simpara>
        Normalmente um caractere de <parameter>enclosure</parameter> sofre escape dentro
        de um campo através da duplicação; entretanto, o caractere <parameter>escape</parameter>
        pode ser usado como uma alternativa. Portanto, para os parâmetros padrões os valores
        <literal>""</literal> e <literal>\"</literal> têm o mesmo
        significado. Além de permitir fazer escape no
        caractere <parameter>enclosure</parameter>, o caractere
        <parameter>escape</parameter> não tem nenhum significado especial adicional; muito
        menos foi projetado para fazer escape de si mesmo.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um array indexado contendo os campos lidos em caso de sucesso, &return.falseforfailure;.
  </para>
  <note>
   <para>
    Uma linha em branco em um arquivo CSV será retornada como um array
    contendo um único campo nulo (<type>null</type>) e não será tratada
    como um erro.
   </para>
  </note>
  &note.line-endings;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        O parâmetro <parameter>length</parameter> agora pode ser nulo.
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        O parâmetro <parameter>escape</parameter> agora aceita uma string
        vazia para desabilitar o mecanismo de escape proprietário.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Lê e imprime todo o conteúdo de um arquivo CSV</title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
if (($handle = fopen("teste.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $num = count($data);
        echo "<p> $num campos na linha $row: <br /></p>\n";
        $row++;
        for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }
    }
    fclose($handle);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_getcsv</function></member>
    <member><function>explode</function></member>
    <member><function>file</function></member>
    <member><function>pack</function></member>
    <member><function>fputcsv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
