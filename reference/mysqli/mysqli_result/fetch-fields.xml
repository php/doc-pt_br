<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 301d51acc2b8f54edbbd00ce4fdbbe649e4ae192 Maintainer: leonardolara Status: ready --><!-- CREDITS: fernandoc,leonardolara -->
<refentry xml:id="mysqli-result.fetch-fields" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_fields</refname>
  <refname>mysqli_fetch_fields</refname>
  <refpurpose>Retorna um array de objetos representando os campos em um conjunto de resultados</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli_result">
   <modifier>public</modifier> <type>array</type><methodname>mysqli_result::fetch_fields</methodname>
   <void/>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>array</type><methodname>mysqli_fetch_fields</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
  </methodsynopsis>

  <para>
   Esta função serve para o mesmo propósito que a
   função <function>mysqli_fetch_field</function> com uma simples
   diferença, ao invés de retornar um objeto de cada vez para cada campo,
   as colunas são retornadas como um array de objetos.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um array de objetos contendo informações de definições de campo.
  </para>
  <para>
   <table xml:id="mysqli-result.fetch-fields.returnvalues">
    <title>Propriedades dos objetos</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Propriedade</entry>
       <entry>Descrição</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>name</entry>
       <entry>O nome da coluna</entry>
      </row>
      <row>
       <entry>orgname</entry>
       <entry>O nome original da coluna se foi especificado um apelido</entry>
      </row>
      <row>
       <entry>table</entry>
       <entry>O nome da tabela à qual o campo pertence (se não calculado)</entry>
      </row>
      <row>
       <entry>orgtable</entry>
       <entry>Nome da tabela original se foi especificado um apelido</entry>
      </row>
      <row>
       <entry>max_length</entry>
       <entry>A largura máxima do campo para o conjunto de resultados. A partir do PHP 8.1, este valor é sempre <literal>0</literal>.</entry>
      </row>
      <row>
       <entry>length</entry>
       <entry>
        A largura do campo, em bytes, como especificada na definição da tabela. Note que
        este número (bytes) pode ser diferente do valor na definição da tabela (caracteres), dependendo do
        conjunto de caracteres sendo utilizado. Por exemplo, o conjunto de caracteres utf8 tem 3 bytes por caractere,
        por isso varchar(10) retornará um comprimento de 30 for utf8 (10*3), mas retornará 10 para latin1 (10*1).
       </entry>
      </row>
      <row>
       <entry>charsetnr</entry>
       <entry>O número (id) do conjunto de caracteres do campo.</entry>
      </row>
      <row>
       <entry>flags</entry>
       <entry>Um inteiro representando bits de opções para o campo.</entry>
      </row>
      <row>
       <entry>type</entry>
       <entry>O tipo de dados usado para este campo</entry>
      </row>
      <row>
       <entry>decimals</entry>
       <entry>O número de decimais usadas (para campos inteiros)</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("127.0.0.1", "root", "foofoo", "sakila");

/*verifica a conexão */
if ($mysqli->connect_errno) {
    printf("Conexão falhou: %s\n", $mysqli->connect_error);
    exit();
}

foreach (array('latin1', 'utf8') as $charset) {

    // Define o conjunto de caracteres, para mostrar seu impacto em alguns valores (ex.: comprimento em bytes)
    $mysqli->set_charset($charset);

    $query = "SELECT actor_id, last_name from actor ORDER BY actor_id";

    echo "======================\n";
    echo "Conjunto de Caracteres: $charset\n";
    echo "======================\n";

    if ($result = $mysqli->query($query)) {

        /* Obtém informação de campo para todas as colunas */
        $finfo = $result->fetch_fields();

        foreach ($finfo as $val) {
            printf("Nome:        %s\n",   $val->name);
            printf("Tabela:      %s\n",   $val->table);
            printf("Comp. máx:   %d\n",   $val->max_length);
            printf("Comprimento: %d\n",   $val->length);
            printf("Id conj. carac: %d\n",   $val->charsetnr);
            printf("Opções:      %d\n",   $val->flags);
            printf("Tipo:        %d\n\n", $val->type);
        }
        $result->free();
    }
}
$mysqli->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("127.0.0.1", "my_user", "my_password", "sakila");

/*verifica a conexão */
if (mysqli_connect_errno()) {
    printf("Conexão falhou: %s\n", mysqli_connect_error());
    exit();
}

foreach (array('latin1', 'utf8') as $charset) {

    // Define o conjunto de caracteres, para mostrar seu impacto em alguns valores (ex.: comprimento em bytes)
    mysqli_set_charset($link, $charset);

    $query = "SELECT actor_id, last_name from actor ORDER BY actor_id";

    echo "======================\n";
    echo "Conjunto de Caracteres: $charset\n";
    echo "======================\n";

    if ($result = mysqli_query($link, $query)) {

        /* Obtém informação de campo para todas as colunas */
        $finfo = mysqli_fetch_fields($result);

        foreach ($finfo as $val) {
            printf("Nome:        %s\n",   $val->name);
            printf("Tabela:      %s\n",   $val->table);
            printf("Comp. máx:   %d\n",   $val->max_length);
            printf("Comprimento: %d\n",   $val->length);
            printf("Id conj. carac: %d\n",   $val->charsetnr);
            printf("Opções:      %d\n",   $val->flags);
            printf("Tipo:        %d\n\n", $val->type);
        }
        mysqli_free_result($result);
    }
}

mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
======================
Conjunto de Caracteres: latin1
======================
Nome:        actor_id
Tabela:      actor
Comp. máx:   3
Comprimento: 5
Id conj. carac: 63
Opções:      49699
Tipo:        2

Nome:        last_name
Tabela:      actor
Comp. máx:   12
Comprimento: 45
Id conj. carac: 8
Opções:      20489
Tipo:        253

======================
Conjunto de Caracteres: utf8
======================
Nome:        actor_id
Tabela:      actor
Comp. máx:   3
Comprimento: 5
Id conj. carac: 63
Opções:      49699
Tipo:        2

Nome:        last_name
Tabela:      actor
Comp. máx:   12
Comprimento: 135
Id conj. carac: 33
Opções:      20489
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_num_fields</function></member>
    <member><function>mysqli_fetch_field_direct</function></member>
    <member><function>mysqli_fetch_field</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
