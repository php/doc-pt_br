<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 90953eddaa06c6c83faf0dea76c241dfafeaa2a1 Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin -->
<refentry xml:id="mysqli.store-result" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::store_result</refname>
  <refname>mysqli_store_result</refname>
  <refpurpose>Transfere um conjunto de resultados da última consulta</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli::store_result</methodname>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli_store_result</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Transfere o conjunto de resultados da última consulta na conexão do banco de dados
   representada pelo parâmetro <parameter>mysql</parameter> para ser usado com a
   função <function>mysqli_data_seek</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
   &mysqli.link.description;
   <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       A opção que você deseja definir. A partir do PHP 8.1, este parâmetro não tem efeito. Pode ser um dos seguintes valores:
       <table xml:id="mysqli.store-result.parameters">
        <title>Valid options</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Nome</entry>
           <entry>Descrição</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>MYSQLI_STORE_RESULT_COPY_DATA</constant></entry>
           <entry>Copia os resultados do buffer mysqlnd interno nas variáveis PHP buscadas. Por padrão,
           o mysqlnd usará uma lógica de referência para evitar copiar e duplicar os resultados mantidos na memória.
           Para certos conjuntos de resultados, por exemplo, conjuntos de resultados com muitas linhas pequenas, a
           abordagem de cópia pode reduzir o uso geral de memória porque as variáveis PHP que contêm resultados
           podem ser liberadas mais cedo (disponível apenas com mysqlnd)</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um objeto de resultado armazenado em buffer ou &false; se ocorreu um erro.
  </para>
  <note>
   <para>
    <function>mysqli_store_result</function> retorna &false;  caso a consulta
    não retorne um conjunto de resultados (se a consulta for, por exemplo, uma instrução
    INSERT). Esta função também retorna &false;  se a leitura do conjunto de
    resultados falhou. Você pode verificar se houve um erro verificando se
    <function>mysqli_error</function> não retorna uma string vazia, se
    <function>mysqli_errno</function> retorna um valor diferente de zero ou se
    <function>mysqli_field_count</function> retorna um valor diferente de zero.
    Além disso, a possível razão para esta função retornar &false; após
    uma chamada bem-sucedida para <function>mysqli_query</function> pode ser um conjunto
    de resultados muito grande (a memória para ele não pode ser alocada). Se
    <function>mysqli_field_count</function> retornar um valor diferente de zero, a
    instrução deve ter produzido um conjunto de resultados não vazio.
   </para>
  </note>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Veja <function>mysqli_multi_query</function>.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Embora seja sempre uma boa prática liberar a memória usada pelo resultado
    de uma consulta usando a função <function>mysqli_free_result</function>,
    ao transferir grandes conjuntos de resultados usando
    <function>mysqli_store_result</function> isso se torna particularmente
    importante.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_real_query</function></member>
    <member><function>mysqli_use_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
