<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 035c126c0393fe154bac46e2c3c489ebadce48a5 Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin -->
<refentry xml:id="mysqli.execute-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::execute_query</refname>
  <refname>mysqli_execute_query</refname>
  <refpurpose>Prepara, vincula parâmetros e executa a instrução SQL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli::execute_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>mysqli_result</type><type>bool</type></type><methodname>mysqli_execute_query</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>params</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Prepara a consulta SQL, associa parâmetros e a executa.
   O método <methodname>mysqli::execute_query</methodname> é um atalho para
   <methodname>mysqli::prepare</methodname>,
   <methodname>mysqli_stmt::bind_param</methodname>,
   <methodname>mysqli_stmt::execute</methodname>
   e <methodname>mysqli_stmt::get_result</methodname>.
  </para>
  <para>
   O modelo de instrução pode conter zero ou mais marcadores de parâmetro de
   ponto de interrogação (<literal>?</literal>) também chamados de espaços reservados.
   Os valores dos parâmetros devem ser fornecidos como um &array; usando o
   parâmetro <parameter>params</parameter>.
  </para>
  <para>
   Uma instrução preparada é criada, mas nunca é exposta fora
   da função. É impossível acessar as propriedades da instrução como
   faria com o objeto <classname>mysqli_stmt</classname>.
   Devido a essa limitação, as informações de status são copiadas para o objeto
   <classname>mysqli</classname> e estão disponíveis usando seus métodos, por exemplo
   <function>mysqli_affected_rows</function> ou <function>mysqli_error</function>.
  </para>
  <note>
   <para>
    No caso em que uma instrução é passada para
    <function>mysqli_execute_query</function> que é maior que
    <literal>max_allowed_packet</literal> do servidor, os códigos
    de erro retornados são diferentes dependendo do sistema operacional.
    O comportamento é o seguinte:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      No Linux retorna um código de erro de 1153.
      A mensagem de erro significa <quote>que o pacote é maior que
      <literal>max_allowed_packet</literal> bytes.</quote>
     </para>
    </listitem>
    <listitem>
     <para>
      No Windows retorna um código de erro 2006.
      Essa mensagem de erro significa <quote>que o servidor foi desativado</quote>.
     </para>
    </listitem>
   </itemizedlist>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       A consulta, como uma string. Deve consistir em uma única instrução SQL.
      </para>
      <para>
       A instrução SQL pode conter zero ou mais marcadores de parâmetro
       representados por caracteres de ponto de interrogação (<literal>?</literal>)
       nas posições apropriadas.
      </para>
      <note>
<!-- Copied from https://dev.mysql.com/doc/c-api/8.0/en/mysql-stmt-prepare.html -->
       <para>
        Os marcadores são válidos apenas em determinados locais nas instruções SQL.
        Por exemplo, eles são permitidos na lista <literal>VALUES()</literal>
        de uma instrução <literal>INSERT</literal> (para especificar valores
        de coluna para uma linha) ou em uma comparação com uma coluna em uma
        cláusula <literal>WHERE</literal> para especificar um valor de comparação.
        No entanto, eles não são permitidos para identificadores (como nomes de tabelas
        ou colunas).
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Um &array; opcional com tantos elementos quantos forem os parâmetros vinculados na instrução SQL que está sendo executada. Cada valor é tratado como uma &string;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna &false; em caso de falha. Para consultas bem-sucedidas que produzem
   um conjunto de resultados, como <literal>SELECT, SHOW, DESCRIBE</literal> ou
   <literal>EXPLAIN</literal>, retorna um objeto
   <classname>mysqli_result</classname>. Para outras consultas bem-sucedidas,
   retorna &true;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli::execute_query</methodname> exemplo</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli('localhost', 'my_user', 'my_password', 'world');

$query = 'SELECT Name, District FROM City WHERE CountryCode=? ORDER BY Name LIMIT 5';
$result = $mysqli->execute_query($query, ['DEU']);
foreach ($result as $row) {
    printf("%s (%s)\n", $row["Name"], $row["District"]);
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = 'SELECT Name, District FROM City WHERE CountryCode=? ORDER BY Name LIMIT 5';
$result = mysqli_execute_query($link, $query, ['DEU']);
foreach ($result as $row) {
    printf("%s (%s)\n", $row["Name"], $row["District"]);
}
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Aachen (Nordrhein-Westfalen)
Augsburg (Baijeri)
Bergisch Gladbach (Nordrhein-Westfalen)
Berlin (Berliini)
Bielefeld (Nordrhein-Westfalen)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_stmt_execute</function></member>
    <member><function>mysqli_stmt_bind_param</function></member>
    <member><function>mysqli_stmt_get_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
