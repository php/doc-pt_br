<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 035c126c0393fe154bac46e2c3c489ebadce48a5 Maintainer: leonardolara Status: ready -->
<refentry xml:id="mysqli-stmt.send-long-data" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_stmt::send_long_data</refname>
  <refname>mysqli_stmt_send_long_data</refname>
  <refpurpose>Envia dados em blocos</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli_stmt">
   <modifier>public</modifier> <type>bool</type><methodname>mysqli_stmt::send_long_data</methodname>
   <methodparam><type>int</type><parameter>param_num</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_stmt_send_long_data</methodname>
   <methodparam><type>mysqli_stmt</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>param_num</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Permite enviar dados de parâmetros ao servidor em pedaços (ou blocos), por exemplo, se o
   tamanho de um BLOB exceder o tamanho de <literal>max_allowed_packet</literal>.
   Esta função pode ser chamada múltiplas vezes para enviar as partes de um valor de dados
   binários ou de caracteres para uma coluna, que precisa ser do tipo TEXT ou BLOB.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.stmt.description;
    <varlistentry>
     <term><parameter>param_num</parameter></term>
     <listitem>
      <para>
       Indica a qual parâmetro os dados serão associados. Parêmetros são
       numerados a partir de 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Uma string contendo os dados que devem ser enviados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$stmt = $mysqli->prepare("INSERT INTO messages (message) VALUES (?)");
$null = NULL;
$stmt->bind_param("b", $null);
$fp = fopen("messages.txt", "r");
while (!feof($fp)) {
    $stmt->send_long_data(0, fread($fp, 8192));
}
fclose($fp);
$stmt->execute();
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_prepare</function></member>
    <member><function>mysqli_stmt_bind_param</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
