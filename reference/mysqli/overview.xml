<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 40667918dcff1d5c9f7ecdc88b5caca24ba0686c Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin -->
<chapter xml:id="mysqli.overview" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

 <title>Visão Geral</title>

 <para>
  Esta seção fornece uma introdução às opções disponíveis ao desenvolver
  um aplicativo PHP que precisa interagir com um banco de
  dados MySQL.
 </para>

 <para>
  <emphasis role="bold">O que é uma API?</emphasis>
 </para>

 <para>
  Uma interface de programação de aplicativos, ou API, define as classes,
  métodos, funções e variáveis que seu aplicativo precisará chamar
  para executar a tarefa desejada. No caso de aplicativos PHP
  que precisam se comunicar com bancos de dados,
  as APIs necessárias geralmente são expostas por meio de extensões PHP.
 </para>

 <para>
  As APIs podem ser processuais ou orientadas a objetos. Com uma API procedural, você
  chama funções para realizar tarefas, com a API orientada a objetos você
  instancia classes e então chama métodos nos objetos resultantes.
  Das duas, a última costuma ser a interface preferida, pois é
  mais moderna e leva a um código mais organizado.
 </para>

 <para>
  Ao escrever aplicativos PHP que precisam se conectar ao servidor MySQL,
  existem várias opções de API disponíveis. Este documento discute
  o que está disponível e como selecionar a melhor solução
  para sua aplicação.
 </para>

 <para>
  <emphasis role="bold">O que é um Conector?</emphasis>
 </para>

 <para>
  Na documentação do MySQL, o termo <emphasis>conector</emphasis>
  refere-se a um software que permite que seu aplicativo
  se conecte ao servidor de banco de dados MySQL. MySQL fornece conectores
  para uma variedade de linguagens, incluindo PHP.
 </para>

 <para>
  Se seu aplicativo PHP precisar se comunicar com um servidor de banco de dados,
  você precisará escrever código PHP para executar atividades como
  conectar-se ao servidor de banco de dados, consultar o banco de dados e outras
  funções relacionadas ao banco de dados. O software é necessário para fornecer a API
  que seu aplicativo PHP usará e também para lidar com a comunicação entre seu aplicativo
  e o servidor de banco de dados, possivelmente usando outras bibliotecas intermediárias
  quando necessário. Este software é conhecido genericamente como conector,
  pois permite que sua aplicação se <emphasis>connect</emphasis>
  a um servidor de banco de dados.
 </para>

 <para>
  <emphasis role="bold">O que é um Driver?</emphasis>
 </para>

 <para>
  Um driver é um software projetado para se comunicar com um tipo
  específico de servidor de banco de dados. O driver também pode chamar
  uma biblioteca, como a MySQL Client Library ou o MySQL Native
  Driver. Essas bibliotecas implementam o protocolo de baixo nível usado
  para se comunicar com o servidor de banco de dados MySQL.
 </para>

 <para>
  A título de exemplo, a camada de abstração do banco de dados <link linkend="mysqli.overview.pdo">PHP
  Data Objects (PDO)</link> pode usar um dos vários drivers específicos do
  banco de dados. Um dos drivers disponíveis
  é o driver PDO MYSQL, que permite a interface
  com o servidor MySQL.
 </para>

 <para>
  Às vezes, as pessoas usam os termos conector e driver de forma intercambiável,
  o que pode ser confuso. Na documentação relacionada ao MySQL, o termo
  <quote>driver</quote> é reservado para software que fornece a parte específica
  do banco de dados de um pacote de conector.
 </para>

 <para>
  <emphasis role="bold">What is an Extension?</emphasis>
 </para>

 <para>
  Na documentação do PHP, você encontrará outro termo -
  <emphasis>extension</emphasis>. O código PHP consiste em um núcleo,
  com extensões opcionais para a funcionalidade principal. As extensões
  relacionadas ao MySQL do PHP, como a extensão mysqli e a
  extensão do driver PDO MySQL, são
  implementadas usando a estrutura de extensão do PHP.
 </para>

 <para>
  Uma extensão normalmente expõe uma API ao programador PHP, para
  permitir que suas facilidades sejam usadas programaticamente. No entanto,
  algumas extensões que usam a estrutura de extensão PHP não expõem uma
  API ao programador PHP.
 </para>

 <para>
  A extensão do driver PDO MySQL, por exemplo, não expõe uma API ao
  programador PHP, mas fornece uma interface para a camada
  PDO acima dela.
 </para>

 <para>
  Os termos API e extensão não devem significar a mesma coisa,
  pois uma extensão pode não necessariamente expor uma API
  ao programador.
 </para>

 <para>
  <emphasis role="bold">Quais são as principais ofertas de API do PHP para usar o
   MySQL?</emphasis>
 </para>

 <para>
  Existem duas opções principais de API ao considerar a conexão com um
  servidor de banco de dados MySQL:
 </para>

 <itemizedlist>

  <listitem>
   <para>
    Extensão mysqli do PHP
   </para>
  </listitem>

  <listitem>
   <para>
    Objetos de Dados PHP (PDO)
   </para>
  </listitem>

 </itemizedlist>

 <para>
  Cada um tem suas próprias vantagens e desvantagens. A discussão a
  seguir visa fornecer uma breve introdução aos principais aspectos de
  cada API.
 </para>

 <para>
  <emphasis role="bold">O que é a extensão mysqli do PHP?</emphasis>
 </para>

 <para>
  A extensão <literal>mysqli</literal>, ou como às vezes é
  conhecida, a extensão <emphasis>improved</emphasis> do MySQL, foi desenvolvida
  para aproveitar os novos recursos encontrados nos
  sistemas MySQL versões 4.1.3 e mais recentes. A extensão <literal>mysqli</literal>
  está incluída nas versões 5 e posteriores do PHP.
 </para>

 <para>
  A extensão <literal>mysqli</literal> tem vários benefícios,
  sendo os principais aprimoramentos sobre a
  extensão <literal>mysql</literal>:

  <itemizedlist>

   <listitem>
    <para>
     Interface orientada a objetos
    </para>
   </listitem>

   <listitem>
    <para>
     Suporte para Declarações Preparadas
    </para>
   </listitem>

   <listitem>
    <para>
     Suporte para várias declarações
    </para>
   </listitem>

   <listitem>
    <para>
     Suporte para transações
    </para>
   </listitem>

   <listitem>
    <para>
     Recursos de depuração aprimorados
    </para>
   </listitem>

  </itemizedlist>
 </para>

 <para>
  Assim como a interface orientada a objetos, a extensão também fornece uma
  interface processual.
 </para>

 <para>
  A extensão <literal>mysqli</literal> é construída usando a e
  strutura de extensão PHP, seu código fonte está localizado no diretório
  <filename>ext/mysqli</filename>.
 </para>

 <para>
  Para obter mais informações sobre a extensão <literal>mysqli</literal>,
  consulte <xref linkend="book.mysqli"/>.
 </para>

 <para xml:id="mysqli.overview.pdo">
  <emphasis role="bold">O que é PDO?</emphasis>
 </para>

 <para>
  PHP Data Objects, ou PDO, é uma camada de abstração
  de banco de dados especificamente para aplicativos PHP. O PDO fornece uma API consistente
  para seu aplicativo PHP, independentemente do tipo de servidor de
  banco de dados ao qual seu aplicativo se conectará. Em teoria, se você estiver usando a
  API PDO, você pode mudar o servidor de banco de dados que você usou, digamos
  Firebird para MySQL, e só precisa fazer pequenas alterações em seu
  código PHP.
 </para>

 <para>
  Outros exemplos de camadas de abstração de banco de dados incluem JDBC para
  aplicativos Java e DBI para Perl.
 </para>

 <para>
  Embora o PDO tenha suas vantagens, como uma API limpa, simples e portátil,
  sua principal desvantagem é que ele não permite que você use todos os
  recursos avançados disponíveis nas versões mais recentes do
  servidor MySQL. Por exemplo, PDO não permite que você use o suporte do MySQL
  para Multiple Statements.
 </para>

 <para>
  PDO é implementado usando o framework de extensão PHP, seu código
  fonte está localizado no diretório <filename>ext/pdo</filename>.
 </para>

 <para>
  Para mais informações sobre PDO, consulte o
  <xref linkend="book.pdo"/>.
 </para>

 <para>
  <emphasis role="bold">O que é o driver PDO MYSQL?</emphasis>
 </para>

 <para>
  O driver PDO MYSQL não é uma API como tal, pelo menos da
  perspectiva do programador PHP. Na verdade, o driver PDO MYSQL fica na
  camada abaixo do próprio PDO e fornece funcionalidade específica do MySQL.
  O programador ainda chama a API PDO, mas o PDO usa o driver PDO MYSQL
  para realizar a comunicação com o servidor MySQL.
 </para>

 <para>
  O driver PDO MYSQL é um dos vários drivers PDO disponíveis. Outros
  drivers PDO disponíveis incluem aqueles para os servidores de banco de dados
  Firebird e PostgreSQL.
 </para>

 <para>
  O driver PDO MYSQL é implementado usando a estrutura de
  extensão PHP. Seu código-fonte está localizado no diretório
  <filename>ext/pdo_mysql</filename>. Ele não expõe uma API ao
  programador PHP.
 </para>

 <para>
  Para obter mais informações sobre o driver PDO MYSQL, consulte
  <xref linkend="ref.pdo-mysql"/>.
 </para>

 <para xml:id="mysqli.overview.mysqlnd">
  <emphasis role="bold">O que é o driver nativo MySQL do PHP?</emphasis>
 </para>

 <para>
  Para se comunicar com o servidor de banco de dados MySQL, <literal>mysqli</literal> e
  o driver PDO MYSQL usam uma biblioteca de baixo nível que implementa
  o protocolo necessário. No passado, a única biblioteca disponível era a
  MySQL Client Library, também conhecida como
  <literal>libmysqlclient</literal>.
 </para>

 <para>
  No entanto, a interface apresentada pelo <literal>libmysqlclient</literal> não
  foi otimizada para comunicação com aplicativos PHP, pois
  <literal>libmysqlclient</literal> foi originalmente projetado com
  aplicativos C em mente. Por esta razão, o MySQL Native Driver,
  <literal>mysqlnd</literal>, foi desenvolvido como uma alternativa ao
  <literal>libmysqlclient</literal> para aplicações PHP.
 </para>

 <para>
  Tanto a extensão <literal>mysqli</literal> quanto o driver PDO MySQL podem
  ser configurados individualmente para usar
  <literal>libmysqlclient</literal>ou <literal>mysqlnd</literal>. Como o
  <literal>mysqlnd</literal> foi projetado especificamente para ser utilizado
  no sistema PHP, ele possui vários aprimoramentos de memória e velocidade em relação ao
  <literal>libmysqlclient</literal>. Você é fortemente encorajado a
  aproveitar essas melhorias.
 </para>

 <para>
  O MySQL Native Driver é implementado usando a estrutura de
  extensão PHP. O código-fonte está localizado em
  <filename>ext/mysqlnd</filename>. Ele não expõe uma API ao
  programador PHP.
 </para>

 <!-- TODO
   <para>
     For further information on the MySQL Native Driver, see
     <xref linkend="book.mysqlnd"/>.
   </para>
 -->

 <para>
  <emphasis role="bold">Comparação de recursos</emphasis>
 </para>

 <para>
  A tabela a seguir compara a funcionalidade dos principais
  métodos de conexão ao MySQL a partir do PHP:
 </para>

 <table xml:id="mysqli.overview.option.comparison">
  <title>Comparação das opções da API do MySQL para PHP</title>
  <tgroup cols="3">
   <colspec colwidth="34*"/>
   <colspec colwidth="33*"/>
   <colspec colwidth="33*"/>
   <thead>
    <row>
     <entry></entry>
     <entry>Extensão mysqli do PHP</entry>
     <entry>PDO (usando PDO MySQL Driver e MySQL Native Driver)</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>Versão do PHP introduzida</entry>
     <entry>5.0</entry>
     <entry>5.0</entry>
    </row>
    <row>
     <entry>Status de desenvolvimento do MySQL</entry>
     <entry>Desenvolvimento ativo</entry>
     <entry>Desenvolvimento ativo</entry>
    </row>
    <row>
     <entry>API suporta conjuntos de caracteres</entry>
     <entry>Sim</entry>
     <entry>Sim</entry>
    </row>
    <row>
     <entry>A API oferece suporte a instruções preparadas do lado do servidor</entry>
     <entry>Sim</entry>
     <entry>Sim</entry>
    </row>
    <row>
     <entry>A API oferece suporte a declarações preparadas do lado do cliente</entry>
     <entry>Não</entry>
     <entry>Sim</entry>
    </row>
    <row>
     <entry>API suporta procedimentos armazenados</entry>
     <entry>Sim</entry>
     <entry>Sim</entry>
    </row>
    <row>
     <entry>A API oferece suporte a várias instruções</entry>
     <entry>Sim</entry>
     <entry>A maioria</entry>
    </row>
    <row>
     <entry>Suporta todas as funcionalidades do MySQL 4.1+</entry>
     <entry>Sim</entry>
     <entry>A maioria</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 <!--
   <para>
     <emphasis role="bold">Mais informações</emphasis>
   </para>

   <para>
     A distribuição do PHP e sua documentação estão disponíveis no
     <link xlink:href="http://www.php.net/">Sítio do PHP</link>.
   </para>
 -->
</chapter>
