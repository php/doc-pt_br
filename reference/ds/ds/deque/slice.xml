<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: dd07341fae2c414adc1f700be0890ff32e8daab4 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->

<refentry xml:id="ds-deque.slice" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Ds\Deque::slice</refname>
  <refpurpose>
   Retorna uma sub-deque de um determinado intervalo
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>Ds\Deque</type><methodname>Ds\Deque::slice</methodname>
   <methodparam><type>int</type><parameter>index</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cria uma sub-deque de um determinado intervalo.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>index</parameter></term>
    <listitem>
     <para>
      O índice no qual a sub-deque começa.
     </para>
     <para>
      Se positivo, a deque começará nesse índice na deque.
      Se negativo, a deque começará nessa distância do final.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>length</parameter></term>
    <listitem>
     <para>
      Se um comprimento for fornecido e for positivo, a deque resultante
      terá até esse número de valores nela.

      Se o comprimento resultar em um estouro, apenas
      valores até o final da deque serão incluídos.

      Se um comprimento for fornecido e for negativo, a deque
      parará naquele número de valores do final.

      Se um comprimento não for fornecido, a deque resultante
      conterá todos os valores entre o índice e o
      final da deque.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Uma sub-deque do intervalo fornecido.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>Ds\Deque::slice</function> exemplo</title>
   <programlisting role="php">
<![CDATA[
<?php
$deque = new \Ds\Deque(["a", "b", "c", "d", "e"]);

// Cortar a partir do índice 2
print_r($deque->slice(2));

// Cortar a partir do índice 1, por um comprimento de 3
print_r($deque->slice(1, 3));

// Cortar a partir do índice 1
print_r($deque->slice(1));

// Cortar a partir do índice 2 do final
print_r($deque->slice(-2));

// Cortar do índice 1 até 1 do final
print_r($deque->slice(1, -1));
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Ds\Deque Object
(
    [0] => c
    [1] => d
    [2] => e
)
Ds\Deque Object
(
    [0] => b
    [1] => c
    [2] => d
)
Ds\Deque Object
(
    [0] => b
    [1] => c
    [2] => d
    [3] => e
)
Ds\Deque Object
(
    [0] => d
    [1] => e
)
Ds\Deque Object
(
    [0] => b
    [1] => c
    [2] => d
)

]]>
   </screen>
  </example>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
