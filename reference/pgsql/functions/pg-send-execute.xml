<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
<refentry xml:id="function.pg-send-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_execute</refname>
  <refpurpose>Envia uma solicitação para executar uma instrução preparada com determinados parâmetros, sem esperar pelo(s) resultado(s)</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>bool</type></type><methodname>pg_send_execute</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>statement_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envia uma solicitação para executar uma instrução preparada com determinados parâmetros,
   sem esperar pelo(s) resultado(s).
  </para>
  <para>
   Isto é semelhante a <function>pg_send_query_params</function>, mas o comando a ser executado é especificado
   nomeando uma instrução previamente preparada, em vez de fornecer uma string de consulta. Os
   parâmetros da função são tratados de forma idêntica a <function>pg_execute</function>.
   Assim como <function>pg_execute</function>, não funcionará em versões anteriores à 7.4 do
   PostgreSQL.
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>statement_name</parameter></term>
     <listitem>
      <para>
       O nome da instrução preparada a ser executada. Se
       "" for especificado, a instrução sem nome será executada. O nome deve
       ter sido preparado previamente usando <function>pg_prepare</function>,
       <function>pg_send_prepare</function> ou um comando SQL
       <literal>PREPARE</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Um array de valores de parâmetros para substituir os espaços reservados $1, $2, etc. na
       string de consulta preparada original. O número de elementos no array
       deve corresponder ao número de espaços reservados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna &true; em caso de sucesso, &false; ou <literal>0</literal> em caso de falha. Use <function>pg_get_result</function>
   para determinar o resultado da consulta.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Usando <function>pg_send_execute</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Não foi possível conectar");

  // Preparar uma consulta para execução
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
    $res1 = pg_get_result($dbconn);
  }

  // Execute a consulta preparada. Observe que não é necessário escapar
  // the string "Joe's Widgets" in any way
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }

  // Execute a mesma consulta preparada, desta vez com um parâmetro diferente
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
    $res3 = pg_get_result($dbconn);
  }

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_execute</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
