<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cfeb14a38b666f6a3fc73da70f4a90fbe115e53f Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="function.pg-fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_fetch_array</refname>
  <refpurpose>Busca uma linha como um array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>pg_fetch_array</methodname>
   <methodparam><type>PgSql\Result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>row</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>PGSQL_BOTH</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_fetch_array</function> retorna um array que
   corresponde à linha buscada (registro).
  </para>
  <para>
   <function>pg_fetch_array</function> é uma versão estendida de
   <function>pg_fetch_row</function>. Além de armazenar os dados nos
   índices numéricos (número do campo) no array de resultados, também
   pode armazenar os dados usando índices associativos (nome do campo).
   Ele armazena ambos os índices por padrão.
  </para>
  &database.fetch-null;
  <para>
   <function>pg_fetch_array</function> NÃO é significativamente
   mais lento do que usar <function>pg_fetch_row</function> e
   é significativamente mais fácil de usar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      &pgsql.parameter.result;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>row</parameter></term>
     <listitem>
      <para>
       Número da linha no resultado a ser buscado. As linhas são numeradas de 0 para cima. Se
       omitido ou &null;, a próxima linha será buscada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      &pgsql.parameter.mode;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Um <type>array</type> indexado numericamente (começando com 0) ou
   associativamente (indexado pelo nome do campo), ou ambos.
   Cada valor no <type>array</type> é representado como uma
   <type>string</type>. Os valores <literal>NULL</literal>
   do banco de dados são retornados como &null;.
  </para>
  <para>
   &false; é retornado se <parameter>row</parameter> exceder o número
   de linhas no conjunto, não houver mais linhas ou em qualquer outro erro.
   Buscar o resultado de uma consulta diferente de SELECT também retornará &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.result-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>pg_fetch_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Ocorreu um erro.\n";
  exit;
}

$result = pg_query($conn, "SELECT author, email FROM authors");
if (!$result) {
  echo "Ocorreu um erro.\n";
  exit;
}

$arr = pg_fetch_array($result, 0, PGSQL_NUM);
echo $arr[0] . " <- Row 1 Author\n";
echo $arr[1] . " <- Row 1 E-mail\n";

// O parâmetro linha é opcional; NULL pode ser passado em vez disso,
// para passar um result_type. Chamadas sucessivas para pg_fetch_array
// retornarão a próxima linha.
$arr = pg_fetch_array($result, NULL, PGSQL_ASSOC);
echo $arr["author"] . " <- Row 2 Author\n";
echo $arr["email"] . " <- Row 2 E-mail\n";

$arr = pg_fetch_array($result);
echo $arr["author"] . " <- Row 3 Author\n";
echo $arr[1] . " <- Row 3 E-mail\n";

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_fetch_row</function></member>
    <member><function>pg_fetch_object</function></member>
    <member><function>pg_fetch_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
