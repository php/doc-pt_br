<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 39bb8a868935a56cfce438b0169e13c02c93211c Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.80 -->
<refentry xml:id="function.pg-insert" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_insert</refname>
  <refpurpose>
   Insere array na tabela
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>PgSql\Result</type><type>string</type><type>bool</type></type><methodname>pg_insert</methodname>
   <methodparam><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>table_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>values</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>PGSQL_DML_EXEC</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_insert</function> insere os valores
   de <parameter>values</parameter> na tabela especificada
   por <parameter>table_name</parameter>.
  </para>
  <para>
   Se <parameter>flags</parameter> for especificado,
   <function>pg_convert</function> será aplicado aos
   <parameter>values</parameter> com as opções (flags) especificadas.
  </para>
  <para>
   Por padrão, <function>pg_insert</function> passa valores brutos.
   Os valores devem ser escapados ou a opção <constant>PGSQL_DML_ESCAPE</constant>
   deve ser especificado em <parameter>flags</parameter>.
   <constant>PGSQL_DML_ESCAPE</constant> cita e escapa parâmetros/identificadores.
   Portanto, os nomes de tabelas/colunas diferenciam maiúsculas de minúsculas.
  </para>
  <para>
   Observe que nem o escape nem a consulta preparada podem proteger consultas LIKE,
   JSON, Array, Regex, etc. Esses parâmetros devem ser tratados
   de acordo com seus contextos. ou seja, escapar/validar valores.
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>table_name</parameter></term>
     <listitem>
      <para>
       Nome da tabela na qual inserir linhas. A tabela <parameter>table_name</parameter> deve ter pelo menos
       tantas colunas quanto <parameter>values</parameter> tem elementos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>values</parameter></term>
     <listitem>
      <para>
       Um <type>array</type> cujas chaves são nomes de campos na tabela <parameter>table_name</parameter>,
       e cujos valores são os valores dos campos que serão inseridos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Qualquer número de <constant>PGSQL_CONV_OPTS</constant>,
       <constant>PGSQL_DML_NO_CONV</constant>,
       <constant>PGSQL_DML_ESCAPE</constant>,
       <constant>PGSQL_DML_EXEC</constant>,
       <constant>PGSQL_DML_ASYNC</constant> ou
       <constant >PGSQL_DML_STRING</constant> combinados. Se <constant>PGSQL_DML_STRING</constant> fizer parte dos
       <parameter>flags</parameter> então a string de consulta será retornada. Quando <constant>PGSQL_DML_NO_CONV</constant>
       ou <constant>PGSQL_DML_ESCAPE</constant> está definido, ele não chama <function>pg_convert</function> internamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;. Ou retorna um &string; em caso de sucesso se <constant>PGSQL_DML_STRING</constant> for passado
   via <parameter>flags</parameter>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Um <classname>ValueError</classname> é lançado quando a tabela especificada é inválida.
  </para>
  <para>
   Um <classname>ValueError</classname> ou <classname>TypeError</classname> é lançado
   quando o valor ou tipo de campo não corresponde corretamente ao tipo do PostgreSQL.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Agora lança um erro <classname>ValueError</classname> quando a tabela especificada é inválida;
       anteriormente um <constant>E_WARNING</constant> era emitido.
      </entry>
     </row>
     <row>
      <entry>8.3.0</entry>
      <entry>
       Agora lança um erro <classname>ValueError</classname> ou <classname>TypeError</classname>
       quando o valor ou tipo de campo não corresponde corretamente ao tipo do PostgreSQL;
       anteriormente um <constant>E_WARNING</constant> era emitido.
      </entry>
     </row>
     &pgsql.changelog.return-result-object;
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>pg_insert</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect('dbname=foo');
  // Isso é um tanto seguro, já que todos os valores têm escape.
  // No entanto, o PostgreSQL suporta JSON/Array. Estes não são
  // seguros nem por escape nem por consulta preparada.
  $res = pg_insert($dbconn, 'post_log', $_POST, PGSQL_DML_ESCAPE);
  if ($res) {
      echo "Os dados POST foram registrados com sucesso\n";
  } else {
      echo "Usuário deve ter enviado entradas erradas\n";
  }
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_convert</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
