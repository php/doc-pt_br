<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c2eca73ef79ebe78cebb34053e41b565af504c4f Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
<refentry xml:id="function.pg-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_prepare</refname>
  <refpurpose>Envia uma solicitação para criar uma instrução preparada com os
   parâmetros fornecidos e aguarda a conclusão</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>PgSql\Result</type><type>false</type></type><methodname>pg_prepare</methodname>
   <methodparam choice="opt"><type>PgSql\Connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_prepare</function> cria uma instrução preparada para execução posterior com
   <function>pg_execute</function> ou <function>pg_send_execute</function>.
   Este recurso permite que comandos que serão usados repetidamente
   sejam analisados e planejados apenas uma vez, em vez de cada vez que forem executados.
   <function>pg_prepare</function> é suportado apenas em conexões PostgreSQL 7.4 ou
   superior; falhará ao usar versões anteriores.
  </para>
  <para>
   A função cria uma instrução preparada chamada <parameter>stmtname</parameter> a partir da string <parameter>query</parameter>,
   que deve conter um único comando SQL. <parameter>stmtname</parameter> pode ser "" para
   criar uma instrução sem nome, caso em que qualquer instrução sem nome pré-existente
   é automaticamente substituída; caso contrário, será um erro se o nome da
   instrução já estiver definido na sessão atual. Se algum parâmetro
   for usado, ele será referido na <parameter>query</parameter> como $1, $2, etc.
  </para>
  <para>
   Instruções preparadas para uso com <function>pg_prepare</function> também podem ser criadas
   executando instruções SQL <literal>PREPARE</literal>. (Mas <function>pg_prepare</function> é mais flexível, pois
   não requer que os tipos de parâmetros sejam pré-especificados.) Além disso, embora
   não exista uma função PHP para excluir uma instrução preparada, a declaração SQL <literal>DEALLOCATE</literal>
   pode ser usada para esse propósito.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      &pgsql.parameter.connection-with-unspecified-default;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       O nome para dar a declaração preparada. Deve ser exclusivo por conexão. Se
       "" for especificado, uma instrução sem nome será criada, substituindo qualquer
       instrução sem nome definida anteriormente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       A instrução SQL parametrizada. Deve conter apenas uma única instrução.
       (múltiplas instruções separadas por ponto e vírgula não são permitidas.) Se algum parâmetro
       for usado, ele será chamado de $1, $2, etc.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Uma instância <classname>PgSql\Result</classname> em caso de sucesso, &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &pgsql.changelog.return-result-object;
     &pgsql.changelog.connection-object;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Usando <function>pg_prepare</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Conecta a um banco de dados chamado "mary"
$dbconn = pg_connect("dbname=mary");

// Prepara uma consulta para execução
$result = pg_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');

// Executa a consulta preparada. Observe que não é necessário escapar
// a string "Joe's Widgets" de forma alguma
$result = pg_execute($dbconn, "my_query", array("Joe's Widgets"));

// Executa a mesma consulta preparada, desta vez com um parâmetro diferente
$result = pg_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_execute</function></member>
    <member><function>pg_send_execute</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
