<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 5c951013ca04161992efed8b86fb40f55669958e Maintainer: fabioluciano Status: ready --><!-- CREDITS: felipe, surfmax, thiago, fabioluciano, adiel, leonardolara -->

<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Interpreta qualquer descrição textual de data/hora em inglês para timestamp Unix</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>time</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>baseTimestamp</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   A função espera que seja informada uma string contendo um formato de data em inglês US,
   e tentará interpretá-lo para um timestamp Unix (o número de segundos
   desde January 1 1970 00:00:00 GMT), relativo ao timestamp dado em
   <parameter>baseTimestamp</parameter>, ou o horário atual se 
   <parameter>baseTimestamp</parameter> não for é fornecido. A interpretação de string de data
   está definida em <link linkend="datetime.formats">Formatos de Data e Horário</link>, e
   tem várias considerações sutis. Rever os detalhes completos dessas definições é fortemente
   recomendado.
  </simpara>
  <warning>
   <para>
    O timestamp Unix que esta função retorna não contém informação
    sobre fuso horário. Para realizar cálculos com informação de data/hora,
    deve-se usar a classe com mais capacidade <classname>DateTimeImmutable</classname>.
   </para>
  </warning>
  <para>
   Cada parâmetro desta função utiliza o fuso horário padrão, a não ser que
   um fuso horário seja especificado neste parâmetro. Tome cuidado para não utilizar
   fusos horários diferentes em cada um dos parâmetros a não ser que seja o pretendido.
   Veja a função <function>date_default_timezone_get</function> para verificar
   as diversas formas de definir um fuso horário padrão.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>time</parameter></term>
     <listitem>
      <para>&date.formats.parameter;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>baseTimestamp</parameter></term>
     <listitem>
      <para>
       O timestamp que será utilizado como base no cálculo das datas
       relativas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um timestamp em sucesso, &false; caso contrário.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;

   &date.timezone.errors.description;

 </refsect1>

 <refsect1 role="changelog">
   &reftitle.changelog;
   <para>
    <informaltable>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>&Version;</entry>
        <entry>&Description;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>8.0.0</entry>
        <entry>
         <parameter>baseTimestamp</parameter> agora pode ser nulo.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </para>
  </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da função <function>strtotime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Checando por falha</title>
      <programlisting role="php">
<![CDATA[
<?php
$str = 'Not Good';

if (($timestamp = strtotime($str)) === false) {
    echo "The string ($str) is bogus";
} else {
    echo "$str == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Data "relativa" neste caso também significa que se um componente em particular
    do timestamp de data/hora não for fornecido, ele será removido literalmente
    do parâmetro <parameter>baseTimestamp</parameter>. Isto é, <code>strtotime('February')</code>,
    se executado em 31 de maio de 2022, será interpretado como <literal>31 de fevereiro de 2022</literal>,
    o que vai transferir para um timestamp de <literal>3 de março</literal>
    (em um ano bissexto, seria <literal>2 de março</literal>). Usar
    <code>strtotime('1 February')</code> or <code>strtotime('first day of February')</code>
    evitaria este problema.
   </para>
  </note>
  <note>
   <para>
    Se o número do ano for especificado no formato com dois dígitos, o valor
    entre 00-60 será mapeado para 2000-2069 e 70-99 para 1970-1999. Veja as notas a
    seguir para possíveis diferenças em sistemas 32bit (as datas possíveis acabam em
    2038-01-19 03:14:07),
   </para>
  </note>
  <note>
   <para>
    O intervalo válido de um timestamp é tipicamente de Fri, 13 Dec
    1901 20:45:54 GMT até Tue, 19 Jan 2038 03:14:07 GMT. (Estas são datas que
    correspondem aos valores máximos e mínimos para
    um inteiro sem sinal em sistemas 32-bit.)
   </para>
   <para>
    Em versões do PHP em 64-bit, a faixa válida de um timestamp é praticamente
    infinita, já que 64 bits pode representar aproximadamente 293 bilhões de anos em ambas
    direções.
   </para>
  </note>
  <note>
   <para>
    O uso desta função para operações matemáticas não é recomendado.
    É melhor a utilização dos métodos <methodname>DateTime::add</methodname> e
    <methodname>DateTime::sub</methodname>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><classname>DateTimeImmutable</classname></member>
    <member><methodname>DateTimeImmutable::createFromFormat</methodname></member>
    <member><link linkend="datetime.formats">Formatos de Data e Hora</link></member>
    <member><methodname>DateTime::createFromFormat</methodname></member>
    <member><function>checkdate</function></member>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
