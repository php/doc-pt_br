<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8cdc6621f9826d04abc3e50438c010804d7e8683 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<chapter xml:id="datetime.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;

 <section xml:id="datetime.examples-arithmetic">
  <title>Aritmética de Data e Horário</title>
  <para>
   Os exemplos a seguir mostram algumas armadilhas da aritmética de Data/Horário em
   relação a transições de horário de verão e meses que contêm números diferentes de dias.
  </para>
  <para>
   <example>
    <title>DateTimeImmutable::add/sub adicionando intervalos que tempo decorrido</title>
    <simpara>
        Adicionar PT24H sobre uma transição de horário de verão irá aparentar uma adição de
        23/25 horas (para a maioria dos fusos horários).
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
$dt = new DateTimeImmutable("2015-11-01 00:00:00", new DateTimeZone("America/New_York"));
echo "Start: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->add(new DateInterval("PT3H"));
echo "End:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Start: 2015-11-01 00:00:00 -04:00
End:   2015-11-01 02:00:00 -05:00
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>DateTimeImmutable::modify e strtotime incrementando ou decrementando valores de componentes individuais</title>
    <simpara>
     Adicionar +24 horas sobre uma transição de horário de verão irá adicionar exatamente 24 horas como visto na
     string de data/hora (a menos que o horário de início ou fim esteja em um ponto
     de transição).
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
$dt = new DateTimeImmutable("2015-11-01 00:00:00", new DateTimeZone("America/New_York"));
echo "Start: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("+24 hours");
echo "End:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Start: 2015-11-01 00:00:00 -04:00
End:   2015-11-02 00:00:00 -05:00
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Adicionar ou substrair períodos pode causar transferência de datas</title>
    <simpara>
     Como em 31 de janeiro + 1 mês, irá resultar em 2 de março (em ano bissexto) ou 
     3 de março (em ano normal).
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
echo "Ano normal:\n"; // fevereiro tem 28 dias
$dt = new DateTimeImmutable("2015-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Início: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("+1 month");
echo "Fim:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;

echo "Ano bissexto:\n"; // fevereiro tem 29 dias
$dt = new DateTimeImmutable("2016-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Início: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("+1 month");
echo "Fim:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Ano normal:
Início: 2015-01-31 00:00:00 -05:00
Fim:   2015-03-03 00:00:00 -05:00
Ano bissexto:
Início: 2016-01-31 00:00:00 -05:00
Fim:   2016-03-02 00:00:00 -05:00
]]>
    </screen>
    <simpara>
     PAra obter o último dia do mês seguinte (para evitar a transferência),
     o formato <literal>last day of</literal> está disponível.
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php
echo "Ano normal:\n"; // fevereiro tem 28 dias
$dt = new DateTimeImmutable("2015-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Início: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("last day of next month");
echo "Fim:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;

echo "Ano bissexto:\n"; // fevereiro tem 29 dias
$dt = new DateTimeImmutable("2016-01-31 00:00:00", new DateTimeZone("America/New_York"));
echo "Início: ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
$dt = $dt->modify("last day of next month");
echo "Fim:   ", $dt->format("Y-m-d H:i:s P"), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Normal year:
Start: 2015-01-31 00:00:00 -05:00
End:   2015-02-28 00:00:00 -05:00
Leap year:
Start: 2016-01-31 00:00:00 -05:00
End:   2016-02-29 00:00:00 -05:00
]]>
    </screen>
   </example>
  </para>
 </section>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
