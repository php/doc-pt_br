<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
<refentry xml:id="function.count" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>count</refname>
  <refpurpose>Conta o número de elementos de uma variável, ou propriedades de um objeto</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>int</type><methodname>count</methodname>
    <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
   </methodsynopsis>
  <para>
   Conta os elementos de um array, ou propriedades em um objeto.
  </para>
  <para>
   Para objetos, se você tem
   <link linkend="ref.spl">SPL</link> instalada, você pode fazer um gancho na
   <function>count</function> implementando a interface
   <literal>Countable</literal>. A interface tem exatamente um método,
   <function>count</function>, que retorna o valor retornado para função
   <function>count</function>.
  </para>
  <para>
   Por favor, veja a sessão <link linkend="language.types.array">Array</link>
   do manual para uma explicação mais detalhada sobre como os arrays são
   implementados e utilizados no PHP.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       The array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Se o parâmetro opcional <parameter>mode</parameter> for
       <constant>COUNT_RECURSIVE</constant> (ou 1), a função <function>count</function>
       irá recursivamente contar a matriz. Isto é particularmente util
       para contar elementos em matriz multidimensional.
       O valor padrão para <parameter>mode</parameter> é <literal>0</literal>.
       <function>count</function> não detecta infinita recursão.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o número de elementos em <parameter>var</parameter>, que normalmente
   é um <type>array</type>, pois qualquer outra coisa terá somente um elemento.
  </para>
  <para>
   Se <parameter>var</parameter> não for um array ou um objeto, com a
   interface Countable implementada,
   <literal>1</literal> será retornado.
   Há uma exceção, se <parameter>var</parameter> é &null;,
   <literal>0</literal> é retornado.
  </para>
  <caution>
   <para>
    <function>count</function> pode retornar 0 para uma variável
    que não existe, mas também pode retornar 0 para uma variável que tenha
    sido inicializada como um array vazio. Use
    <function>isset</function> para checar se a variável existe.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da função <function>count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
$result = count($a);
// $result == 3

$b[0] = 7;
$b[5] = 9;
$b[10] = 11;
$result = count($b);
// $result == 3

$result = count(null);
// $result == 0

$result = count(false);
// $result == 1
?>
]]>
    </programlisting>
   </example>
  </para>
  <example>
   <title>Uso recursivo da função <function>count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$comidas = array('frutas'  => array('laranja', 'banana', 'maçã'),
'veggie'  => array('cenoura', 'couve','ervilha'));
// contagem recursiva
echo count($comidas, COUNT_RECURSIVE);  // mostra 8
// contagem normal
echo count($comidas);                   // mostra 2
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_array</function></member>
    <member><function>isset</function></member>
    <member><function>strlen</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
