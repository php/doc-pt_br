<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready --><!-- CREDITS: lucasr -->
<refentry xml:id="function.usort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>usort</refname>
  <refpurpose>Ordena um array pelos valores utilizando uma função de comparação
   definida pelo usuário</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>usort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>string</type><parameter>cmp_function</parameter></methodparam>
  </methodsynopsis>
  <para>
   Essa função irá ordenar um array pelos valores usando uma função de
   classificação definida pelo usuário. Se o array precisar ser ordenado 
   utilizando um critério não trivial, você deve usar essa função.
  </para>
  <note>
   <para>
    Se dois elementos são considerados iguais, a ordem deles fica
    indefinida no array resultante.
   </para>
  </note>
  &note.no-key-association;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       The input array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cmp_function</parameter></term>
     <listitem>
      <para>
       A função de comparação deve retornar um inteiro menor, igual ou maior que
       zero se o primeiro argumento for considerado respectivamente menor,
       igual, ou maior que o segundo. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>usort</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function cmp($a, $b)
{   
    if ($a == $b) {
    return 0;
    }
    return ($a < $b) ? -1 : 1;
}

$a = array(3, 2, 5, 6, 1);

usort($a, "cmp");

foreach ($a as $key => $value) {
    echo "$chave: $valor\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
0: 1
1: 2
2: 3
3: 5
4: 6
]]>
    </screen>  
   </example> 
  </para>
  <note>
   <para>
    Obviamente que nesse caso trivial a função <function>sort</function>
    seria mais apropriada.
   </para>
  </note>
  <para>
   <example>
    <title>
     Exemplo de <function>usort</function> usando um array multi-dimensional
    </title>
    <programlisting role="php">
<![CDATA[
<?php
function cmp($a, $b)
{
    return strcmp($a["fruta"], $b["fruta"]);
} 

$frutas[0]["fruta"] = "limoes";
$frutas[1]["fruta"] = "abacaxis";
$frutas[2]["fruta"] = "goiabas";

usort($frutas, "cmp"); 

while (list($chave, $valor) = each($frutas)) {
    echo "\$frutas[$chave]: " . $valor["fruta"] . "\n";
}
?>
]]>
    </programlisting>
    <para>
     Na ordenação de um array multi-dimensional, <varname>$a</varname> e
     <varname>$b</varname> contém referências para o primeiro índice do array.
    </para>
    &example.outputs;
    <screen>
<![CDATA[
$fruits[0]: abacaxis
$fruits[1]: goiabas
$fruits[2]: limoes
]]>
    </screen>  
   </example>  
  </para>
  <para>
   <example>
    <title>
     Exemplo de <function>usort</function> usando uma função membro de um
     objeto 
    </title>
    <programlisting role="php">
<![CDATA[
<?php
class TestObj {
    var $name;

    function TestObj($name)
    {
        $this->name = $name;
    }

    /* Essa é a função estática de comparação */
    static function cmp_obj($a, $b)
    {
        $al = strtolower($a->name);
        $bl = strtolower($b->name);
        if ($al == $bl) {
        return 0;
        }
        return ($al > $bl) ? +1 : -1;
    }
}

$a[] = new TestObj("c");
$a[] = new TestObj("b");
$a[] = new TestObj("d");

usort($a, array ("TestObj", "cmp_obj"));

foreach ($a as $item) {
    echo $item->name . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
b
c
d
]]>  
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>uasort</function></member>
    <member><function>uksort</function></member>
    <member><function>sort</function></member>
    <member><function>asort</function></member>
    <member><function>arsort</function></member>
    <member><function>ksort</function></member>
    <member><function>natsort</function></member>
    <member><function>rsort</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
