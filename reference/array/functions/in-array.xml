<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 8cd7c0d8c574903e149c1da0689a8728cdf909d4 Maintainer: lhsazevedo Status: ready --><!-- CREDITS: narigone, lucasr, felipe, lhsazevedo -->
<refentry xml:id="function.in-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>in_array</refname>
  <refpurpose>Checa se um valor existe em um array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>in_array</methodname>
   <methodparam><type>mixed</type><parameter>needle</parameter></methodparam>
   <methodparam><type>array</type><parameter>haystack</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>strict</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Procura por <parameter>needle</parameter> (agulha) no <parameter>haystack</parameter> (palheiro) usando comparação frouxa
   a não ser que <parameter>strict</parameter> seja definido.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       O valor procurado.
      </para>
      <note>
       <para>
        Se <parameter>needle</parameter> for uma string, a comparação é feita
        diferenciando caracteres maiúsculos e minúsculos.
      </para>
     </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       O array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>strict</parameter></term>
     <listitem>
      <para>
       Se o terceiro parâmetro <parameter>strict</parameter> for &true; então
       <function>in_array</function> também irá checar os <link
       linkend="language.types">tipos</link> de <parameter>needle</parameter> em
       <parameter>haystack</parameter>.
      </para>
      <note>
       <para>
        Antes do PHP 8.0.0, uma <parameter>needle</parameter> <literal>string</literal> irá corresponder a um valor
        de <literal>0</literal> no array em modo não estrito, e vice-versa. Isso pode levar a resultados
        indesejáveis. Casos extremos similares exitem para outros tipos, também. Se você não tem certeza absoluta dos
        tipos dos valores involvidos, sempre use a flag <parameter>strict</parameter> para evitar comportamento inesperado.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna &true; se <parameter>needle</parameter> é encontrado no array,
   &false; caso contrário.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>in_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$os = array("Mac", "NT", "Irix", "Linux");
if (in_array("Irix", $os)) {
    echo "Tem Irix";
}
if (in_array("mac", $os)) {
    echo "Tem mac";
}
?>
]]>
    </programlisting>
    <para>
     A segunda condicional falha pois <function>in_array</function>
     diferencia letras minúsculas e maiúsculas. Então, a saída seria:
    </para>
     <screen>
<![CDATA[
Tem Irix
]]>
     </screen>
    </example>
  </para>
  <para>
   <example>
    <title><function>in_array</function> com checagem de tipos</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = array('1.10', 12.4, 1.13);

if (in_array('12.4', $a, true)) {
    echo "'12.4' encontrado com checagem de tipo\n";
}

if (in_array(1.13, $a, true)) {
    echo "1.13 encontrado com checagem de tipo\n";
}
?>
]]>
    </programlisting>
     &example.outputs;
    <screen>
<![CDATA[
1.13 encontrado com checagem de tipo
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de <function>in_array</function> passando um array como um needle</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = array(array('p', 'h'), array('p', 'r'), 'o');

if (in_array(array('p', 'h'), $a)) {
    echo "'ph' foi encontrado\n";
}

if (in_array(array('f', 'i'), $a)) {
    echo "'fi' foi encontrado\n";
}

if (in_array('o', $a)) {
    echo "'o' foi encontrado\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
    'ph' foi encontrado
    'o' foi encontrado
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_search</function></member>
    <member><function>isset</function></member>
    <member><function>array_key_exists</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
