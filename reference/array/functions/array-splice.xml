<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: cd943f94a013b74df8765ab8e1a620a916a64a85 Maintainer: lhsazevedo Status: ready --><!-- CREDITS: lucasr,rafaelbernard,lhsazevedo -->
<refentry xml:id="function.array-splice" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_splice</refname>
  <refpurpose>Remove uma parte array e a substitui por outra coisa</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_splice</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>replacement</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Remove os elementos especificados por <parameter>offset</parameter> e
   <parameter>length</parameter> do array <parameter>array</parameter>,
   e os substitui com os elementos do
   array <parameter>replacement</parameter>, se for especificado.   
  </para>
  <note>
   <para>
    Chaves numéricas em <parameter>array</parameter> não são preservadas.
   </para>
  </note>
  <note>
   <simpara>
    Se <parameter>replacement</parameter> não for um array, ele será
    <link linkend="language.types.array.casting">convertido</link>
    para um array (i.e. <code>(array) $replacement</code>). Isso pode resultar em um
    comportamento inesperado ao usar um objeto ou <parameter>replacement</parameter> &null;.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       O array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Se <parameter>offset</parameter> for positivo então o começo da
       região removida será nesse deslocamento a partir do início do
       array <parameter>array</parameter>.
      </para>
      <para>
       Se <parameter>offset</parameter> for negativo então o começo da
       região removida será nesse deslocamento a partir do final do
       array <parameter>array</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Se <parameter>length</parameter> for omitido, remove tudo
       a partir de <parameter>offset</parameter> até o final do array.
      </para>
      <para>
       Se <parameter>length</parameter> for especificado e for positivo,
       então essa quantidade de elementos será removida.
      </para>
      <para>
       Se <parameter>length</parameter> for especificado e for negativo,
       então o final da região removida será essa quantidade de elementos 
       a partir do final do array.
      </para>
      <para>
       Se <parameter>length</parameter> for especificado e for zero,
       nenhum elemento será removido.
      </para>
      <tip>
       <para>
         Para remover tudo a partir de <parameter>offset</parameter> até o final do
         array quando <parameter>replacement</parameter> também é especificado,
         use <code>count($input)</code> para <parameter>length</parameter>.
      </para>
      </tip>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement</parameter></term>
     <listitem>
      <para>
       Se o array <parameter>replacement</parameter> for especificado, então os
       elementos removidos serão substituidos pelo elementos desse array.
      </para>
      <para>
       Se <parameter>offset</parameter> e <parameter>length</parameter>
       são tais que nada é removido, então os elementos do
       array <parameter>replacement</parameter> serão inseridos no lugar
       especificado pelo <parameter>offset</parameter>.
      </para>
      <note>
       <para>
        Chaves em <parameter>replacement</parameter> não são preservadas.
       </para>
      </note>
      <para>
       Se <parameter>replacement</parameter> for de apenas um elemento
       então não é necessário colocar <literal>array()</literal> ou colchetes
       ao redor dele, a não ser que elementos seja um array em si, um objeto ou &null;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um array que consiste nos elementos extraídos.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> agora é anulável.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplos da <function>array_splice</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, 2);
var_dump($input);

$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, 1, -1);
var_dump($input);

$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, 1, count($input), "laranja");
var_dump($input);

$input = array("vermelho", "verde", "azul", "amarelo");
array_splice($input, -1, 1, array("preto", "marrom"));
var_dump($input);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  string(3) "vermelho"
  [1]=>
  string(5) "verde"
}
array(2) {
  [0]=>
  string(3) "vermelho"
  [1]=>
  string(6) "amarelo"
}
array(2) {
  [0]=>
  string(3) "vermelho"
  [1]=>
  string(6) "laranja"
}
array(5) {
  [0]=>
  string(3) "vermelho"
  [1]=>
  string(5) "verde"
  [2]=>
  string(4) "azul"
  [3]=>
  string(5) "preto"
  [4]=>
  string(6) "marrom"
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Declarações equivalentes a vários exemplos da <function>array_splice</function></title>
    <para>
     As seguintes declarações são equivalentes:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// adiciona dois elementos a $input
array_push($input, $x, $y);
array_splice($input, count($input), 0, array($x, $y));

// remove o último elemento de $input
array_pop($input);
array_splice($input, -1);

// remove o primeiro elemento de $input
array_shift($input);
array_splice($input, 0, 1);

// insere um elemento no início de $input
array_unshift($input, $x, $y);
array_splice($input, 0, 0, array($x, $y));

// substitui o valor em $input no índice $x
$input[$x] = $y; // para arrays onde a chave é igual ao deslocamento
array_splice($input, $x, 1, $y);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_merge</function></member>
    <member><function>array_slice</function></member>
    <member><function>unset</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
