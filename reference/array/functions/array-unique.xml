<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 3ba15fd3dfb8196a1762b1a21a14311e0279284b Maintainer: lhsazevedo Status: ready --><!-- CREDITS: lucasr,narigone,rafaelbernard,felipe,lhsazevedo -->
<refentry xml:id="function.array-unique" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_unique</refname>
  <refpurpose>Remove os valores duplicados de um array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_unique</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>SORT_STRING</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Recebe uma entrada <parameter>array</parameter> e retorna um novo array
   sem valores duplicados.
  </para>
  <para>
   Note que as chaves são preservadas. Se vários elementos forem iguais sob
   as <parameter>flags</parameter> fornecidas, então a chave e o valor
   do primeiro elemento igual serão retidos.
  </para>
  <note>
   <simpara>
    Dois elementos são considerados iguais se, e somente se,
    <literal>(string) $elem1 === (string) $elem2</literal>. Em palavras:
    quando a represetação em string é a mesma, o primeiro elemento será usado.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       O array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       O segundo parâmetro opcional <parameter>flags</parameter>
       pode ser utilizado para modificar o comportamento de comparação usando estes valores:
      </para>
      <para>
       Flags de tipo de comparação:
       <itemizedlist>
        <listitem>
         <simpara><constant>SORT_REGULAR</constant> - compara os itens normalmente
         (não altera tipos)</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_NUMERIC</constant> - compara itens numericamente</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_STRING</constant> - compara itens como strings</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_LOCALE_STRING</constant> - compara itens como
          strings baseado na localidade atual.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o array filtrado.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Se <parameter>flags</parameter> for <constant>SORT_STRING</constant>,
        o <parameter>array</parameter> anterior foi copiado e os elementos não únicos
        foram removidos (sem empacotar o array em seguida), mas
        um novo array é criado ao adicionar os novos elementos. Isto pode resultar
        em índices numéricos diferentes.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>array_unique</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("a" => "verde", "vermelho", "b" => "verde", "azul", "vermelho");
$result = array_unique($input);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [a] => verde
    [0] => vermelho
    [1] => azul
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>array_unique</function> e tipos</title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array(4, "4", "3", 4, 3, "3");
$result = array_unique($input);
var_dump($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(2) {
  [0] => int(4)
  [2] => string(1) "3"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Note que <function>array_unique</function> não se destina
    a funcionar em arrays multidimensionais.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_count_values</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
