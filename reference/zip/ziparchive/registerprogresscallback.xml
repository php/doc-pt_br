<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 476ab39857fb032076f280fa5397ed483bf7e28d Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="ziparchive.registerprogresscallback" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ZipArchive::registerProgressCallback</refname>
  <refpurpose>Registrar um callback para fornecer atualizações durante o fechamento do arquivo compactado.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ZipArchive">
   <modifier>public</modifier> <type>bool</type><methodname>ZipArchive::registerProgressCallback</methodname>
   <methodparam><type>float</type><parameter>rate</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   Registra uma função de <parameter>callback</parameter> para fornecer atualizações durante o fechamento do arquivo compactado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>rate</parameter></term>
     <listitem>
      <para>
       Alteração entre cada chamada do retorno de chamada (de 0.0 a 1.0).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Esta função receberá o <parameter>state</parameter> atual como um <type>float</type> (de 0.0 a 1.0).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
    <para>
     Este exemplo cria um arquivo compactado ZIP
     <filename>php.zip</filename> e mostra
     a progressão.
    </para>
    <example>
     <title>Archive a file</title>
     <programlisting role="php">
<![CDATA[
$zip = new ZipArchive();
if ($zip->open('php.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE)) {
	$zip->addFile(PHP_BINARY, 'php');
	$zip->registerProgressCallback(0.05, function ($r) {
		printf("%d%%\n", $r * 100);
	});
	$zip->close();
}
]]>
     </programlisting>
    </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Esta função só está disponível se for construída com libzip ≥ 1.3.0.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ZipArchive::registerCancelCallback</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
