<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 661e6858acade9f5a08fc8f9c07b605f42f4a700 Maintainer: leonardolara Status: ready --><!-- CREDITS: felipe,leonardolara -->
<refentry xml:id="pdo.begintransaction" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::beginTransaction</refname>
  <refpurpose>
   Inicia uma transação
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type>bool</type><methodname>PDO::beginTransaction</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Desativa o modo de envio automático. Enquanto o modo de envio automático estiver desativado,
   modificações feitas no banco de dados por meio da instância do objeto PDO não
   serão enviadas até que você finalize a transação chamando <methodname>PDO::commit</methodname>.
   Chamar <methodname>PDO::rollBack</methodname> reverterá todas as alterações no
   banco de dados e retornará a conexão para o modo de envio automático.
  </para>
  <para>
   Alguns bancos de dados, incluindo o MySQL, emitem automaticamente um COMMIT
   implícito quando uma instrução de linguagem de definição de banco de dados (DDL)
   como DROP TABLE ou CREATE TABLE é emitida em uma transação. O COMMIT
   implícito impedirá que você reverta quaisquer outras alterações dentro do
   limite da transação.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lança uma <classname>PDOException</classname> se já houver uma transação iniciada ou se o driver não suportar transações.
  </para>
  &pdo.errors.exception-not-errmode;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Reverter uma transação</title>
    <para>
     O exemplo a seguir inicia uma transação e emite duas instruções que
     modificam o banco de dados antes de reverter as alterações.
     No MySQL, no entanto, a instrução DROP TABLE envia automaticamente
     a transação de modo que nenhuma das alterações na transação é
     revertida.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Inicia uma transação, desligando o envio automático */
$dbh->beginTransaction();

/* Altera esquema e dados do banco */
$sth = $dbh->exec("DROP TABLE fruit");
$sth = $dbh->exec("UPDATE dessert
    SET name = 'hamburger'");

/* Reconhece o engano e desfaz o envio das alterações */
$dbh->rollBack();

/* A conexão do banco agora está de volta o modo de envio automático */
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::commit</methodname></member>
    <member><methodname>PDO::rollBack</methodname></member>
    <member><link linkend="pdo.transactions">Transações e envio automático</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
