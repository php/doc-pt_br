<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 28529d3539b850e870e3aa97570f4db0e53daa03 Maintainer: leonardolara Status: ready --><!-- CREDITS: mauricio,felipe,leonardolara -->
<refentry xml:id="pdo.exec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::exec</refname>
  <refpurpose>
   Executa uma instrução SQL e retorna o número de linhas afetadas
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>int</type><type>false</type></type><methodname>PDO::exec</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>

  <para>
   <methodname>PDO::exec</methodname> executa uma instrução SQL em
   uma única chamada de função, retornando o número de linhas afetadas pela
   instrução.
  </para>
  <para>
   <methodname>PDO::exec</methodname> não retorna resultados de uma instrução
   SELECT. Para uma instrução SELECT que você só precisa emitir uma vez
   durante seu programa, considere a emissão de <methodname>PDO::query</methodname>.
   Para uma instrução que você precisa emitir várias vezes, prepare um objeto
   PDOStatement com <methodname>PDO::prepare</methodname> e emita a
   instrução com <methodname>PDOStatement::execute</methodname>.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       A instrução SQL para preparar e executar.
      </para>
      <para>
       Os dados dentro da consulta devem ser <link linkend="pdo.quote">adequadamente escapados</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <methodname>PDO::exec</methodname> retorna o número de linhas que foram
   modificadas ou excluídas pela instrução SQL que você emitiu. Se nenhuma linha
   for afetada, <methodname>PDO::exec</methodname> retorna <literal>0</literal>.
  </para>

  &return.falseproblem;
  <para>
   O exemplo a seguir depende incorretamente do valor de retorno de
   <methodname>PDO::exec</methodname>, em que uma instrução que afetou 0 linhas
   resulta em uma chamada para <function>die</function>:
   <programlisting role="php">
<![CDATA[
<?php
$db->exec() or die(print_r($db->errorInfo(), true)); // incorrect
?>
]]>
   </programlisting>
  </para>

 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Emitindo uma instrução DELETE</title>
    <para>
     Conte o número de linhas excluídas por uma instrução DELETE sem
     cláusula WHERE.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$dbh = new PDO('odbc:sample', 'db2inst1', 'ibmdb2');

/* Apaga todas as linhas da tabela FRUIT */
$count = $dbh->exec("DELETE FROM fruit");

/* Retorna o número de linhas apagadas */
print "Apagada(s) $count linha(s).\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Apagada(s) 1 linha(s).
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDO::query</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
