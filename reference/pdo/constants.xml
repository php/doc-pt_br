<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: daf4cc624df3c21d472149725feb377b1beedb04 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<!-- Generated by xml_proto.php v2.1. Found in /scripts directory of phpdoc. -->
<appendix xml:id="pdo.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <variablelist>
  <varlistentry xml:id="pdo.constants.param-bool">
   <term>
    <constant>PDO::PARAM_BOOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa um tipo de dado booleano.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-null">
   <term>
    <constant>PDO::PARAM_NULL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa o tipo de dado SQL NULL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-int">
   <term>
    <constant>PDO::PARAM_INT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa o tipo de dados SQL INTEGER.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str">
   <term>
    <constant>PDO::PARAM_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa o tipo de dados SQL CHAR, VARCHAR ou outra string.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-natl">
   <term>
    <constant>PDO::PARAM_STR_NATL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sinaliza que uma string usa o conjunto de caracteres nacional.
    </simpara>
    <simpara>
     Disponível desde o PHP 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-str-char">
   <term>
    <constant>PDO::PARAM_STR_CHAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sinaliza que uma string usa o conjunto de caracteres regular.
    </simpara>
    <simpara>
     Disponível desde o PHP 7.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-lob">
   <term>
    <constant>PDO::PARAM_LOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa o tipo de dados SQL large object.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-stmt">
   <term>
    <constant>PDO::PARAM_STMT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Representa um tipo de conjunto de registros. Atualmente não suportado por nenhum driver.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-input-output">
   <term>
    <constant>PDO::PARAM_INPUT_OUTPUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o parâmetro é um parâmetro INOUT para um
     procedimento armazenado. Você deve combinar esse valor com um tipo de dado explícito
     PDO::PARAM_*.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-default">
   <term>
    <constant>PDO::FETCH_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o modo de busca padrão deve ser usado. Disponível a partir do PHP 8.0.7.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-lazy">
   <term>
    <constant>PDO::FETCH_LAZY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método de busca deve retornar cada linha como um objeto com
     nomes de propriedades que correspondem aos nomes das colunas retornadas no conjunto de resultados.
     <constant>PDO::FETCH_LAZY</constant> retorna
     um objeto <classname>PDORow</classname>
     que cria os nomes das propriedades do objeto conforme eles são acessados.
     Não válido dentro de <methodname>PDOStatement::fetchAll</methodname>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-assoc">
   <term>
    <constant>PDO::FETCH_ASSOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar cada linha como um array indexado
     pelo nome da coluna conforme retornado no conjunto de resultados correspondente. Se o conjunto de
     resultados contiver várias colunas com o mesmo nome,
     <constant>PDO::FETCH_ASSOC</constant> retorna
     apenas um único valor por nome de coluna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-named">
   <term>
    <constant>PDO::FETCH_NAMED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar cada linha como um array indexado
     pelo nome da coluna conforme retornado no conjunto de resultados correspondente. Se o conjunto
     de resultados contiver várias colunas com o mesmo nome,
     <constant>PDO::FETCH_NAMED</constant> retorna
     um array de valores por nome.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-num">
   <term>
    <constant>PDO::FETCH_NUM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar cada linha como um array indexado
     pelo número da coluna conforme retornado no conjunto de resultados correspondente, começando
     na coluna 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-both">
   <term>
    <constant>PDO::FETCH_BOTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar cada linha como um array indexado
     tanto pelo nome quanto pelo número da coluna conforme retornado no conjunto de resultados correspondente,
     começando na coluna 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-obj">
   <term>
    <constant>PDO::FETCH_OBJ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar cada linha como um objeto com
     nomes de propriedade que correspondem aos nomes das colunas retornadas no
     conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-bound">
   <term>
    <constant>PDO::FETCH_BOUND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar TRUE e atribuir os valores das
     colunas no conjunto de resultados às variáveis PHP às quais foram
     vinculadas com os métodos <methodname>PDOStatement::bindParam</methodname> ou
     <methodname>PDOStatement::bindColumn</methodname>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-column">
   <term>
    <constant>PDO::FETCH_COLUMN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar apenas uma única coluna solicitada
      da próxima linha no conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-class">
   <term>
    <constant>PDO::FETCH_CLASS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve retornar uma nova instância da
     classe solicitada, mapeando as colunas para propriedades nomeadas na classe.
    </simpara>
    <note>
     <simpara>
      O método mágico
      <link linkend="language.oop5.overloading.members"><methodname>__set</methodname></link>
      é chamado se a propriedade não existir na classe solicitada
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-into">
   <term>
    <constant>PDO::FETCH_INTO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que o método fetch deve atualizar uma instância existente da
     classe solicitada, mapeando as colunas para propriedades nomeadas na classe.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-func">
   <term>
    <constant>PDO::FETCH_FUNC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Permite personalizar completamente a maneira como os dados são tratados sob demanda (válido
     apenas dentro de <methodname>PDOStatement::fetchAll</methodname>).
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-group">
   <term>
    <constant>PDO::FETCH_GROUP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Agrupa o retorno por valores. Geralmente combinado com
     <constant>PDO::FETCH_COLUMN</constant> ou
     <constant>PDO::FETCH_KEY_PAIR</constant>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-unique">
   <term>
    <constant>PDO::FETCH_UNIQUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Busca apenas os valores únicos.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-key-pair">
   <term>
    <constant>PDO::FETCH_KEY_PAIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
      Busca um resultado de duas colunas em um array onde a primeira coluna é uma chave e a segunda coluna
      é o valor.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.fetch-classtype">
   <term>
    <constant>PDO::FETCH_CLASSTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Determina o nome da classe a partir do valor da primeira coluna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-serialize">
   <term>
    <constant>PDO::FETCH_SERIALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Como <constant>PDO::FETCH_INTO</constant>, mas o objeto é fornecido como uma string serializada.
     O construtor da classe nunca é chamado se este sinalizador estiver definido.
     Obsoleto a partir do PHP 8.1.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-props-late">
   <term>
    <constant>PDO::FETCH_PROPS_LATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Chama o construtor antes de definir as propriedades.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-autocommit">
   <term>
    <constant>PDO::ATTR_AUTOCOMMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Se esse valor for &false;, o PDO tenta desativar o autocommit para que a
     conexão inicie uma transação.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-prefetch">
   <term>
    <constant>PDO::ATTR_PREFETCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Definir o tamanho do prefetch permite equilibrar a velocidade contra o uso de memória
     para sua aplicação. Nem todas as combinações de banco de dados/driver suportam
     a definição do tamanho do prefetch. Um tamanho de prefetch maior resulta em
     um aumento de desempenho com o custo de maior uso de memória.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-timeout">
   <term>
    <constant>PDO::ATTR_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define o valor de tempo limite em segundos para comunicações com o banco de dados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-errmode">
   <term>
    <constant>PDO::ATTR_ERRMODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Consulte a seção <link linkend="pdo.error-handling">Erros e tratamento de
     erros</link> para obter mais informações sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-version">
   <term>
    <constant>PDO::ATTR_SERVER_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Este é um atributo somente leitura; ele retornará informações sobre a
     versão do servidor de banco de dados ao qual o PDO está conectado.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-client-version">
   <term>
    <constant>PDO::ATTR_CLIENT_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Este é um atributo somente leitura; ele retornará informações sobre a
     versão das bibliotecas de cliente que o driver PDO está usando.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-server-info">
   <term>
    <constant>PDO::ATTR_SERVER_INFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Este é um atributo somente leitura; ele retornará algumas informações meta sobre o
     servidor de banco de dados ao qual o PDO está conectado.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-connection-status">
   <term>
    <constant>PDO::ATTR_CONNECTION_STATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-case">
   <term>
    <constant>PDO::ATTR_CASE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Força os nomes das colunas para um caso específico especificado pelas
     constantes <literal>PDO::CASE_*</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor-name">
   <term>
    <constant>PDO::ATTR_CURSOR_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Obtém ou define o nome a ser usado para um cursor. Mais útil ao usar
     cursores roláveis e atualizações posicionadas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-cursor">
   <term>
    <constant>PDO::ATTR_CURSOR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Seleciona o tipo de cursor. O PDO atualmente suporta apenas
     <constant>PDO::CURSOR_FWDONLY</constant> e
     <constant>PDO::CURSOR_SCROLL</constant>. Mantenha
     <constant>PDO::CURSOR_FWDONLY</constant> a menos que saiba que precisa de um
     cursor rolável.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.attr-driver-name">
   <term>
    <constant>PDO::ATTR_DRIVER_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Retorna o nome do driver.
    </simpara>
    <para>
     <example><title>using <constant>PDO::ATTR_DRIVER_NAME</constant></title>
     <programlisting role="php">
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
  echo "Running on mysql; doing something mysql specific here\n";
}
?>
]]>
     </programlisting>
     </example>
     </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-oracle-nulls">
   <term>
    <constant>PDO::ATTR_ORACLE_NULLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Converte strings vazias em valores SQL NULL em buscas de dados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-persistent">
   <term>
    <constant>PDO::ATTR_PERSISTENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Solicita uma conexão persistente, em vez de criar uma nova conexão.
     Consulte <link linkend="pdo.connections">Conexões e Gerenciamento de
     Conexões</link> para obter mais informações sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-statement-class">
   <term>
    <constant>PDO::ATTR_STATEMENT_CLASS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define o nome da classe de que as declarações são retornadas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-catalog-names">
   <term>
    <constant>PDO::ATTR_FETCH_CATALOG_NAMES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Adiciona o nome do catálogo contenedor a cada nome de coluna retornado no
     conjunto de resultados. O nome do catálogo e o nome da coluna são separados por um ponto decimal
     (.). O suporte deste atributo é no nível do driver; pode não
     ser suportado pelo seu driver.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-fetch-table-names">
   <term>
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Adiciona o nome da tabela contenedora a cada nome de coluna retornado no
     conjunto de resultados. O nome da tabela e o nome da coluna são separados por um ponto
     decimal (.). O suporte deste atributo é no nível do driver; pode não
     ser suportado pelo seu driver.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-stringify-fetches">
   <term>
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Força todos os valores buscados a serem tratados como strings.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-max-column-len">
   <term>
    <constant>PDO::ATTR_MAX_COLUMN_LEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define o comprimento máximo do nome da coluna.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-fetch-mode">
   <term>
    <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-emulate-prepares">
   <term>
    <constant>PDO::ATTR_EMULATE_PREPARES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.attr-default-str-param">
   <term>
    <constant>PDO::ATTR_DEFAULT_STR_PARAM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Define o tipo de parâmetro de string padrão, que pode ser um dos <constant>PDO::PARAM_STR_NATL</constant>
     e <constant>PDO::PARAM_STR_CHAR</constant>.
    </simpara>
    <simpara>
     Disponível desde o PHP 7.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-silent">
   <term>
    <constant>PDO::ERRMODE_SILENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Não gera um erro ou exceção se ocorrer um erro. O desenvolvedor é
     esperado para verificar explicitamente os erros. Este é o modo padrão.
     Consulte <link linkend="pdo.error-handling">Erros e tratamento de erros</link>
     para mais informações sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-warning">
   <term>
    <constant>PDO::ERRMODE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Emite uma mensagem PHP <constant>E_WARNING</constant> se ocorrer um erro.
     Consulte <link linkend="pdo.error-handling">Erros e tratamento de erros</link>
     para mais informações sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.errmode-exception">
   <term>
    <constant>PDO::ERRMODE_EXCEPTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Lança uma <classname>PDOException</classname> se ocorrer um erro.
     Consulte <link linkend="pdo.error-handling">Erros e tratamento de erros</link>
     para mais informações sobre este atributo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-natural">
   <term>
    <constant>PDO::CASE_NATURAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Deixa os nomes das colunas como retornados pelo driver do banco de dados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-lower">
   <term>
    <constant>PDO::CASE_LOWER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Força os nomes das colunas em minúsculas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.case-upper">
   <term>
    <constant>PDO::CASE_UPPER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Força os nomes das colunas em maiúsculas.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-natural">
   <term>
    <constant>PDO::NULL_NATURAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-empty-string">
   <term>
    <constant>PDO::NULL_EMPTY_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.null-to-string">
   <term>
    <constant>PDO::NULL_TO_STRING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-next">
   <term>
    <constant>PDO::FETCH_ORI_NEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Busca a próxima linha no conjunto de resultados. Válido apenas para cursores roláveis.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-prior">
   <term>
    <constant>PDO::FETCH_ORI_PRIOR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Busca a linha anterior no conjunto de resultados. Válido apenas para
     cursores roláveis.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-first">
   <term>
    <constant>PDO::FETCH_ORI_FIRST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Busca a primeira linha no conjunto de resultados. Válido apenas para cursores roláveis.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-last">
   <term>
    <constant>PDO::FETCH_ORI_LAST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Busca a última linha no conjunto de resultados. Válido apenas para cursores roláveis.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-abs">
   <term>
    <constant>PDO::FETCH_ORI_ABS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Busca a linha solicitada pelo número da linha do conjunto de resultados. Válido apenas
     para cursores roláveis.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.fetch-ori-rel">
   <term>
    <constant>PDO::FETCH_ORI_REL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Fetch the requested row by relative position from the current position
     of the cursor in the result set. Valid only for scrollable cursors.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-fwdonly">
   <term>
    <constant>PDO::CURSOR_FWDONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Cria um objeto <classname>PDOStatement</classname> com um cursor somente para frente. Esta é a
     escolha de cursor padrão, pois é o padrão mais rápido e comum de acesso a
     dados em PHP.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.cursor-scroll">
   <term>
    <constant>PDO::CURSOR_SCROLL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Cria um objeto <classname>PDOStatement</classname> com um cursor rolável. Passe as
     constantes <literal>PDO::FETCH_ORI_*</literal> para controlar as linhas buscadas do conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.err-none">
   <term>
    <constant>PDO::ERR_NONE</constant>
    (<type>string</type>)
   </term>
   <listitem>
    <simpara>
     Corresponde a SQLSTATE '00000', significando que a instrução SQL foi
     emitida com sucesso sem erros ou avisos. Esta constante é para
     sua conveniência ao verificar <methodname>PDO::errorCode</methodname> ou
     <methodname>PDOStatement::errorCode</methodname> para determinar se ocorreu
     um erro. Você geralmente saberá se este for o caso examinando o
     código de retorno do método que gerou a condição de erro de qualquer maneira.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-alloc">
   <term>
    <constant>PDO::PARAM_EVT_ALLOC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Evento de alocação
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-free">
   <term>
    <constant>PDO::PARAM_EVT_FREE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Evento de desalocação
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-pre">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Evento acionado antes da execução de uma instrução preparada.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-exec-post">
   <term>
    <constant>PDO::PARAM_EVT_EXEC_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Evento acionado após a execução de uma instrução preparada.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-pre">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_PRE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Evento acionado antes de buscar um resultado de um conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-fetch-post">
   <term>
    <constant>PDO::PARAM_EVT_FETCH_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Evento acionado após buscar um resultado de um conjunto de resultados.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.param-evt-normalize">
   <term>
    <constant>PDO::PARAM_EVT_NORMALIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Evento acionado durante o registro de parâmetro vinculado,
     permitindo ao driver normalizar o nome do parâmetro.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.sqlite_deterministic">
   <term>
    <constant>PDO::SQLITE_DETERMINISTIC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Especifica que uma função criada com <methodname>PDO::sqliteCreateFunction</methodname>
     é determinística, ou seja, ela sempre retorna o mesmo resultado dados os mesmos inputs dentro
     de uma única instrução SQL. (Disponível a partir do PHP 7.1.4.)
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
