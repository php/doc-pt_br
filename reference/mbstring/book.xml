<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 740eb58e8c03cfc5ac98eda13943262775b73ff2 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->

<book xml:id="book.mbstring" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="bundled" ?>
 <title>String Multibyte</title>

 <!-- {{{ preface -->
 <preface xml:id="intro.mbstring">
  &reftitle.intro;
  <para>
   Embora existam muitas linguagens nas quais cada caractere necessário pode
   ser representado por um mapeamento de um para um para um valor de 8 bits, há também
   várias linguagens que exigem tantos caracteres para a comunicação escrita
   que não podem ser contidos dentro da faixa que um simples byte
   pode codificar (um byte é composto por oito bits. Cada bit pode conter apenas dois
   valores distintos, um ou zero. Devido a isso, um byte só pode representar
   256 valores únicos (dois elevado à potência de oito)). Esquemas de codificação
   de caracteres multibyte foram desenvolvidos para expressar mais de 256 caracteres
   no sistema de codificação de bytes regular.
  </para>
  <para>
   Ao manipular (cortar, dividir, emendar, etc.) strings codificadas em uma
   codificação multibyte, você precisa usar funções especiais, pois dois ou mais
   bytes consecutivos podem representar um único caractere em tais esquemas de codificação.
   Caso contrário, se você aplicar uma função de string que não é sensível a multibyte
   à string, ela provavelmente falhará em detectar o início ou o final
   do caractere multibyte e acabará com uma string corrompida e inútil que
   provavelmente perde seu significado original.
  </para>
  <para>
   <literal>mbstring</literal> fornece funções de string específicas para multibyte
   que ajudam a lidar com codificações multibyte em PHP. Além disso,
   <literal>mbstring</literal> lida com a conversão de codificação de caracteres entre
   os pares de codificação possíveis. <literal>mbstring</literal> é projetada para
   lidar com codificações baseadas em Unicode, como UTF-8 e UCS-2, e muitas
   codificações de byte único por conveniência (listadas em <link linkend="mbstring.supported-encodings">Codificações de Caracteres Suportadas</link>).
  </para>
 </preface>
 <!-- }}} -->

 &reference.mbstring.setup;
 &reference.mbstring.constants;
 &reference.mbstring.encodings;
 &reference.mbstring.ja-basic;
 &reference.mbstring.http-inout;
 &reference.mbstring.supported-encodings;
 &reference.mbstring.overloading;
 &reference.mbstring.encoding-requirements;
 &reference.mbstring.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
