<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 14c33cf174c921e21b82a0ed262268c087137bdb Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="function.mb-ereg-replace-callback" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_ereg_replace_callback</refname>
  <refpurpose>Realiza uma busca e substituição de expressão regular com suporte a string multibyte usando um callback
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type><type>null</type></type><methodname>mb_ereg_replace_callback</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Examina <parameter>string</parameter> em busca de correspondências com
   <parameter>pattern</parameter>, em seguida, substitui o texto correspondido
   pelo resultado da função <parameter>callback</parameter>.
  </para>
  <para>
    O comportamento desta função é quase idêntico ao de <function>mb_ereg_replace</function>,
    exceto pelo fato de que, em vez de
    <parameter>replacement</parameter>, deve-se especificar um
    <parameter>callback</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       O padrão de expressão regular.
      </para>
      <para>
       Caracteres multibyte podem ser usados em <parameter>pattern</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
        Um callback que será chamado e receberá um array de elementos correspondidos
        na <parameter>string</parameter>. O callback deve
        retornar a string de substituição.
      </para>
      <para>
        Você frequentemente precisará da função <parameter>callback</parameter>
        para um <function>mb_ereg_replace_callback</function> em apenas um lugar.
        Nesse caso, você pode usar uma
        <link linkend="functions.anonymous">função anônima</link>
        para declarar o retorno de chamada dentro da chamada para
        <function>mb_ereg_replace_callback</function>. Fazendo isso,
        você tem todas as informações para a chamada em um só lugar e não
        polui o namespace da função com o nome de uma função de callback
        não utilizada em nenhum outro lugar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A <type>string</type> sendo verificada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       A opção de pesquisa. Consulte <function>mb_regex_set_options</function> para explicação.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A <type>string</type> resultante em caso de sucesso ou &false; em caso de erro.
   Se <parameter>string</parameter> não for válida para a codificação atual, &null;
   é retornado.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>options</parameter> é anulável agora.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        A função verifica se <parameter>string</parameter> é válida para a
        codificação atual.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>mb_ereg_replace_callback</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// este texto foi usado em 2002
// queremos atualizá-lo para 2003
$text = "April fools day is 04/01/2002\n";
$text.= "Last christmas was 12/24/2001\n";
// a função callback
function next_year($matches)
{
  // como de costume: $matches[0] é a correspondência completa
  // $matches[1] é a correspondência para o primeiro subpadrão
  // cercado por '(...)' e assim por diante
  return $matches[1].($matches[2]+1);
}
echo mb_ereg_replace_callback(
            "(\d{2}/\d{2}/)(\d{4})",
            "next_year",
            $text);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
April fools day is 04/01/2003
Last christmas was 12/24/2002
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>mb_ereg_replace_callback</function> usando função anônima</title>
    <programlisting role="php">
<![CDATA[
<?php
// este texto foi usado em 2002
// queremos atualizá-lo para 2003
$text = "April fools day is 04/01/2002\n";
$text.= "Last christmas was 12/24/2001\n";

echo mb_ereg_replace_callback(
            "(\d{2}/\d{2}/)(\d{4})",
            function ($matches) {
               return $matches[1].($matches[2]+1);
            },
            $text);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.mbstring.encoding.internal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mb_regex_encoding</function></member>
    <member><function>mb_ereg_replace</function></member>
    <member><link linkend="functions.anonymous">Funções Anônimas</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
