<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 95bdd6883b5dde9504701777ba81b3c5f15df52b Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->

<chapter xml:id="mbstring.http" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Entrada e Saída HTTP</title>
 <para>
  A conversão de codificação de caracteres de entrada/saída HTTP pode converter
  dados binários também. Os usuários devem controlar a conversão de
  codificação de caracteres se dados binários forem usados para
  entrada/saída HTTP.
 </para>
 <note>
  <para>
   Se <literal>enctype</literal> para o formulário HTML estiver
   configurado como <literal>multipart/form-data</literal> e
   <literal>mbstring.encoding_translation</literal> estiver ativado no &php.ini;, as variáveis POST'ed e os nomes dos arquivos enviados
   serão convertidos para a codificação de caracteres interna também.
   No entanto, a conversão não é aplicada às chaves de consulta.
  </para>
 </note>
 <para>
  <itemizedlist>
   <listitem>
    <simpara>
     Entrada HTTP
    </simpara>
    <para>
     Não há maneira de controlar a conversão de caracteres de entrada HTTP
     a partir de um script PHP. Para desativar a conversão de caracteres de
     entrada HTTP, isso deve ser feito no &php.ini;.
     <example>
      <title>
       Desative a conversão de entrada HTTP no &php.ini;
      </title>
      <programlisting role="php.ini">
<![CDATA[
;; Disable HTTP Input conversion
mbstring.http_input = pass
;; Disable HTTP Input conversion
mbstring.encoding_translation = Off
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Ao usar o PHP como um módulo do Apache, é possível
     substituir essas configurações em cada diretiva Virtual Host no
     &httpd.conf; ou por diretório com &htaccess;.
     Consulte a seção <link linkend="configuration">Configuração</link> e o
     Manual do Apache para obter detalhes.
    </para>
   </listitem>
   <listitem>
    <simpara>
     Saída HTTP
    </simpara>
    <para>
     Existem várias maneiras de habilitar a conversão de codificação de caracteres
     de saída. Uma é usando o &php.ini;, outra
     é usando <function>ob_start</function> com
     <function>mb_output_handler</function> como a
     <literal>ob_start</literal> função de retorno de chamada.
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  <example>
   <title>Exemplo de configuração no &php.ini;</title>
   <programlisting>
<![CDATA[
;; Enable output character encoding conversion for all PHP pages

;; Enable Output Buffering
output_buffering    = On

;; Set mb_output_handler to enable output conversion
output_handler      = mb_output_handler
]]>
   </programlisting>
  </example>
 </para>
 <para>
  <example>
   <title>Exemplo de script</title>
   <programlisting role="php">
<![CDATA[
<?php

// Habilitar a conversão de codificação de caracteres de saída apenas para esta página

// Definir a codificação de caracteres de saída HTTP para SJIS
mb_http_output('SJIS');

// Iniciar o buffer e especificar "mb_output_handler" como
// função de callback
ob_start('mb_output_handler');

?>
]]>
   </programlisting>
  </example>
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
