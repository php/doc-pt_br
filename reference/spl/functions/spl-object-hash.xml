<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f7e42edba898d3a07f5213360e9464fbf526b20e Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="function.spl-object-hash" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>spl_object_hash</refname>
  <refpurpose>
   Retorna o ID de hash para o objeto fornecido
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>spl_object_hash</methodname>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função retorna um identificador de hash único para o objeto. Este ID pode ser
   usado como uma chave de hash para armazenar objetos ou para identificar um objeto, desde que
   o objeto não seja destruído. Uma vez que o objeto é destruído, seu hash pode
   ser reutilizado por outros objetos. Este comportamento é semelhante ao
   <function>spl_object_id</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
   &reftitle.parameters;
   <para>
    <variablelist>
     <varlistentry>
      <term><parameter>object</parameter></term>
      <listitem>
       <para>
        Qualquer objeto.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Uma string que é única para cada objeto atualmente existente e é sempre
   a mesma para cada objeto.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>spl_object_hash</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$id = spl_object_hash($object);
$storage[$id] = $object;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Quando um objeto é destruído, seu hash pode ser reutilizado por outros objetos.
   </para>
  </note>
  <note>
   <para>
    Os hashes de objetos devem ser comparados para identidade com <code>===</code> e
    <code>!==</code>, porque o hash retornado pode ser uma
    <link linkend="language.types.numeric-strings">string numérica</link>.
    Por exemplo: <literal>0000000000000e600000000000000000</literal>.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>spl_object_id</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
