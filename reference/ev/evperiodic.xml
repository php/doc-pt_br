<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<reference xml:id="class.evperiodic" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>A classe EvPeriodic</title>
 <titleabbrev>EvPeriodic</titleabbrev>
 <partintro>
<!-- {{{ EvPeriodic intro -->
  <section xml:id="evperiodic.intro">
   &reftitle.intro;
  <para>
    Os observadores periódicos também são uma espécie de cronômetros, mas são muito versáteis.
   </para>
   <para>
    Ao contrário do
    <classname>EvTimer</classname>
    ,
    os observadores <classname>EvPeriodic</classname>
    não são baseados em tempo real (ou tempo relativo, o tempo físico
    que passa), mas no tempo do relógio de parede (tempo absoluto, calendário ou relógio). A
    diferença é que o tempo do relógio de parede pode ser mais rápido ou mais lento que o tempo
    real, e os saltos no tempo não são incomuns (por exemplo, ao ajustá-lo).
   </para>
   <para>
    O observador <classname>EvPeriodic</classname> p
    ode ser configurado para ser acionado após algum momento específico.
    Por exemplo, se um
    observador <classname>EvPeriodic</classname>
    estiver configurado para acionar
    <emphasis>"em 10 segundos"</emphasis>
    (por exemplo,
    <methodname>EvLoop::now</methodname>
    +
    <literal>10.0</literal>,
    ou seja, um tempo absoluto, não um atraso), e o relógio do sistema for redefinido para
    <emphasis>janeiro do ano anterior</emphasis>,
    então levará um ano ou mais para acionar o evento (diferentemente de um
    <classname>EvTimer</classname>,
    que ainda seria acionado aproximadamente
    <literal>10</literal>
    segundos após iniciá-lo, pois usa um tempo limite relativo).
   </para>
   <para>
    Assim como com os temporizadores, é garantido que o retorno de chamada seja invocado somente quando o
    momento em que ele deveria ser acionado tiver passado. Se vários
    temporizadores ficarem prontos durante a mesma iteração do loop, então aqueles com
    valores de tempo limite anteriores serão invocados antes daqueles com valores de tempo
    limite posteriores (mas isso não é mais verdade quando um retorno de chamada chama
    <methodname>EvLoop::run</methodname>
    recursivamente).
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evperiodic.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvPeriodic</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvPeriodic</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evperiodic.props.offset">offset</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evperiodic.props.interval">interval</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evperiodic')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evperiodic')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvPeriodic properties -->
  <section xml:id="evperiodic.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evperiodic.props.offset">
     <term>
      <varname>offset</varname>
     </term>
     <listitem>
      <para>
       Ao repetir, contém o valor de deslocamento, caso contrário, este é o
       ponto absoluto no tempo (o valor de deslocamento passado para
       <methodname>EvPeriodic::set</methodname>,
       embora
       <emphasis>libev</emphasis>
       possa modificar este valor para melhor estabilidade numérica).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evperiodic.props.interval">
     <term>
      <varname>interval</varname>
     </term>
     <listitem>
      <para>
       O valor do intervalo atual. Pode ser modificado a qualquer momento, mas as alterações só
       terão efeito quando o cronômetro periódico for acionado ou
       <methodname>EvPeriodic::again</methodname>
       estiver sendo chamado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evperiodic;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
