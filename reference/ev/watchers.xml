<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bbfa9738785f054752e6cb565cd0a58e71015bc6 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<chapter  xml:id="ev.watchers" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Observadores</title>
 <para>
  Um observador é um objeto criado para registrar o interesse em algum evento.
  Por exemplo, o código a seguir espera que
  <constant>STDIN</constant>
  se torne legível:
  <programlisting role="php">
<![CDATA[
<?php
// Wait until STDIN is readable
$w = new EvIo(STDIN, Ev::READ, function ($watcher, $revents) {
 echo "STDIN is readable\n";
});
Ev::run(Ev::RUN_ONCE);
?>
]]>
  </programlisting>
 </para>
 <para>
  Todos os construtores de observadores iniciam automaticamente os observadores.
  Os métodos <literal>createStopped</literal>
  criam observadores parados (por exemplo,
  <methodname>EvIo::createStopped</methodname>
  )
 </para>
 <para>
  Observe que um observador será interrompido automaticamente quando o objeto watcher for
  destruído. Portanto, os objetos watcher retornados pelos construtores
  ou métodos de fábrica devem ser mantidos.
 </para>
 <para>
  Observe também que todos os métodos que alteram alguma propriedade do observador (
  <emphasis>set</emphasis>
  ,
  <varname>priority</varname>
  etc.) param automaticamente e iniciam-no novamente se estiver ativo, o que significa que
  os eventos pendentes são perdidos.
 </para>
 <para>
  Veja também:
  <link linkend="ev.watcher-callbacks">Retornos de chamada do observador</link>
  .
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
