<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 33e5f4ef7243bc1282acb1cba93e8f99c1debe68 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<refentry xml:id="evperiodic.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvPeriodic::__construct</refname>
  <refpurpose>Constrói objeto observador EvPeriodic</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier>
   <methodname>EvPeriodic::__construct</methodname>
   <methodparam>
    <type>float</type>
    <parameter>offset</parameter>
   </methodparam>
   <methodparam>
    <type>string</type>
    <parameter>interval</parameter>
   </methodparam>
   <methodparam>
    <type>callable</type>
    <parameter>reschedule_cb</parameter>
   </methodparam>
   <methodparam>
    <type>callable</type>
    <parameter>callback</parameter>
   </methodparam>
   <methodparam
   choice="opt">
    <type>mixed</type>
    <parameter>data</parameter>
    <initializer>&null;</initializer>
   </methodparam>
   <methodparam
   choice="opt">
    <type>int</type>
    <parameter>priority</parameter>
    <initializer>0</initializer>
   </methodparam>
  </constructorsynopsis>
  <para>
   Constrói o objeto observador EvPeriodic e o inicia automaticamente.
   O método <methodname>EvPeriodic::createStopped</methodname>
   cria o observador periódico parado.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>offset</parameter>
    </term>
    <listitem>
     <para>
      Veja
      <link linkend="ev.periodic-modes">Modos de operação do observador periódico</link>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>interval</parameter>
    </term>
    <listitem>
     <para>
      Veja
      <link linkend="ev.periodic-modes">Modos de operação do observador periódico</link>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>reschedule_cb</parameter>
    </term>
    <listitem>
     <para>
      Reprograma retorno de chamada. Você pode passar &null;. Veja
      <link linkend="ev.periodic-modes">Modos de operação do observador
      periódico</link>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>callback</parameter>
    </term>
    <listitem>
     <para>
      Veja
      <link linkend="ev.watcher-callbacks">Retornos de chamada do observador</link>
      .
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>data</parameter>
    </term>
    <listitem>
     <para>
      Dados personalizados associados ao observador.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>priority</parameter>
    </term>
    <listitem>
     <para>
      <link linkend="ev.constants.watcher-pri">Prioridade do observador</link>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;

 <example>
   <title>Temporizador periódico. Usar retorno de chamada de reagendamento</title>
   <programlisting role="php">
<![CDATA[
<?php
// Marca a cada 10,5 segundos

function reschedule_cb ($watcher, $now) {
 return $now + (10.5. - fmod($now, 10.5));
}

$w = new EvPeriodic(0., 0., "reschedule_cb", function ($w, $revents) {
 echo time(), PHP_EOL;
});
Ev::run();
?>

]]>
   </programlisting>
  </example>
  <example>
   <title>Temporizador periódico. Marca a cada 10,5 segundos a partir de agora</title>
   <programlisting role="php">
<![CDATA[
<?php
// Marca a cada 10,5 segundos a partir de agora
$w = new EvPeriodic(fmod(Ev::now(), 10.5), 10.5, NULL, function ($w, $revents) {
 echo time(), PHP_EOL;
});
Ev::run();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Observador de hora em hora</title>
   <programlisting role="php">
<![CDATA[
<?php
$hourly = EvPeriodic(0, 3600, NULL, function () {
 echo "uma vez por hora\n";
});
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <link linkend="ev.periodic-modes">Modos de operação do observador periódico</link>
   </member>
   <member>
    <classname>EvTimer</classname>
   </member>
   <member>
    <methodname>EvPeriodic::createStopped</methodname>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
