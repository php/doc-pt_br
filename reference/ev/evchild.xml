<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<reference xml:id="class.evchild" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>A classe EvChild</title>
 <titleabbrev>EvChild</titleabbrev>
 <partintro>
<!-- {{{ EvChild intro -->
  <section xml:id="evchild.intro">
   &reftitle.intro;
   <para>
    Os observadores <classname>EvChild</classname>
    são acionados quando o processo recebe um
    <constant>SIGCHLD</constant>
    em resposta a algumas mudanças no status do filho (geralmente quando um filho morre
    ou sai). É permitido instalar um
    observador <constant>EvChild</constant>
    após o filho ter sido bifurcado(o que implica que ele já
    pode ter saído), desde que o loop de eventos não seja inserido (ou seja continuado
    a partir de um observador), ou seja, bifurcar e registrar imediatamente um observador
    para o filho é bom, mas bifurcar e registrar um observador algumas iterações
    do loop de eventos mais tarde ou na próxima invocação de retorno de chamada não é.
   </para>
   <para>
    É permitido registrar observadores
    <classname>EvChild</classname>
    no <emphasis>loop padrão</emphasis>
    apenas.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evchild.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvChild</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvChild</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evchild.props.pid">pid</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evchild.props.rpid">rpid</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evchild.props.rstatus">rstatus</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evchild')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evchild')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvChild properties -->
  <section xml:id="evchild.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evchild.props.pid">
     <term>
      <varname>pid</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Somente leitura</emphasis>
       . O ID do processo que este observador observa, ou
       <literal>0</literal>,
       significando qualquer ID de processo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evchild.props.rpid">
     <term>
      <varname>rpid</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Somente leitura</emphasis>
       .O ID do processo que detectou uma alteração de status.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="evchild.props.rstatus">
     <term>
      <varname>rstatus</varname>
     </term>
     <listitem>
      <para>
       <emphasis>Somente leitura</emphasis>
       . O status de saída do processo causado por
       <varname>rpid</varname>
       .
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evchild;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
