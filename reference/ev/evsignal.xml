<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<reference xml:id="class.evsignal" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>A classe EvSignal</title>
 <titleabbrev>EvSignal</titleabbrev>
 <partintro>
<!-- {{{ EvSignal intro -->
  <section xml:id="evsignal.intro">
   &reftitle.intro;
  <para>
    Os observadores <classname>EvSignal</classname>
    irão acionar um evento quando o processo receber um sinal específico
    uma ou mais vezes. Mesmo que os sinais sejam muito assíncronos,
    <emphasis>libev</emphasis>
    tentará o seu melhor para entregar sinais de forma síncrona, ou seja, como parte do
    processamento normal de eventos, como qualquer outro evento.
   </para>
   <para>
    Não há limite para o número de observadores para o mesmo sinal, mas apenas
    dentro do mesmo loop, ou seja, pode-se observar
    <constant>SIGINT</constant>
    no loop padrão e
    <constant>SIGIO</constant>
    em outro loop, mas não é permitido observar
    <constant>SIGINT</constant>
    no loop padrão e em outro loop ao mesmo tempo. No momento,
    <constant>SIGCHLD</constant>
    está permanentemente vinculado ao loop padrão.
   </para>
   <para>
    Se possível e suportado,
    <emphasis>libev</emphasis>
    instalará seus manipuladores com o comportamento
    <literal>SA_RESTART</literal>
    (ou equivalente) habilitado, portanto as chamadas do sistema não devem ser
    interrompidas indevidamente. No caso de um problema com chamadas do sistema sendo interrompidas por
    sinais, todos os sinais podem ser bloqueados em um
    observador <classname>EvCheck</classname>
    e desbloqueados em um
    observador
    <classname>EvPrepare</classname>.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evsignal.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvSignal</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvSignal</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <varname linkend="evsignal.props.signum">signum</varname>
    </fieldsynopsis>
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evsignal')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evsignal')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
<!-- {{{ EvSignal properties -->
  <section xml:id="evsignal.props">
   &reftitle.properties;
   <variablelist>
    <varlistentry xml:id="evsignal.props.signum">
     <term>
      <varname>signum</varname>
     </term>
     <listitem>
      <para>
       Número do sinal. Veja as constantes exportadas pela
       extensão <emphasis>pcntl</emphasis>.
       Veja também
       a página de manual
       <literal>signal(7)</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
<!-- }}} -->
 </partintro>

 &reference.ev.entities.evsignal;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
