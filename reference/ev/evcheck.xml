<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<reference xml:id="class.evcheck" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>A classe EvCheck</title>
 <titleabbrev>EvCheck</titleabbrev>
 <partintro>
<!-- {{{ EvCheck intro -->
  <section xml:id="evcheck.intro">
   &reftitle.intro;
   <para>
    Os observadores <classname>EvPrepare</classname>
    e
    <classname>EvCheck</classname>
    são geralmente usados em pares.
    Os observadores <classname>EvPrepare</classname>
    são invocados antes do bloqueio do processo,
    <classname>EvCheck</classname>
    depois.
   </para>
   <para>
    Não é permitido chamar
    <methodname>EvLoop::run</methodname>
    ou métodos ou funções similares que entrem no loop de eventos atual dos
    observadores
    <classname>EvPrepare</classname>
    ou
    <classname>EvCheck</classname>.
    Outros loops além do atual são adequados, entretanto. A
    lógica por trás disso é que não é necessário verificar a recursão
    nesses observadores, ou seja, a sequência será sempre:
   <classname>EvPrepare</classname>
   -&gt; bloqueando -&gt;
   <classname>EvCheck</classname>,
   portanto, tendo um observador de cada tipo, eles sempre serão chamados em pares,
   colocando entre colchetes a chamada de bloqueio.
   </para>
   <para>
    O objetivo principal é integrar outros mecanismos de eventos no
    <emphasis>libev</emphasis>
    e seu uso está um tanto avançado. Eles poderiam ser usados, por exemplo, para
    rastrear alterações de variáveis, implementar observadores personalizados, integrar net-snmp ou uma
    biblioteca de corrotinas e muito mais. Ocasionalmente, eles também são úteis para
    armazenar alguns dados em cache e deseja liberá-los antes de bloqueá-los.
   </para>
   <para>
    É recomendado dar aos observadores
    <classname>EvCheck</classname>
    a prioridade mais alta (
     <constant>Ev::MAXPRI</constant>),
     para garantir que eles estejam sendo executados antes de qualquer outro observador
     após o poll (isso não importa para
     observadores
     <classname>EvPrepare</classname>).
   </para>
   <para>
    Além disso,
    os observadores do <classname>EvCheck</classname>
    não devem ativar/alimentar eventos. Embora
    <emphasis>libev</emphasis>
    suporte totalmente isso, eles podem ser executados antes que outros
    observadores <classname>EvCheck</classname>
    façam seu trabalho.
   </para>
  </section>
<!-- }}} -->
  <section xml:id="evcheck.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass>
     <classname>EvCheck</classname>
    </ooclass>
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>EvCheck</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>EvWatcher</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
<!--<classsynopsisinfo role="comment">&Properties;</classsynopsisinfo>-->
    <classsynopsisinfo role="comment">&InheritedProperties;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('evwatcher.synopsis')/descendant::db:fieldsynopsis)" />
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evcheck')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])"/>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evcheck')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])"/>
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.evwatcher')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->
  </section>
 </partintro>

 &reference.ev.entities.evcheck;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
