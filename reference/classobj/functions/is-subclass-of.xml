<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: c44475e1fafcbee203ed4935a6d5d7a01379fcdc Maintainer: felipe Status: ready --><!-- CREDITS: surfmax, adiel, leonardolara -->
<refentry xml:id="function.is-subclass-of" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_subclass_of</refname>
  <refpurpose>Verifica se o objeto tem esta classe como uma de suas classes pai</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_subclass_of</methodname>
   <methodparam><type>mixed</type><parameter>object_or_class</parameter></methodparam>
   <methodparam><type>string</type><parameter>class</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>allow_string</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Verifica se <parameter>object_or_class</parameter> informado tem a classe
   <parameter>class</parameter> como uma de suas classes pai ou o/a implementa.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object_or_class</parameter></term>
     <listitem>
      <para>
       O nome da classe ou um instância do objeto. Nenhum erro é gerado se a classe não existir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class</parameter></term>
     <listitem>
      <para>
       O nome da classe
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allow_string</parameter></term>
     <listitem>
      <para>
       Se este parâmetro for definido para falso, nome de classe em string no parâmetro <parameter>object_or_class</parameter>
       não será permitido. Isto também evita chamada ao carregamento automático se a classe não existir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta função retorna &true; se o objeto <parameter>object_or_class</parameter>,
   pertencer a uma classe que é uma subclasse de
   <parameter>class</parameter>, &false; caso contrário.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>is_subclass_of</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// define uma classe
class WidgetFactory
{
  var $oink = 'moo';
}

// define uma classe filha
class WidgetFactory_Child extends WidgetFactory
{
  var $oink = 'oink';
}

// cria um novo objeto
$WF = new WidgetFactory();
$WFC = new WidgetFactory_Child();

if (is_subclass_of($WFC, 'WidgetFactory')) {
  echo "sim, \$WFC é uma subclasse de WidgetFactory\n";
} else {
  echo "não, \$WFC não é uma subclasse de WidgetFactory\n";
}


if (is_subclass_of($WF, 'WidgetFactory')) {
  echo "sim, \$WF é uma subclasse de WidgetFactory\n";
} else {
  echo "não, \$WF não é uma subclasse de WidgetFactory\n";
}


if (is_subclass_of('WidgetFactory_Child', 'WidgetFactory')) {
  echo "sim, WidgetFactory_Child é uma subclasse de WidgetFactory\n";
} else {
  echo "não, WidgetFactory_Child não é uma subclasse de WidgetFactory\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
sim, $WFC é uma subclasse de WidgetFactory
não, $WF não é uma subclasse de WidgetFactory
sim, WidgetFactory_Child é uma subclasse de WidgetFactory
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de <function>is_subclass_of</function> usando interface</title>
    <programlisting role="php">
<![CDATA[
<?php
// Define a Interface
interface MyInterface
{
  public function MyFunction();
}

// Define a implementação de classe da interface
class MyClass implements MyInterface
{
  public function MyFunction()
  {
    return "MyClass Implementa MyInterface!";
  }
}

// Instancia o objeto object
$my_object = new MyClass;

// Funciona desde 5.3.7

// Teste usando a instância do objeto da classe
if (is_subclass_of($my_object, 'MyInterface')) {
  echo "Sim, \$my_object é uma subclasse de MyInterface\n";
} else {
  echo "No, \$my_object não é uma subclasse de MyInterface\n";
}

// Teste usando a string do nome da classe
if (is_subclass_of('MyClass', 'MyInterface')) {
  echo "Sim, MyClass é uma subclasse de MyInterface\n";
} else {
  echo "No, MyClass não é uma subclasse de MyInterface\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Sim, $my_object é uma subclasse de MyInterface
Sim, MyClass é uma subclasse de MyInterface
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.uses-autoload;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>get_parent_class</function></member>
    <member><function>is_a</function></member>
    <member><function>class_parents</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
