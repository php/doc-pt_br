<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9e0f03ac354d797d1d16c0fcc1663e5e170f2727 Maintainer: adiel Status: ready -->

<refentry xml:id="pdo.sqlitecreatefunction" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::sqliteCreateFunction</refname>
  <refpurpose>
   Registra uma Função Definida pelo Usuário para uso em declarações SQL
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PDO::sqliteCreateFunction</methodname>
   <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>num_args</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  &warn.experimental.func;

  <para>
   Este método permite registrar uma função PHP com o SQLite como uma
   <acronym>UDF</acronym> (Função Definida pelo Usuário), para que possa ser
   chamada a partir das declarações SQL.
  </para>
  <para>
   A UDF pode ser usada em qualquer declaração SQL que possa chamar funções,
   como declarações SELECT e UPDATE e também em triggers.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function_name</parameter></term>
     <listitem>
      <para>
       O nome da função usada nas declarações SQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Função callback para tratar a função SQL definida.
      </para>
      <note>
       <simpara>
        As funções callback devem retornar um tipo reconhecido pelo SQLite
        (ou seja, um
        <link linkend="language.types.intro">tipo escalar</link>).
       </simpara>
      </note>
      <para>
       Esta função precisa ser definida como:
       <methodsynopsis>
        <type>mixed</type><methodname><replaceable>callback</replaceable></methodname>
        <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
        <methodparam rep="repeat"><type>mixed</type><parameter>values</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>value</parameter></term>
         <listitem>
          <para>
           O primeiro argumento passado para a função SQL.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>values</parameter></term>
         <listitem>
          <para>
           Argumentos adicionais passados para a função SQL.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>num_args</parameter></term>
     <listitem>
      <para>
       O número de argumentos que a função SQL utiliza.
       Se este parâmetro for <literal>-1</literal>, então a função SQL poderá
       receber qualquer número de argumentos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Uma conjunção bit a bit de flags.
       Atualmente, apenas <constant>PDO::SQLITE_DETERMINISTIC</constant> é
       suportada, o que especifica que a função sempre retorna o mesmo resultado
       dadas as mesmas entradas em uma única instrução SQL.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.1.4</entry>
      <entry>
       O parâmetro <parameter>flags</parameter> foi adicionado.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>PDO::sqliteCreateFunction</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function md5_and_reverse($string)
{
    return strrev(md5($string));
}

$db = new PDO('sqlite:sqlitedb');
$db->sqliteCreateFunction('md5rev', 'md5_and_reverse', 1);
$rows = $db->query('SELECT md5rev(filename) FROM files')->fetchAll();
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Neste exemplo, existe uma função que calcula a soma md5 de uma string e
   depois a inverte.
   Quando a instrução SQL é executada, ela retorna o valor do nome do arquivo
   transformado pela função.
   Os dados retornados em <literal>$rows</literal> contêm o resultado
   processado.
  </para>
  <para>
   A beleza desta técnica é que não é necessário processar o resultado usando um
   laço &foreach; após os dados terem sido consultados.
  </para>
  <tip>
   <para>
    <xref linkend="pdo.sqlitecreatefunction" />
    e
    <xref linkend="pdo.sqlitecreateaggregate" />
    podem ser usados para substituir funções SQL nativas do SQLite.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="pdo.sqlitecreateaggregate" /></member>
    <member><function>sqlite_create_function</function></member>
    <member><function>sqlite_create_aggregate</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
