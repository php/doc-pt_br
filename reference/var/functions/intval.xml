<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 18c4f78a828232c909056490ccf0a858d002e6ef Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.intval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>intval</refname>
  <refpurpose>Obtém o valor em número inteiro de uma variável</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>intval</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter><initializer>10</initializer></methodparam>
  </methodsynopsis>
  <para>
   Retorta o valor do tipo <type>int</type> do parâmetro <parameter>value</parameter>,
   usando a <parameter>base</parameter> especificada para a conversão
   (o padrão é base 10). <function>intval</function> não deve ser usada
   em objetos, se isto for feito emitirá um erro de nível <constant>E_WARNING</constant> e
   retornará 1.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       O valor escalar a ser convertido para um número inteiro
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base</parameter></term>
     <listitem>
      <para>
       A base para conversão
      </para>
      <note>
       <para>
        Se <parameter>base</parameter> for 0, a base usada será determinada
        pelo formado de <parameter>value</parameter>:
        <itemizedlist>
         <listitem>
          <simpara>
           se a string incluir um prefixo "0x" (ou "0X"), a base será
           16 (hexadecimal); senão,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           se a string começar com um "0b" (ou "0B"), a base será
           2 (binária); senão,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           sea string começar com "0", a base será 8 (octal);
           senão,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           a base será 10 (decimal).
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   O valor inteiro de <parameter>value</parameter> em caso de sucesso ou 0 em
   caso de falhar. Arrays vazios retornam 0, arrays não vazios retornam 1.
  </para>
  <para>
   O valor máximo depende do sistema. Sistemas de 32 bits têm uma
   faixa inteiros com sinal de -2147483648 to 2147483647. Então, por exemplo,
   em um sistema desses, <literal>intval('1000000000000')</literal> retornará
   2147483647. O máximo inteiro com sinal para sistemas de 64 bits é
   9223372036854775807.
  </para>
  <para>
   Strings na maior parte das vezes retornarão 0 embora isso dependa do caractere mais
   à esquerda dele da string. As regras comuns à
   <link linkend="language.types.integer.casting">conversão para inteiros</link>
   se aplicam.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       O nível de erro na conversão de objeto mudou de <constant>E_NOTICE</constant> para <constant>E_WARNING</constant>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplos de <function>intval</function></title>
    <para>
     Os seguintes exemplos são baseados em um sistema de 64 bits.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
echo intval(42);                      // 42
echo intval(4.2);                     // 4
echo intval('42');                    // 42
echo intval('+42');                   // 42
echo intval('-42');                   // -42
echo intval(042);                     // 34
echo intval('042');                   // 42
echo intval(1e10);                    // 10000000000
echo intval('1e10');                  // 10000000000
echo intval(0x1A);                    // 26
echo intval('0x1A');                  // 0
echo intval('0x1A', 0);               // 26
echo intval(42000000);                // 42000000
echo intval(420000000000000000000);   // -4275113695319687168
echo intval('420000000000000000000'); // 9223372036854775807
echo intval(42, 8);                   // 42
echo intval('42', 8);                 // 34
echo intval(array());                 // 0
echo intval(array('foo', 'bar'));     // 1
echo intval(false);                   // 0
echo intval(true);                    // 1
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    O parâmetro <parameter>base</parameter> não terá efeito a menos que o
    parâmetro <parameter>value</parameter> seja uma string.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>boolval</function></member>
    <member><function>floatval</function></member>
    <member><function>strval</function></member>
    <member><function>settype</function></member>
    <member><function>is_numeric</function></member>
    <member><link linkend="language.types.type-juggling">Manipulação de Tipos</link></member>
    <member><link linkend="ref.bc">BCMath Funções Matemáticas de Precisão Arbitrária</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
