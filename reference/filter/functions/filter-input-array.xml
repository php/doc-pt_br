<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: de9c65c91ff1710d8b2d2ec955caea0162679305 Maintainer: leonardolara Status: ready --><!-- CREDITS: felipe,leonardolara -->
<refentry xml:id="function.filter-input-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filter_input_array</refname>
  <refpurpose>Obtem variáveis externas e opcionalmente as filtra</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type><type>null</type></type><methodname>filter_input_array</methodname>
   <methodparam><type>int</type><parameter>type</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type></type><parameter>options</parameter><initializer><constant>FILTER_DEFAULT</constant></initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>add_empty</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta função é útil para receber muitos valores sem repetidamente
   chamar a função <function>filter_input</function>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Uma das constantes <constant>INPUT_GET</constant>, <constant>INPUT_POST</constant>,
       <constant>INPUT_COOKIE</constant>, <constant>INPUT_SERVER</constant> ou
       <constant>INPUT_ENV</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Um array definindo os argumentos. Uma chave válida é uma <type>string</type>
       contendo um nome da variável, e um valor válido é um <link
       linkend="filter.filters">tipo de filtro</link>, ou um <type>array</type>
       opcionalmente especificando o filtro, marcas e opções. Se o valor for um
       array, chaves válidas são <literal>filter</literal> que especifica o
       <link linkend="filter.filters">tipo de filtro</link>,
       <literal>flags</literal> que especifica quaisquer marcas que se aplicam ao
       filtro, e <literal>options</literal> que especifica quaisquer opções
       que serão aplicadas ao filtro. Veja os exemplos abaixo para um melhor entendimento.
      </para>
      <para>
       Este parâmetro pode ser também um inteiro contendo uma <link
       linkend="filter.constants">constante de filtro</link>. Desta forma, todos os valores no
       array de entrada serão filtradas por este filtro.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>add_empty</parameter></term>
     <listitem>
      <para>
       Adiciona chaves faltantes como &null; ao valor de retorno.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Um array contendo os valores das variáveis requisitads em caso de sucesso.
   Se o array de entrada designado por <parameter>type</parameter> não for preenchido,
   a função retorna &null; se a marca <constant>FILTER_NULL_ON_FAILURE</constant>
   não for fornecida, ou &false; caso contrário. Para outras falhas, &false; é retornado.
  </para>
  <para>
   Um valor de array será &false; se o filtro falhar, ou &null; se
   a variável não estiver definida. Ou, se a marca <constant>FILTER_NULL_ON_FAILURE</constant>
   for usada, a função retorna &false; se a variável não estiver definida e &null; se o filtro
   falhar. Se o parâmetro <parameter>add_empty</parameter> for &false;, nenhum elemento
   de array será adicionado para variáveis não definidas.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um exemplo da <function>filter_input_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php

/* dados realmente vieram de POST
$_POST = array(
    'product_id' => 'libgd<script>',
    'component'  => array('10'),
    'version'    => '2.0.33',
    'testarray'  => array('2', '23', '10', '12'),
    'testscalar' => '2',
);
*/

$args = array(
    'product_id'   => FILTER_SANITIZE_ENCODED,
    'component'    => array('filter'    => FILTER_VALIDATE_INT,
                            'flags'     => FILTER_REQUIRE_ARRAY,
                            'options'   => array('min_range' => 1, 'max_range' => 10)
                           ),
    'version'     => FILTER_SANITIZE_ENCODED,
    'doesnotexist' => FILTER_VALIDATE_INT,
    'testscalar'   => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_SCALAR,
                           ),
    'testarray'    => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_ARRAY,
                           )

);

$myinputs = filter_input_array(INPUT_POST, $args);

var_dump($myinputs);
echo "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(6) {
  ["product_id"]=>
  string(17) "libgd%3Cscript%3E"
  ["component"]=>
  array(1) {
    [0]=>
    int(10)
  }
  ["version"]=>
  string(6) "2.0.33"
  ["doesnotexist"]=>
  NULL
  ["testscalar"]=>
  int(2)
  ["testarray"]=>
  array(4) {
    [0]=>
    int(2)
    [1]=>
    int(23)
    [2]=>
    int(10)
    [3]=>
    int(12)
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Não existe a chave <literal>REQUEST_TIME</literal> no
    array <constant>INPUT_SERVER</constant> porque ela será inserida na variável
    <varname>$_SERVER</varname> mais tarde.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>filter_input</function></member>
    <member><function>filter_var_array</function></member>
    <member><xref linkend="filter.filters"/></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
