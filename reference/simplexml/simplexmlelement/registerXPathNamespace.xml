<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 770c6facae667218f69c8ea2715ea20f6fab32f3 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: rafael, fabioluciano, fernandowobeto -->
<refentry xml:id="simplexmlelement.registerxpathnamespace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::registerXPathNamespace</refname>
  <refpurpose>
   Cria um prefixo/namespace de contexto para a próxima consulta XPath
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SimpleXMLElement">
   <modifier>public</modifier> <type>bool</type><methodname>SimpleXMLElement::registerXPathNamespace</methodname>
   <methodparam><type>string</type><parameter>prefix</parameter></methodparam>
   <methodparam><type>string</type><parameter>namespace</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cria um prefixo/namespace de contexto para a próxima consulta XPath. Basicamente, esta
   função será útil se o provedor do documento XML informado, altera os
   prefixos dos namespaces. <literal>registerXPathNamespace</literal> criará um prefixo para o
   namespace associado, permitindo o acesso a nós no namespace
   sem a necessidade de mudar o código para permitir novos prefixos ditados pelo
   provedor.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       O prefixo do namespace utilizado na consulta XPath para o namespace dado em
       <parameter>namespace</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>namespace</parameter></term>
     <listitem>
      <para>
       O namespace para ser utilizado na consulta XPath. Este parâmetro deve fechar com um
       namespace utilizado pelo documento XML ou a consulta XPath utilizando
       <parameter>prefix</parameter> não retornará nenhum resultado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Definindo um prefixo de namespace para ser usado em uma consulta XPath</title>
    <programlisting role="php">
<![CDATA[
<?php

$xml = <<<EOD
<book xmlns:chap="http://example.org/chapter-title">
    <title>My Book</title>
    <chapter id="1">
        <chap:title>Chapter 1</chap:title>
        <para>Donec velit. Nullam eget tellus vitae tortor gravida scelerisque.
            In orci lorem, cursus imperdiet, ultricies non, hendrerit et, orci.
            Nulla facilisi. Nullam velit nisl, laoreet id, condimentum ut,
            ultricies id, mauris.</para>
    </chapter>
    <chapter id="2">
        <chap:title>Chapter 2</chap:title>
        <para>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin
            gravida. Phasellus tincidunt massa vel urna. Proin adipiscing quam
            vitae odio. Sed dictum. Ut tincidunt lorem ac lorem. Duis eros
            tellus, pharetra id, faucibus eu, dapibus dictum, odio.</para>
    </chapter>
</book>
EOD;

$sxe = new SimpleXMLElement($xml);

$sxe->registerXPathNamespace('c', 'http://example.org/chapter-title');
$result = $sxe->xpath('//c:title');

foreach ($result as $title) {
    echo $title . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Chapter 1
Chapter 2
]]>
    </screen>
    <para>
     Perceba como como o documento XML mostrado no exemplo define o namespace com o
     prefixo de <literal>chap</literal>. Imagine que este documento (ou outro semelhante)
     deveria ter utilizado o prefixo de <literal>c</literal> no passado para o mesmo
     namespace. Uma vez que ele foi alterado, a consulta XPath não irá mais
     retornar os resultados apropriados e a consulta exigirá modificações. Utilizando
     <literal>registerXPathNamespace</literal> evita modificações futuras na consulta, mesmo
     que o provedor altere o prefixo dos namespaces.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SimpleXMLElement::xpath</methodname></member>
    <member><methodname>SimpleXMLElement::getDocNamespaces</methodname></member>
    <member><methodname>SimpleXMLElement::getNamespaces</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
