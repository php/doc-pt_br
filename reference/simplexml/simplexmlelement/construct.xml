<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 117197a7a498ea77058aed63db11c6d444e119a8 Maintainer: fabioluciano Status: ready --><!-- CREDITS: amandavale, fabioluciano -->
<refentry xml:id="simplexmlelement.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::__construct</refname>
  <refpurpose>
   Cria um novo objeto SimpleXMLElement
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="SimpleXMLElement">
   <modifier>final</modifier> <modifier>public</modifier> <methodname>SimpleXMLElement::__construct</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>data_is_url</parameter><initializer>false</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>ns</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>is_prefix</parameter><initializer>false</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Cria um novo objeto <classname>SimpleXMLElement</classname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Uma string XML bem formada ou, um caminho ou URL para um documento XML se
       <parameter>data_is_url</parameter> for &true;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Opcionalmente utilizado para especificar <link
        linkend="libxml.constants">parâmetros adicionais da Libxml</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data_is_url</parameter></term>
     <listitem>
      <para>
       Por padrão, <parameter>data_is_url</parameter> é &false;. Utilize &true;
       para especificar que o parâmetro <parameter>data</parameter> é um caminho ou URL
       para um documento XML ao invés de <type>string</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ns</parameter></term>
     <listitem>
      <para>
       Prefixo ou URI do namespace.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_prefix</parameter></term>
     <listitem>
      <para>
       &true; se <parameter>ns</parameter> é um prefixo, &false; se é uma URI;
       o padrão será &false;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um objeto <type>SimpleXMLElement</type> representando
   <parameter>data</parameter>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Produz uma mensagem de erro <constant>E_WARNING</constant> para cada erro
   encontrado nos dados do XML e, adicionalmente, dispara uma <classname>Exception</classname> se as informações no XML
   não puderem ser interpretadas.
  </para>
  <tip>
   <para>
    Utilize a função <function>libxml_use_internal_errors</function> para suprimir todos os erros
    XML, e a função <function>libxml_get_errors</function> para iterá-los,
    depois.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <note>
    <para>
     Os exemplos listados podem incluir o arquivo <literal>example.php</literal>,
     que referem-se a uma string XML encontrada no primeiro exemplo
     do guia de <link linkend="simplexml.examples-basic">uso básico</link>.
    </para>
   </note>
   <example>
    <title>Cria um objeto SimpleXMLElement</title>
    <programlisting role="php">
<![CDATA[
<?php

include 'example.php';

$sxe = new SimpleXMLElement($xmlstr);
echo $sxe->movie[0]->title;

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PHP: Behind the Parser
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Cria um objeto SimpleXMLElement de uma URL</title>
    <programlisting role="php">
<![CDATA[
<?php

$sxe = new SimpleXMLElement('http://example.org/document.xml', NULL, TRUE);
echo $sxe->asXML();

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.0</entry>
       <entry>Adicionado os parâmetros <parameter>ns</parameter> e <parameter>is_prefix</parameter>.</entry>
      </row>
      <row>
       <entry>5.1.2</entry>
       <entry>Adicionado os parâmetros <parameter>options</parameter> e <parameter>data_is_url</parameter>.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="simplexml.examples-basic"/></member>
    <member><function>simplexml_load_string</function></member>
    <member><function>simplexml_load_file</function></member>
    <member><xref linkend="simplexml.examples-errors" /></member>
    <member><function>libxml_use_internal_errors</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
