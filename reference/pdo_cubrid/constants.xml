<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 14af302c9c0e561fa6f9cdd956268758ba9a89c5 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<section xml:id="pdo-cubrid.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &pdo.driver-constants;
  <para>
   The following constants can be used when setting the database attribute.
   They can be passed to <function>PDO::getAttribute</function> or
   <function>PDO::setAttribute</function>.
  <table>
   <title>PDO::CUBRID attribute flags</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Constant</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PDO::CUBRID_ATTR_ISOLATION_LEVEL</entry>
       <entry>Transaction isolation level for the database connection.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_ATTR_LOCK_TIMEOUT</entry>
       <entry>Transaction timeout in seconds.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_ATTR_MAX_STRING_LENGTH</entry>
       <entry>Read only. The maximum string length for bit, varbit, char,
        varchar, nchar, nchar varying data types when using CUBRID PDO
        API.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  <para>
   The following constants can be used when setting the transaction isolation
   level. They can be passed to <function>PDO::getAttribute</function> or
   returned by <function>PDO::setAttribute</function>.
  <table>
   <title>PDO::CUBRID isolation level flags</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Constant</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PDO::TRAN_COMMIT_CLASS_UNCOMMIT_INSTANCE</entry>
       <entry>The lowest isolation level (1). A dirty, non-repeatable or
        phantom read may occur for the tuple and a non-repeatable read may
        occur for the table as well.</entry>
      </row>
      <row>
       <entry>PDO::TRAN_COMMIT_CLASS_COMMIT_INSTANCE</entry>
       <entry>A relatively low isolation level (2). A dirty read does not
        occur, but non-repeatable or phantom read may occur.</entry>
      </row>
      <row>
       <entry>PDO::TRAN_REP_CLASS_UNCOMMIT_INSTANCE</entry>
       <entry>The default isolation of CUBRID (3). A dirty, non-repeatable or
        phantom read may occur for the tuple, but repeatable read is ensured
        for the table.</entry>
      </row>
      <row>
       <entry>PDO::TRAN_REP_CLASS_COMMIT_INSTANCE</entry>
       <entry>A relatively low isolation level (4). A dirty read does not
        occur, but non-repeatable or phantom read may.</entry>
      </row>
      <row>
       <entry>PDO::TRAN_REP_CLASS_REP_INSTANCE</entry>
       <entry>A relatively high isolation level (5). A dirty or non-repeatable
       read does not occur, but a phantom read may.</entry>
      </row>
      <row>
       <entry>PDO::TRAN_SERIALIZABLE</entry>
       <entry>The highest isolation level (6). Problems concerning concurrency
       (e.g. dirty read, non-repeatable read, phantom read, etc.) do not
       occur.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  <para>
   The following constants can be used when getting schema information. They
   can be passed to <function>PDO::cubrid_schema</function>.
  <table>
   <title>PDO::CUBRID schema flags</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Constant</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PDO::CUBRID_SCH_TABLE</entry>
       <entry>Get name and type of table in CUBRID.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_VIEW</entry>
       <entry>Get name and type of view in CUBRID.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_QUERY_SPEC</entry>
       <entry>Get the query definition of view.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_ATTRIBUTE</entry>
       <entry>Get the attributes of table column.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_TABLE_ATTRIBUTE</entry>
       <entry>Get the attributes of table.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_METHOD</entry>
       <entry>Get the instance method. The instance method is a method called
       by a class instance. It is used more often than the class method
       because most operations are executed in the instance.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_TABLE_METHOD</entry>
       <entry>Get the class method. The class method is a method called by a
        class object. It is usually used to create a new class instance or to
        initialize it. It is also used to access or update class
        attributes.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_METHOD_FILE</entry>
       <entry>Get the information of the file where the method of the table is
        defined.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_SUPER_TABLE</entry>
       <entry>Get the name and type of table which table inherites attributes
        from.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_SUB_TABLE</entry>
       <entry>Get the name and type of table which inherites attributes from
        this table.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_CONSTRAINT</entry>
       <entry>Get the table constraints.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_TRIGGER</entry>
       <entry>Get the table triggers.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_TABLE_PRIVILEGE</entry>
       <entry>Get the privilege information of table.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_COL_PRIVILEGE</entry>
       <entry>Get the privilege information of column.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_DIRECT_SUPER_TABLE</entry>
       <entry>Get the direct super table of table.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_PRIMARY_KEY</entry>
       <entry>Get the table primary key.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_IMPORTED_KEYS</entry>
       <entry>Get imported keys of table.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_EXPORTED_KEYS</entry>
       <entry>Get exported keys of table.</entry>
      </row>
      <row>
       <entry>PDO::CUBRID_SCH_CROSS_REFERENCE</entry>
       <entry>Get reference relationship of tow tables.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
