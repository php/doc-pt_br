<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: felipe Status: ready -->
<refentry xml:id="function.call-user-func" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>call_user_func</refname>
  <refpurpose>Chama uma função de usuário dada pelo primeiro parâmetro</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>call_user_func</methodname>
   <methodparam><type>callback</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Chama uma dada função definida pelo usuário pelo parâmetro
   <parameter>function</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       A função a ser chamada. Métodos de classe podem também ser invocados
       estaticamente usando esta função passando
       <literal>array($classname, $methodname)</literal> para este parâmetro.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
       Zero ou mais parâmetros a ser passado para a função.
      </para>
      <note>
       <para>
         Note que os parâmetros para <function>call_user_func</function> não 
         são passado por referência.
        <informalexample>
         <programlisting role="php">
<![CDATA[
<?php
function increment(&$var)
{
    $var++;
}

$a = 0;
call_user_func('increment', $a);
echo $a; // 0

call_user_func_array('increment', array(&$a)); // Você pode também usar assim
echo $a; // 1
?>
]]>
         </programlisting>
        </informalexample>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
    <para>
     Retorna o resultado da função, ou &false; em erro.
    </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo da <function>call_user_func</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function barber($type)
{
    echo "You wanted a $type haircut, no problem";
}
call_user_func('barber', "mushroom");
call_user_func('barber', "shave");
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Usando <function>call_user_func</function> com nome do namespace</title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo {
    static public function test() {
        print "Hello world!\n";
    }
}

call_user_func(__NAMESPACE__ .'::Foo::test'); // A partir do PHP 5.3.0
// Hello world!
call_user_func(array(__NAMESPACE__ .'::Foo', 'test')); // A partir do PHP 5.3.0
// Hello world!

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Usando um método da classe</title>
    <programlisting role="php">
<![CDATA[
<?php

class myclass {
  static function say_hello()
  {
    echo "Hello!\n";
  }
}

$classname = "myclass";

call_user_func(array($classname,'say_hello'));
call_user_func($classname .'::say_hello'); // A partir do 5.2.3

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func_array</function></member>
    <member><function>is_callable</function></member>
    <member><link linkend="functions.variable-functions">Variable functions</link></member>
    <member><methodname>ReflectionFunction::invoke</methodname></member>
    <member><methodname>ReflectionMethod::invoke</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
