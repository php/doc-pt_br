<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8e31067f1aa8fa219cc1de11abb26ab81e5a2be0 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.pcntl-waitid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pcntl_waitid</refname>
  <refpurpose>Aguarda que um processo filho mude de estado</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pcntl_waitid</methodname>
   <methodparam choice="opt"><type>int</type><parameter>idtype</parameter><initializer><constant>P_ALL</constant></initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>id</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">info</parameter><initializer>[]</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>WEXITED</constant></initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">resource_usage</parameter><initializer>[]</initializer></methodparam>
  </methodsynopsis>
  <para>
   Obtém informações de status referentes a eventos de término, parada e/ou continuação
   em um dos processos filhos do chamador.
  </para>

  <para>
   A menos que o sinalizador <constant>WNOHANG</constant> seja passado, o processo de chamada ficará
   bloqueado até que ocorra um erro ou informações de status fiquem
   disponíveis, satisfazendo todos os seguintes:
   <itemizedlist>
    <listitem>
     <simpara>
      As informações de status são de um dos processos filhos no conjunto de
      processos filhos especificados pelos argumentos <parameter>idtype</parameter> e
      <parameter>id</parameter>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      A mudança de estado nas informações de status corresponde a um dos sinalizadores de mudança de estado
      definidos no argumento <parameter>flags</parameter>.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Se informações de status correspondentes estiverem disponíveis antes da chamada a
   <function>pcntl_waitid</function>, o retorno será imediato. Se informações
   de status correspondentes estiverem disponíveis para dois ou mais processos filhos, a ordem
   em que seus status são relatados não é especificada.
  </para>

  <note>
   <para>
    Esta documentação abrange a especificação POSIX da
    função <literal>waitid</literal>, juntamente com alguns parâmetros adicionais
    específicos para implementações em Linux, NetBSD e FreeBSD. Consulte a
    página de manual <literal>waitid(2)</literal> do sistema operacional para obter detalhes específicos sobre
    como <literal>waitid</literal> funciona.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>idtype</parameter></term>
    <term><parameter>id</parameter></term>
    <listitem>
     <simpara>
      Os argumentos <parameter>idtype</parameter> e <parameter>id</parameter>
      são usados ​​para especificar quais filhos esperar.
     </simpara>
     <table>
      <title>Padrão POSIX para argumentos <parameter>idtype</parameter> e <parameter>id</parameter></title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Se <parameter>idtype</parameter> for <literal>P_ALL</literal></entry>
         <entry>
          espera por qualquer processo filho, <parameter>id</parameter> é ignorado.
         </entry>
        </row>
        <row>
         <entry>Se <parameter>idtype</parameter> for <literal>P_PID</literal></entry>
         <entry>
          espera pelo processo filho com ID de processo igual a <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>Se <parameter>idtype</parameter> for <literal>P_PGID</literal></entry>
         <entry>
          espera por qualquer processo filho com ID de grupo de processo igual a <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Argumentos <parameter>idtype</parameter> e <parameter>id</parameter> específicos para Linux</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>Se <parameter>idtype</parameter> for <literal>P_PIDFD</literal> (desde o Linux 5.4)</entry>
         <entry>
          espera pelo processo filho referido pelo descritor de arquivo PID especificado em
          <parameter>id</parameter>.
          (Consulte a página de manual do Linux <literal>pidfd_open(2)</literal> para obter mais
          informações sobre descritores de arquivo PID.)
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Argumentos <parameter>idtype</parameter> e <parameter>id</parameter> específicos do NetBSD e FreeBSD</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Se <parameter>idtype</parameter> for <literal>P_UID</literal>
         </entry>
         <entry>
          aguarda processos cujo ID de usuário efetivo seja igual a
          <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Se <parameter>idtype</parameter> for <literal>P_GID</literal>
         </entry>
         <entry>
          aguarda processos cujo ID de grupo efetivo seja igual a
          <parameter>id</parameter>.
         </entry>
        </row>
        <row>
         <entry>
          Se <parameter>idtype</parameter> for <literal>P_SID</literal>
         </entry>
         <entry>
          aguarda processos cujo ID de sessão seja igual a
          <parameter>id</parameter>.
          Se o processo filho iniciou sua própria sessão, seu ID de sessão será
          o mesmo que seu ID de processo. Caso contrário, o ID de sessão de um processo
          filho corresponderá ao ID de sessão do chamador.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>Argumentos <parameter>idtype</parameter> e <parameter>id</parameter> específicos do FreeBSD</title>
      <tgroup cols="2">
       <tbody>
        <row>
         <entry>
          Se <parameter>idtype</parameter> for <literal>P_JAILID</literal>
         </entry>
         <entry>
          aguarda processos dentro de uma "jail" cujo identificador de "jail" seja igual a
          <parameter>id</parameter>.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>info</parameter></term>
    <listitem>
     <para>
      O parâmetro <parameter>info</parameter> é definido como um array
      contendo informações sobre o sinal.
     </para>
     <para>
      O array <parameter>info</parameter> pode conter as seguintes chaves:
      <simplelist>
       <member><literal>signo</literal>: Número do sinal</member>
       <member><literal>errno</literal>: Número do erro do sistema</member>
       <member><literal>code</literal>: Código do sinal</member>
       <member><literal>status</literal>: Valor ou sinal de saída</member>
       <member><literal>pid</literal>: ID do processo que envia</member>
       <member><literal>uid</literal>: ID do usuário real do processo que envia</member>
       <member><literal>utime</literal>: Tempo do usuário consumido</member>
       <member><literal>stime</literal>: Tempo do sistema consumido</member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
     <para>
      O valor de <parameter>flags</parameter> é o valor de zero ou mais das
      seguintes constantes combinadas com OR:
      <table>
       <title>Valores possíveis para <parameter>flags</parameter></title>
       <tgroup cols="2">
        <tbody>
         <row>
          <entry><constant>WCONTINUED</constant></entry>
          <entry>
           O status deve ser retornado para qualquer processo filho continuado cujo
           status não tenha sido relatado desde que continuou a partir de uma parada
           de controle de tarefa ou tenha sido relatado apenas por chamadas a
           <function>pcntl_waitid</function> com o
           sinalizador <constant>WNOWAIT</constant> definido.
          </entry>
         </row>
         <row>
          <entry><constant>WEXITED</constant></entry>
          <entry>
           Aguarda processos que foram encerrados.
          </entry>
         </row>
         <row>
          <entry><constant>WNOHANG</constant></entry>
          <entry>
           Não trava se nenhum status estiver disponível; retorna imediatamente.
          </entry>
         </row>
         <row>
          <entry><constant>WNOWAIT</constant></entry>
          <entry>
           Mantém o processo cujo status é retornado em
           <parameter>info</parameter> em um estado de espera. Isso não deve
           afetar o estado do processo; o processo pode ser aguardado novamente
           após a conclusão desta chamada.
          </entry>
         </row>
         <row>
          <entry><constant>WSTOPPED</constant></entry>
          <entry>
           O status deve ser retornado para qualquer processo filho que tenha parado ao receber
           um sinal e cujo status não tenha sido relatado desde
           sua parada ou tenha sido relatado apenas por chamadas a
           <function>pcntl_waitid</function> com o sinalizador
           <constant>WNOWAIT</constant> definido.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>resource_usage</parameter></term>
    <listitem>
     <para>
      O parâmetro <parameter>resource_usage</parameter> é definido como um array
      que contém estatística de uso de recursos do processo filho.

      Isto é suportado se a chamada de sistema wait6 estiver disponível
      (por exemplo no FreeBSD), ou também no Linux através da chamada de sistema waitid.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>pcntl_waitid</function> retorna &true; se
   <constant>WNOHANG</constant> foi especificado e o status não está disponível para
   qualquer processo especificado por <parameter>idtype</parameter> e
   <parameter>id</parameter>.
  </para>

  <para>
   <function>pcntl_waitid</function> retorna &true; devido à mudança de estado
   de um de seus filhos.
  </para>

  <para>
   Caso contrário, &false; é retornado e <function>pcntl_get_last_error</function>
   pode ser usado para obter o número do erro <literal>errno</literal>.
  </para>

  <note>
   <para>
    Uma vez obtido um número de erro <literal>errno</literal>,
    <function>pcntl_strerror</function> pode ser usada para obter a mensagem de texto
    associada a ele.
   </para>
  </note>
 </refsect1>

  <refsect1 role="errors">
  &reftitle.errors;
  <table>
   <title>Valores de número de erro (<literal>errno</literal>)</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry><constant>ECHILD</constant></entry>
      <entry>
       O processo de chamada não possui processos filho existentes não aguardados.
      </entry>
     </row>
     <row>
      <entry><constant>EINTR</constant></entry>
      <entry>
       <function>pcntl_waitid</function> foi interrompido por um sinal.
      </entry>
     </row>
     <row>
      <entry><constant>EINVAL</constant></entry>
      <entry>
       Um valor inválido foi especificado para <parameter>flags</parameter>, ou
       <parameter>idtype</parameter> e <parameter>id</parameter> especificam um
       conjunto inválido de processos.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pcntl_waitpid</function></member>
    <member><function>pcntl_wait</function></member>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_signal</function></member>
    <member><function>pcntl_wifexited</function></member>
    <member><function>pcntl_wifstopped</function></member>
    <member><function>pcntl_wifsignaled</function></member>
    <member><function>pcntl_wexitstatus</function></member>
    <member><function>pcntl_wtermsig</function></member>
    <member><function>pcntl_wstopsig</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
