<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: dfe3b9532a07e11b105a9380d8e74fe2d78a0fa7 Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin -->

<section xml:id="memcached.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Memcached &ConfigureOptions;</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><link linkend="ini.memcached.sess-locking">memcached.sess_locking</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash">memcached.sess_consistent_hash</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.1.0. O valor padrão é On a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary">memcached.sess_binary</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.0.0. Substituído por memcached.sess_binary_protocol a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait">memcached.sess_lock_wait</link></entry>
      <entry>150000</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 0.1.0. Removido a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-prefix">memcached.sess_prefix</link></entry>
      <entry>memc.sess.key.</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-number-of-replicas">memcached.sess_number_of_replicas</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-randomize-replica-read">memcached.sess_randomize_replica_read</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed">memcached.sess_remove_failed</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.1.0. Substituído por memcached.sess_remove_failed_servers a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-type">memcached.compression_type</link></entry>
      <entry>fastlz</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-factor">memcached.compression_factor</link></entry>
      <entry>1.3</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.compression-threshold">memcached.compression_threshold</link></entry>
      <entry>2000</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.serializer">memcached.serializer</link></entry>
      <entry>igbinary</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 0.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.use-sasl">memcached.use_sasl</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.2.0. Removido a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-binary-protocol">memcached.default_binary_protocol</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-connect-timeout">memcached.default_connect_timeout</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.default-consistent-hash">memcached.default_consistent_hash</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-binary-protocol">memcached.sess_binary_protocol</link></entry>
      <entry>On</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0. Substitua memcached.sess_binary</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-connect-timeout">memcached.sess_connect_timeout</link></entry>
      <entry>1000</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-consistent-hash-type">memcached.sess_consistent_hash_type</link></entry>
      <entry>ketama</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.1.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-expire">memcached.sess_lock_expire</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-retries">memcached.sess_lock_retries</link></entry>
      <entry>5</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-max">memcached.sess_lock_wait_max</link></entry>
      <entry>150</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0. Valor padrão 150 a partir do memcached 3.1.0 (anteriormente 2000).</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-lock-wait-min">memcached.sess_lock_wait_min</link></entry>
      <entry>150</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0. Valor padrão 150 a partir do memcached 3.1.0 (anteriormente 1000).</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-persistent">memcached.sess_persistent</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-remove-failed-servers">memcached.sess_remove_failed_servers</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0. Substitua memcached.sess_remove_failed.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-server-failure-limit">memcached.sess_server_failure_limit</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 3.0.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-password">memcached.sess_sasl_password</link></entry>
      <entry>null</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.sess-sasl-username">memcached.sess_sasl_username</link></entry>
      <entry>null</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Disponível a partir do memcached 2.2.0.</entry>
     </row>
     <row>
      <entry><link linkend="ini.memcached.store-retry-count">memcached.store_retry_count</link></entry>
      <entry>0</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>
       Disponível a partir do memcached 2.2.0
       O valor padrão é <literal>0</literal> no memcached 3.2.0
       (anteriormente <literal>2</literal>).
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.memcached.sess-locking">
    <term>
     <parameter>memcached.sess_locking</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Use o bloqueio de sessão. Valores válidos: On, Off, o padrão é On.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-consistent-hash">
    <term>
     <parameter>memcached.sess_consistent_hash</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Se definido como On, hashing consistente (libketama) é usado para manipulação de sessão. Quando hashing consistente é usado, pode-se adicionar ou remover nó(s) de cache sem atrapalhar muito as keys existentes. O padrão é On.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-binary">
    <term>
     <parameter>memcached.sess_binary</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Use o modo binário de sessão memcached. As réplicas Libmemcached funcionam
      apenas se o modo binário estiver ativado. O padrão é Off.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-lock-wait">
    <term>
     <parameter>memcached.sess_lock_wait</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Tempo de espera de nova tentativa de bloqueio de rotação da sessão em microssegundos. Tenha cuidado
      ao definir esse valor. Os valores válidos são inteiros, em que 0 é interpretado
      como o valor padrão. Valores negativos resultam em um bloqueio reduzido para
      um bloqueio de tentativa. O padrão é 150000.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-prefix">
    <term>
     <parameter>memcached.sess_prefix</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Prefixo da key de sessão Memcached. Os valores válidos são strings com menos de 219
      bytes de comprimento. O valor padrão é "memc.sess.key."
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-number-of-replicas">
    <term>
     <parameter>memcached.sess_number_of_replicas</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Grave dados em vários servidores memcached adicionais. Isso é "poor man's HA", como libmemcached o chama. Se esse valor for positivo e sess_remove_failed_servers estiver ativado quando um servidor memcached falhar, a sessão continuará disponível a partir de uma réplica. No entanto, se o servidor de memcache com falha ficar disponível novamente, ele lerá a sessão a partir daí, que pode ter dados antigos ou nenhum dado. O padrão é 0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-randomize-replica-read">
    <term>
     <parameter>memcached.sess_randomize_replica_read</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      A réplica da sessão do Memcached é lida aleatoriamente.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-remove-failed">
    <term>
     <parameter>memcached.sess_remove_failed</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Permitir que o servidor memcached com falha seja removido automaticamente.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.compression-type">
    <term>
     <parameter>memcached.compression_type</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Defina o tipo de compactação, os valores válidos são: fastlz, zlib. O padrão
      é fastlz.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.compression-factor">
    <term>
     <parameter>memcached.compression_factor</parameter>
     <type>float</type>
    </term>
    <listitem>
     <para>
      Fator de compressão. Armazene o valor compactado somente se o fator de
      compactação (economia) exceder o limite definido. Armazene compactado se:
      <literal>plain_len &gt; comp_len * factor</literal>. O valor padrão
      é 1,3 (23% de economia de espaço).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.compression-threshold">
    <term>
     <parameter>memcached.compression_threshold</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O limite de compressão. Não compacte valores serializados abaixo desse limite.
      O padrão é 2.000 bytes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.serializer">
    <term>
     <parameter>memcached.serializer</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Defina o serializador padrão para novos objetos memcached. Os valores válidos
      são: php, igbinary, json, json_array, msgpack.
     </para>
     <variablelist>
      <varlistentry>
       <term>json</term>
       <listitem>
        <para>
         Codificação php JSON padrão. Este serializador é rápido e compacto, mas
         funciona apenas em dados codificados em UTF-8 e não implementa totalmente
         a serialização. Consulte a extensão JSON. Disponível a partir do memcached 0.2.0.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>json_array</term>
       <listitem>
        <para>
         Como json, mas decodifica em arrays. Disponível a partir do memcached 2.0.0.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>php</term>
       <listitem>
        <para>
         O serializador PHP padrão.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>igbinary</term>
       <listitem>
        <para>
         Um serializador binário. Disponível a partir do memcached 0.1.4.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>msgpack</term>
       <listitem>
        <para>
         Um serializador binário multilíngue. Disponível a partir do memcached 2.2.0.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <para>
      O padrão é igbinary se disponível, então msgpack se disponível, então php caso contrário.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.use-sasl">
    <term>
     <parameter>memcached.use_sasl</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Use autenticação SASL para conexões. Valores válidos: On, Off. O
      padrão é Off.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.default-binary-protocol">
    <term>
     <parameter>memcached.default_binary_protocol</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Define o protocolo memcached padrão para novas conexões. (Para configurar o protocolo memcached para conexões usadas por sessões, use memcached.sess_binary_protocol em vez disso)

      Se definido como On, o protocolo binário memcached é usado por padrão. Se definido como Off, o protocolo de texto memcached é usado. O padrão é desativado
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.default-connect-timeout">
    <term>
     <parameter>memcached.default_connect_timeout</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Define o tempo limite de conexão memcached padrão para novas conexões. (Para configurar o tempo limite de conexão do memcached para sessões, use memcached.sess_connect_timeout)

      No modo non-blocking, isso altera o valor do tempo limite. durante a conexão do socket em milissegundos. Especificar -1 significa um tempo limite infinito. Especificar 0 significa usar o tempo limite de conexão padrão da biblioteca memcached. O padrão é 0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.default-consistent-hash">
    <term>
     <parameter>memcached.default_consistent_hash</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Define o padrão para hash consistente para novas conexões. (Para configurar hashing consistente para conexões de sessão, use memcached.sess_consistent_hash em vez disso)

      Se definido como On, hashing consistente (libketama) é usado para manipulação de sessão. Quando hashing consistente é usado, pode-se adicionar ou remover nó(s) de cache sem bagunçar muito com as keys existentes, o padrão é Off.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-binary-protocol">
    <term>
     <parameter>memcached.sess_binary_protocol</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Use o protocolo binário memcached para sessões memcached (em vez do protocolo de texto) as réplicas libmemcached funcionam apenas se o modo binário estiver ativado. No entanto, certos proxies (como twemproxy) funcionarão somente se o protocolo binário estiver desabilitado. Em versões mais antigas do php-memcached, essa configuração estava desativada e era chamada de memcached.sess_binary. O padrão é On com libmemcached 1.0.18 ou mais recente. O padrão é Off com a versão mais antiga.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-connect-timeout">
    <term>
     <parameter>memcached.sess_connect_timeout</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      valor de tempo limite de conexão memcached
      No modo non-blocking, isso altera o valor do tempo limite durante a conexão do socket em milissegundos. Especificar -1 significa um tempo limite infinito.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-consistent-hash-type">
    <term>
     <parameter>memcached.sess_consistent_hash_type</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Tipo de hash consistente da sessão Memcached. Se definido como 'ketama', hash consistente (libketama) é usado para manipulação de sessão (padrão para php-memcached 3.x) se definido como 'ketama_weighted', hashing consistente ponderado (libketama) é usado para manipulação de sessão (padrão para php- memcached 2.x). O padrão é "ketama".
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-lock-expire">
    <term>
     <parameter>memcached.sess_lock_expire</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O tempo, em segundos, antes que um bloqueio seja liberado. Definir como 0 resulta no comportamento padrão, que é usar o max_execution_time do PHP. O padrão é 0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-lock-retries">
    <term>
     <parameter>memcached.sess_lock_retries</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O número de vezes para tentar bloquear novamente o bloqueio de sessão, não incluindo a primeira tentativa. O padrão é 5.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-lock-wait-max">
    <term>
     <parameter>memcached.sess_lock_wait_max</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O tempo máximo, em milissegundos, de espera entre tentativas de bloqueio de sessão. O padrão é 150.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-lock-wait-min">
    <term>
     <parameter>memcached.sess_lock_wait_min</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      O tempo mínimo, em milissegundos, de espera entre tentativas de bloqueio de sessão. Esse valor é dobrado em cada nova tentativa de bloqueio até que memcached.sess_lock_wait_max seja alcançado, após o qual qualquer nova tentativa levará sess_lock_wait_max segundos. O padrão é 150.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-persistent">
    <term>
     <parameter>memcached.sess_persistent</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Se deve ou não reutilizar as conexões memcached correspondentes ao(s) valor(es) de session.save_path após o término da execução do script. Não use isso se certas configurações (por exemplo, configurações SASL, sess_binary_protocol) forem substituídas entre as solicitações. O padrão é Off.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-remove-failed-servers">
    <term>
     <parameter>memcached.sess_remove_failed_servers</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Permitir que o servidor memcached com falha seja removido automaticamente. O padrão é Off. (Nas versões anteriores, essa configuração era chamada de memcached.sess_remove_failed)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-server-failure-limit">
    <term>
     <parameter>memcached.sess_server_failure_limit</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Defina esse valor para permitir que o servidor seja removido após o número configurado de falhas de conexão contínuas. O padrão é 0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-sasl-password">
    <term>
     <parameter>memcached.sess_sasl_password</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Senha SASL da sessão
      O nome de usuário e a senha precisam ser definidos para que o SASL seja ativado
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.sess-sasl-username">
    <term>
     <parameter>memcached.sess_sasl_username</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Nome de usuário SASL da sessão
      O nome de usuário e a senha precisam ser definidos para que o SASL seja ativado
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.memcached.store-retry-count">
    <term>
     <parameter>memcached.store_retry_count</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      A quantidade de novas tentativas para comandos de armazenamento com falha.
      Esse mecanismo permite fail-over transparente para servidores secundários quando as operações set/increment/decrement/setMulti falham no servidor desejado em um ambiente multiservidor. O padrão é 2.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
