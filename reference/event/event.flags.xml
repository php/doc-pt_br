<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bbfa9738785f054752e6cb565cd0a58e71015bc6 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<chapter xml:id="event.flags" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Opção de Event</title>
 <para>
  <constant>Event::READ</constant>
  Esta opção indica um evento que se torna ativo quando o descritor de arquivo
  fornecido (geralmente um recurso de fluxo ou socket) está pronto para leitura.
 </para>
 <para>
  <constant>Event::WRITE</constant>
  Indica um evento que se torna ativo quando o descritor de arquivo fornecido
  (geralmente um recurso de fluxo ou socket) está pronto para gravação.
 </para>
 <para>
  <constant>Event::SIGNAL</constant>
  Usado para implementar a detecção de sinal. Consulte "Construindo eventos de sinal" abaixo.
 </para>
 <para>
  <constant>Event::TIMEOUT</constant>
  indica um evento que se torna ativo depois de decorrido um tempo limite. A
  opção <constant>Event::TIMEOUT</constant>
  é ignorada ao construir um evento: pode-se definir um tempo limite
  quando o evento é
  <emphasis>adicionado</emphasis>,
  ou não. É definido no argumento
  <literal>$what</literal>
  para a função de retorno de chamada quando ocorre um tempo limite.
 </para>
 <para>
  Consulte também
  <link
 xlink:href="http://www.wangafu.net/~nickm/libevent-book/Ref4_event.html#_the_event_flags">Programação
 de rede rápida e portátil sem bloqueio com Libevent, Trabalhando com eventos,
 Sinalizadores de eventos</link>
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
