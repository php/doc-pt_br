<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bbfa9738785f054752e6cb565cd0a58e71015bc6 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<chapter  xml:id="eventbufferevent.about.callbacks" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Sobre retornos de chamada de eventos de buffer</title>
 <para>
  Um objeto da classe
  <classname>EventBufferEvent</classname>
  representa um
  <emphasis>evento de buffer</emphasis>
  . A natureza assíncrona da E/S executada pelo Libevent implica que um
  socket (ou outro tipo de descritor de arquivo) nem sempre está disponível. O evento
  invoca retornos de chamada correspondentes quando o recurso fica disponível para
  leitura ou gravação, ou quando ocorre algum evento (por exemplo, erro, "fim de linha"
  etc.).
 </para>
 <para>
  Os retornos de chamada de leitura e gravação devem corresponder ao seguinte protótipo:
 </para>
 <methodsynopsis>
  <type>void</type>
  <methodname>callback</methodname>
  <methodparam
   choice="opt">
   <type>EventBufferEvent</type>
   <parameter>bev</parameter>
   <initializer>&null;</initializer>
  </methodparam>
  <methodparam
   choice="opt">
   <type>mixed</type>
   <parameter>arg</parameter>
   <initializer>&null;</initializer>
  </methodparam>
 </methodsynopsis>
 <para>
  <variablelist>
   <varlistentry>
    <term>
     <parameter>bev</parameter>
    </term>
    <listitem>
     <para>
      Objeto
      <classname>EventBufferEvent</classname>
      associado.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>arg</parameter>
    </term>
    <listitem>
     <para>
      Variável personalizada anexada a todos os retornos de chamada via
      <methodname>EventBufferEvent::__construct</methodname>
      , ou
      <methodname>EventBufferEvent::setCallbacks</methodname>
      .
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  O retorno de chamada do evento deve corresponder ao seguinte protótipo:
 </para>
 <methodsynopsis>
  <type>void</type>
  <methodname>callback</methodname>
  <methodparam
   choice="opt">
   <type>EventBufferEvent</type>
   <parameter>bev</parameter>
   <initializer>&null;</initializer>
  </methodparam>
  <methodparam
   choice="opt">
   <type>int</type>
   <parameter>events</parameter>
   <initializer>0</initializer>
  </methodparam>
  <methodparam
   choice="opt">
   <type>mixed</type>
   <parameter>arg</parameter>
   <initializer>&null;</initializer>
  </methodparam>
 </methodsynopsis>
 <para>
  <variablelist>
   <varlistentry>
    <term>
     <parameter>bev</parameter>
    </term>
    <listitem>
     <para>
      Objeto
      <classname>EventBufferEvent</classname>
      associado.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>events</parameter>
    </term>
    <listitem>
     <para>
      Máscara de bits de eventos:
      <constant>EventBufferEvent::READING</constant>
      ,
      <constant>EventBufferEvent::WRITING</constant>
      ,
      <constant>EventBufferEvent::EOL</constant>
      ,
      <constant>EventBufferEvent::ERROR</constant>
      e
      <constant>EventBufferEvent::TIMEOUT</constant>
      . Veja
      <link linkend="eventbufferevent.constants">Constantes EventBufferEvent</link>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>arg</parameter>
    </term>
    <listitem>
     <para>
      Variável personalizada anexada a todos os retornos de chamada via
      <methodname>EventBufferEvent::__construct</methodname>
      , ou
      <methodname>EventBufferEvent::setCallbacks</methodname>
      .
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
