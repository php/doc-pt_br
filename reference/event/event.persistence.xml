<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bbfa9738785f054752e6cb565cd0a58e71015bc6 Maintainer: fernandowobeto Status: ready --><!-- CREDITS: fernandowobeto -->
<chapter  xml:id="event.persistence" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Sobre persistência de eventos</title>
 <para>
  Por padrão, sempre que um evento pendente se torna ativo (porque seu descritor de arquivo
  está pronto para leitura ou gravação, ou porque seu tempo limite expira), ele
  se torna não pendente logo antes de seu retorno de chamada ser executado. Assim, para tornar
  o evento pendente novamente, pode-se chamar
  <methodname>Event::add</methodname>
  nele novamente de dentro da função de retorno de chamada.
 </para>
 <para>
  Se o sinalizador
  <constant>Event::PERSIST</constant>
  estiver definido em um evento, entretanto, o evento será
  <emphasis>persistente</emphasis>.
  Isso significa que o evento permanece pendente mesmo quando seu retorno de chamada é ativado.
  O método <methodname>Event::del</methodname>
  pode ser chamado para torná-lo não pendente.
 </para>
 <para>
  O tempo limite de um evento persistente é redefinido sempre que o retorno de chamada do evento é executado.
  Assim, se houver um evento com as opções
  <constant>Event::READ</constant>
  <literal>|</literal>
  <constant>Event::PERSIST</constant>
  e um timeout de cinco segundos, o evento se tornará ativo:
 </para>
 <orderedlist>
  <listitem>
   <para>
    Sempre que o socket ou descritor de arquivo estiver pronto para leitura.
   </para>
  </listitem>
  <listitem>
   <para>
    Sempre que cinco segundos se passaram desde a última vez que o evento ficou ativo.
   </para>
  </listitem>
 </orderedlist>
 <para>
  Veja também
  <link
  xlink:href="http://www.wangafu.net/~nickm/libevent-book/Ref4_event.html#_about_event_persistence">Programação
  de rede rápida e portátil sem bloqueio com Libevent, Sobre Persistência de
  Eventos</link>
 </para>
</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
