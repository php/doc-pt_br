<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: marcelo Status: ready -->
<!-- splitted from ./en/functions/sockets.xml, last change in rev 1.27 -->
  <refentry xml:id="function.socket-write" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>socket_write</refname>
    <refpurpose>Escreve em um socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>int</type><methodname>socket_write</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     A função <function>socket_write</function> escreve em um socket 
     <parameter>socket</parameter> de
     <parameter>buffer</parameter>.
    </para>
    <para>
     O parâmetro opcional <parameter>length</parameter> pode especificar um
     comprimento alternativo de bytes escritos para o socket. Se esse comprimento é
     maior do que o comprimento do buffer, isso será silenciosamente truncado para o comprimento do buffer.
    </para>
    <para>
     Retorna o número de bytes escritos com sucesso para o socket ou &false;
     em um erro. O código de erro pode ser retornado com
     <function>socket_last_error</function>. Esse código deve ser passado para
     <function>socket_strerror</function> para pegar uma explicação textual do erro.
    </para>
    <note>
     <para>
      <function>socket_write</function> não necessariamente escreve todos os bytes
      dados do buffer. Isso é valido, dependendo da rede, buffers etc., 
      somente uma quantidade segura de dados, sempre um byte, é escrito embora
      seu buffer seja maior. Você deve prestar atenção para involuntariamente
      esquecer de transmitir o restante dos seus dados.
     </para>
    </note>
    <note>
     <para>
      Isso é perfeitamente válido para <function>socket_write</function> retornar
      zero que significa que não tem bytes para escrever. Tenha certeza de usar o operador
      <literal>===</literal> para checar por &false; em caso de um
      erro.
     </para>
    </note>
    <para>
     Veja também 
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_listen</function>,
     <function>socket_read</function> e
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
