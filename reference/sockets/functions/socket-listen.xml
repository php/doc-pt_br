<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: marcelo Status: ready -->
<!-- splitted from ./en/functions/sockets.xml, last change in rev 1.1 -->
  <refentry xml:id="function.socket-listen" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>socket_listen</refname>
    <refpurpose>Abre escuta para uma conexão no socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrição</title>
     <methodsynopsis>
      <type>bool</type><methodname>socket_listen</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>backlog</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     Após o socket <parameter>socket</parameter> ter sido criado usando
     <function>socket_create</function> e associado para um nome com
     <function>socket_bind</function>, ele deve dizer para aguardar por escuta em conexões 
     que irão entrar <parameter>socket</parameter>.
    </para>
    <para>
     Um máximo de <parameter>backlog</parameter> em conexões entrantes irão ser listadas
     para este processamento. Se uma requisição de conexão chegar com um limite de clientes
     devem receber um erro com uma identificação de
     <literal>ECONNREFUSED</literal>, ou, se o protocolo abaixo suporta retransmissão,
     a requisição deve ser ignorada de forma até serem bem sucedidas.
    </para>
    <note>
     <para>
      O máximo número passado para o parâmetro <parameter>backlog</parameter>
      altamente dependente da plataforma abaixo. No linux, isso é
      silenciosamente truncado para <constant>SOMAXCONN</constant>. No win32, se
      passado <constant>SOMAXCONN</constant>, o disponibilizador de serviço abaixo
      responsável pelo socket irá configurar o backlog para o valor máximo 
      <emphasis>reasonable</emphasis>. Não há uma condição para procurar
      o valor do backlog atual nesta plataforma.
     </para>
    </note>
    <para>
     <function>socket_listen</function> é aplicável somente para sockets do tipo     <constant>SOCK_STREAM</constant> ou
     <constant>SOCK_SEQPACKET</constant>.
    </para>
    <para>
     &return.success; O código de erro pode ser retornado com
     <function>socket_last_error</function>. Isso código deve ser passado para
     <function>socket_strerror</function> para pegar uma explicação textual do
     erro.
    </para>
    <para>
     Veja também
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_create</function> e
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
