<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d3d1ebea1eeecb7f76fb2fa8ecb55ef35d1d518 Maintainer: leonardolara Status: ready --><!-- CREDITS: fernandoc,leonardolara -->
<refentry xml:id="function.ord" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ord</refname>
  <refpurpose>Converte o primeiro byte de uma string para um valor entre 0 e 255</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ord</methodname>
   <methodparam><type>string</type><parameter>character</parameter></methodparam>
  </methodsynopsis>
  <para>
   Interpreta o valor bin√°rio do primeiro byte de
   <parameter>character</parameter> como um inteiro sem sinal entre 0 e 255.
  </para>
  <para>
   Se a string estiver em codifica√ß√£o de um byte, como ASCII, ISO-8859 ou Windows 1252, √© equivalente a retornar a posi√ß√£o de um caractere na tabela de mapeamento do conjunto de caracteres. Entretanto, note que esta fun√ß√£o n√£o tem ci√™ncia da codifica√ß√£o da string, e em particular nunca ir√° identificar um ponto de c√≥digo Unicode em uma codifica√ß√£o multi-byte como UTF-8 ou UTF-16.
  </para>
  <para>
   Esta fun√ß√£o complementa a fun√ß√£o <function>chr</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>character</parameter></term>
     <listitem>
      <para>
       A string que ter√° o primeiro caractere avaliado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   An integer between 0 and 255.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>ord</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$str = "\n";
if (ord($str) == 10) {
    echo "O primeiro caractere de \$str √© uma nova linha.\n";
}
?>
]]>
    </programlisting>
   </example>
 </para>
 <para>
   <example>
    <title>Examinando os bytes individuais de uma string UTF-8</title>
    <programlisting role="php">
<![CDATA[
<?php
declare(encoding='UTF-8');
$str = "üêò";
for ( $pos=0; $pos < strlen($str); $pos ++ ) {
 $byte = substr($str, $pos);
 echo 'Byte ' . $pos . ' de $str tem valor ' . ord($byte) . PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
Byte 0 de $str tem valor 240
Byte 1 de $str tem valor 159
Byte 2 de $str tem valor 144
Byte 3 de $str tem valor 152
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>chr</function></member>
    <member><link xlink:href="&url.asciitable;">Tabela ASCII</link></member>
    <member><function>mb_ord</function></member>
    <member><function>IntlChar::ord</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
