<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 464fbf0d12f89b1e723908780fb68acf667f5901 Maintainer: leonardolara Status: ready --><!-- CREDITS: surfmax, amandavale, felipe, leonardolara -->
<refentry xml:id="function.str-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>str_replace</refname>
  <refpurpose>Substitui todas as ocorrências da string de pesquisa com a string de substituição</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>str_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>search</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta função retorna uma string ou um array com todas as ocorrências de
   <parameter>search</parameter> em <parameter>subject</parameter>
   substituídas com o valor informado em <parameter>replace</parameter>.
  </para>
  <para>
   Para substituir texto baseado em um padrão que não seja uma string
   fixa, use <function>preg_replace</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Se <parameter>search</parameter> e <parameter>replace</parameter> forem
   arrays, então <function>str_replace</function> pega um valor de cada array
   e os usa para pesquisar e substituir em <parameter>subject</parameter>. Se
   <parameter>replace</parameter> tiver menos valores do que
   <parameter>search</parameter>, então uma string vazia é usada para o restante dos
   valores de substituição. Se <parameter>search</parameter> for um array e
   <parameter>replace</parameter> for uma string, então esta string de substituição é
   usada para cada valor de <parameter>search</parameter>. O contrário não
   faria sentido, contudo.
  </para>
  <para>
   Se <parameter>search</parameter> ou <parameter>replace</parameter>
   forem arrays, seus elementos são processados do primeiro ao último.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
       O valor sendo pesquisado, também conhecido como <emphasis>agulha</emphasis>.
       Um array pode ser usado para designar múltiplas agulhas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       O valor de substituição que será usado no lugar dos valores de <parameter>search</parameter>
       encontrados. Um array pode ser usado para deignar múltiplas substituições.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       A string ou array sendo pesquisado ou substituído,
       também conhecido como o <emphasis>palheiro</emphasis>.
      </para>
      <para>
       Se <parameter>subject</parameter> for um array, então a pesquisa e
       a substituição são executadas com cada entrada de
       <parameter>subject</parameter>, e o valor de retorno é um array
       também.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
       Se passado, será definido para o número de substituições realizadas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta função retorna uma string ou um array com os valores substituídos.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplos básicos de <function>str_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Produz: <body text='black'>
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");

// Produz: Hll Wrld f PHP
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");

// Produz: Você deveria comer pizza, cerveja e sorvete todos os dias.
$frase    = "Você deveria comer frutas, vegetais, e fibra todos os dias.";
$saudavel = array("frutas", "vegetais", "fibra");
$saboroso = array("pizza", "cerveja", "sorvete");

$novafrase = str_replace($saudavel, $saboroso, $frase);

// Produz: 2
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplos de armadilhas potenciais de <function>str_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Ordem da substituição
$str     = "Linha 1\nLinha 2\rLinha 3\r\nLinha 4\n";
$order   = array("\r\n", "\n", "\r");
$replace = '<br />';

// Processa \r\n primeiro para que não sejam substituídos duas vezes.
$newstr = str_replace($order, $replace, $str);

// Mostra F porque A é substituído por B, depois B é substituído por C, e assim por diante...
// Finalmente E é substituído por F, porque a substituição é feita da esquerda para a direita.
$search  = array('A', 'B', 'C', 'D', 'E');
$replace = array('B', 'C', 'D', 'E', 'F');
$subject = 'A';
echo str_replace($search, $replace, $subject);

// Mostra: apearpearle pear
// Pelo memos motivo mencionado acima
$letters = array('a', 'p');
$fruit   = array('apple', 'pear');
$text    = 'a p';
$output  = str_replace($letters, $fruit, $text);
echo $output;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>Armadilha da ordem de substituição</title>
   <para>
    Como <function>str_replace</function> substitui da esquerda para a direita, ela pode
    substituir um valor previamente inserido quando estiver fazendo múltiplas substituições.
    Veja também os exemplos neste documento.
   </para>
  </caution>
  <note>
   <para>
    Esta função é sensível a maiúsculas/minúsculas. Use <function>str_ireplace</function>
    para substituição insensível a maiúsculas/minúsculas.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_ireplace</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
