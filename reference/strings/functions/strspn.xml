<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 422bb032237525aaf50e6a43f33362a2c610a1d7 Maintainer: leonardolara Status: ready --><!-- CREDITS: surfmax,felipe,leonardolara -->
<refentry xml:id="function.strspn" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strspn</refname>
  <refpurpose>
   Encontra o comprimento do segmento inicial de uma string composta
   totalmente de caracteres contidos em uma máscara informada
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strspn</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>characters</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Encontra o comprimento do segmento inicial da <parameter>string</parameter>
   que contenha <emphasis>somente</emphasis> caracteres contidos em <parameter>characters</parameter>.
  </para>
  <para>
   Se <parameter>offset</parameter> e <parameter>length</parameter>
   forem omitidos, então toda a <parameter>string</parameter> será
   examinada. Se forem incluídos, o efeito será o mesmo que
   chamar <literal>strspn(substr($string, $offset, $length),
   $characters)</literal> (consulte <xref linkend="function.substr"/>
   para mais informações).
  </para>
  <para>
   A linha de código:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$var = strspn("42 is the answer to the 128th question.", "1234567890");
?>
]]>
    </programlisting>
   </informalexample>
   atribuirá <literal>2</literal> para <varname>$var</varname>,
   porque a string "42" é o segmento inicial
   de <parameter>string</parameter> que consiste somente de caracteres
   contidos em "1234567890".
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A primeira a ser examinada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>characters</parameter></term>
     <listitem>
      <para>
       A lista de caracteres permitidos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       A posição na <parameter>string</parameter> para
       iniciar a pesquisa.
      </para>
      <para>
       Se <parameter>offset</parameter> for informado e não negativo,
       a função <function>strspn</function> começará a
       examinar a <parameter>string</parameter> na posição
       <parameter>offset</parameter>. Por exemplo, na
       string '<literal>abcdef</literal>', o caractere na
       posição <literal>0</literal> é '<literal>a</literal>', na
       posição <literal>2</literal> é
       '<literal>c</literal>', e assim por diante.
      </para>
      <para>
       Se <parameter>offset</parameter> for informado e negativo,
       a função <function>strspn</function> começará a
       examinar a <parameter>string</parameter> na posição
       <parameter>offset</parameter> a partir do final
       da <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       O tamanho do segmento da <parameter>string</parameter>
       a ser examinado.
      </para>
      <para>
       Se <parameter>length</parameter> for informado e não negativo,
       a <parameter>string</parameter> será examinada pelo
       número de caracteres em <parameter>length</parameter> a partir
       da posição inicial.
      </para>
      <para>
       Se <parameter>length</parameter> for informado e negativo,
       a <parameter>string</parameter> será examinada a partir
       da posição inicial até o número de caracteres informado em <parameter>length</parameter>
       contados a partir do final da <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o comprimento do segmento inicial de <parameter>string</parameter>
   que consistir inteiramente dos caracteres definidos em <parameter>characters</parameter>.
  </para>
  <note>
   <para>
    Quando o parâmetro <parameter>offset</parameter> estiver definido, o comprimento retornado
    é contado iniciando-se desta posição, não do início da
    <parameter>string</parameter>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>length</parameter> agora pode ser nulo.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strspn</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
// string não começa com nenhum dos caracteres da máscara
var_dump(strspn("foo", "o"));

// examina dois caracteres da string iniciando na posição 1
var_dump(strspn("foo", "o", 1, 2));

// examina um caractere da string iniciando na posição 1
var_dump(strspn("foo", "o", 1, 1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(0)
int(2)
int(1)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strcspn</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
