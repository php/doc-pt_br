<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 873f4a3d5027bd1b584f1d1e590e22cd4a08ae84 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.levenshtein" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>levenshtein</refname>
  <refpurpose>Calcula a distância Levenshtein entre duas strings</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>levenshtein</methodname>
   <methodparam><type>string</type><parameter>string1</parameter></methodparam>
   <methodparam><type>string</type><parameter>string2</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>insertion_cost</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>replacement_cost</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>deletion_cost</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>
  <para>
   A distância Levenshtein é definida como o número mínimo de
   caracteres que devem ser substituídos, inseridos ou removidos para transformar
   a <parameter>string1</parameter> na <parameter>string2</parameter>.
   A complexidade do algoritmo é <literal>O(m*n)</literal>,
   onde <literal>n</literal> e <literal>m</literal> são os
   comprimentos da <parameter>string1</parameter> e da
   <parameter>string2</parameter> (muito bom quando comparado com
   <function>similar_text</function>, que é <literal>O(max(n,m)**3)</literal>,
   mas mesmo assim é custoso).
  </para>
  <para>
   Se <parameter>insertion_cost</parameter>, <parameter>replacement_cost</parameter>
   e/ou <parameter>deletion_cost</parameter> não são iguais a <literal>1</literal>,
   o algoritmo se adapta para escolher a transformação menos custosa.
   Por exemplo, se <code>$insertion_cost + $deletion_cost &lt; $replacement_cost</code>,
   nenhuma substituição será feita, mas apenas inserções e remoções.
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string1</parameter></term>
     <listitem>
      <para>
       Uma das strings a ser avaliada para a distância Levenshtein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string2</parameter></term>
     <listitem>
      <para>
       Uma das strings a ser avaliada para a distância Levenshtein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>insertion_cost</parameter></term>
     <listitem>
      <para>
       Define o custo da inserção.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement_cost</parameter></term>
     <listitem>
      <para>
       Define o custo da substituição.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>deletion_cost</parameter></term>
     <listitem>
      <para>
       Define o custo da remoção.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Eta função retorna a distância Levenshtein entre as
   duas strings.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Antes desta versão, <function>levenshtein</function> tinha de ser chamada
       com dois ou com cinco argumentos.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Antes desta versão, <function>levenshtein</function> retornaria <literal>-1</literal>
       se uma das strings fosse maior que 255 caracteres.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>levenshtein</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// palavra com erro ortográfico
$input = 'abacachi';

// array com palavras para comparação
$words  = array('maçã','abacaxi','banana','laranja',
                'rabanete','cenoura','ervilha','feijão','batata');

// nenhuma distância mais curta encontrada, ainda
$shortest = -1;

// itera pelas palavras para encontrar a mais próxima
foreach ($words as $word) {

    // calcula a distância entre a palavra de entrada
    // e a palavra atual
    $lev = levenshtein($input, $word);

    // verifica se há correspondência exata
    if ($lev == 0) {

        // a mais próxima é essa (correspondência exata)
        $closest = $word;
        $shortest = 0;

        // sai do loop; já foi encontrada a correspondência exata
        break;
    }

    // se esta distância for menor que a próxima
    // OU se se uma próxima palavra mais curta ainda não foi encontrada
    if ($lev <= $shortest || $shortest < 0) {
        // define a corrspondência mais próxima e a distância mais curta
        $closest  = $word;
        $shortest = $lev;
    }
}

echo "Palavra de entrada: $input\n";
if ($shortest == 0) {
    echo "Correspondência exata encontrada: $closest\n";
} else {
    echo "Você quis dizer: $closest?\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Palavra de entrada: abacachi
Você quis dizer: abacaxi?
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>soundex</function></member>
    <member><function>similar_text</function></member>
    <member><function>metaphone</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
