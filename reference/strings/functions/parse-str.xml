<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: fernandoc Status: ready -->
  <refentry xml:id="function.parse-str" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>parse_str</refname>
    <refpurpose>Converte a string em variáveis</refpurpose>
   </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
     <methodsynopsis>
      <type>void</type><methodname>parse_str</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter role="reference">arr</parameter></methodparam>
     </methodsynopsis>
    <para>
     Converte <parameter>str</parameter> como se ela tivesse sido passada
     via URL e define o valor das variáveis.
     </para>
    <note>
     <para>
      Para pegar a <emphasis>QUERY_STRING</emphasis> atual, você deve usar a variável
      <link linkend="reserved.variables.server">$_SERVER['QUERY_STRING']</link>.
      também você deve querer ler a seção sobre
      <link linkend="language.variables.external">variáveis de fora do PHP</link>.
     </para>
    </note>
  <note>
   <para>
    A configuração <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
    afeta a saída desta função, <function>parse_str</function> usa
    o mesmo mecanismo que o PHP usa para popular as variáveis <literal>$_GET</literal>,
    <literal>$_POST</literal>, etc.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       A string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arr</parameter></term>
     <listitem>
      <para>
       Se o segundo parâmetro <parameter>arr</parameter> é usado,
       variável são armazenadas nesta variável como elementos de um array.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
    <para>
     <example>
      <title>Usando <function>parse_str</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$str = "first=value&arr[]=foo+bar&arr[]=baz";
parse_str($str);
echo $first;  // value
echo $arr[0]; // foo bar
echo $arr[1]; // baz

parse_str($str, $output);
echo $output['first'];  // value
echo $output['arr'][0]; // foo bar
echo $output['arr'][1]; // baz

?>
]]>
      </programlisting>
     </example>
    </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
    <para>
   <simplelist>
    <member><function>parse_url</function></member>
    <member><function>pathinfo</function></member>
    <member><function>http_build_query</function></member>
    <member><function>get_magic_quotes_gpc</function></member>
    <member><function>urldecode</function></member>
   </simplelist>
    </para>
   </refsect1>
   
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
