<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: leonardolara Status: ready --><!-- CREDITS: surfmax,felipe,leonardolara -->
<refentry xml:id="function.substr-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr_replace</refname>
  <refpurpose>Substitui o texto dentro de uma parte de uma string</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>substr_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>string</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>int</type></type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_replace</function> substitui uma cópia de
   <parameter>string</parameter> delimitada pelos parâmetros
   <parameter>offset</parameter> e (opcionalmente)
   <parameter>length</parameter> com a string informada em
   <parameter>replace</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A string de entrada.
      </para>
      <para>
       Um <type>array</type> de <type>string</type>s pode ser fornecido, e neste caso
       as substituições irão ocorrer em um string de cada vez. Neste caso,
       os parâmetros <parameter>replace</parameter>, <parameter>offset</parameter>
       e <parameter>length</parameter> podem ser fornecidos tanto como
       valores escalares a ser aplicados a um string de entrada de cada vez, quanto como
       <type>array</type>s, neste caso o elemento correspondente do array será
       usado por cada string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       A string substituta.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
    <para>
     Se <parameter>offset</parameter> for não-negativo, a substituição começará
     na posição <parameter>offset</parameter> da
     <parameter>string</parameter>.
    </para>
    <para>
     Se <parameter>offset</parameter> for negativo, a substituição começará
     a partir da posição <parameter>offset</parameter> contada a partir do final da
     <parameter>string</parameter>.
    </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
    <para>
     Se fornecido e positivo, ele representa o comprimento da porção de
     <parameter>string</parameter> que deve ser substituída. Se
     negativo, ele representa o número de caracteres do final de
     <parameter>string</parameter> onde parar a substituição. Se ele
     não for fornecido, o padrão será até strlen(
     <parameter>string</parameter>); isto é, parar a substituição
     no final de <parameter>string</parameter>. Obviamente, se
     <parameter>length</parameter> for zero então esta função irá ter
     efeito de inserir <parameter>replace</parameter> em
     <parameter>string</parameter> na posição fornecida em
     <parameter>offset</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   A string de resultado é retornada. Se <parameter>string</parameter> for um
   array, então um array será retornado.
    </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> agora pode ser nulo.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>substr_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$var = 'ABCDEFGH:/MNRPQR/';
echo "Original: $var<hr />\n";

/* Estes dois exemplos substituem tudo de $var com 'bob'. */
echo substr_replace($var, 'bob', 0) . "<br />\n";
echo substr_replace($var, 'bob', 0, strlen($var)) . "<br />\n";

/* Insere 'bob' direto no começo de $var. */
echo substr_replace($var, 'bob', 0, 0) . "<br />\n";

/* Estes dois exemplos substituem 'MNRPQR' em $var com 'bob'. */
echo substr_replace($var, 'bob', 10, -1) . "<br />\n";
echo substr_replace($var, 'bob', -7, -1) . "<br />\n";

/* Deleta 'MNRPQR' de $var. */
echo substr_replace($var, '', 10, -1) . "<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Usando <function>substr_replace</function> para substituir múltiplas strings
     de uma só vez
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array('A: XXX', 'B: XXX', 'C: XXX');

// Um caso simples: substituir XXX em cada string com YYY.
echo implode('; ', substr_replace($input, 'YYY', 3, 3))."\n";

// Um caso mais complicado onde cada substituição é diferente.
$replace = array('AAA', 'BBB', 'CCC');
echo implode('; ', substr_replace($input, $replace, 3, 3))."\n";

// Substituir um número diferente de caracteres a cada vez.
$length = array(1, 2, 3);
echo implode('; ', substr_replace($input, $replace, 3, $length))."\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: YYY; B: YYY; C: YYY
A: AAA; B: BBB; C: CCC
A: AAAXX; B: BBBX; C: CCC
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>substr</function></member>
    <member><link linkend="language.types.string.substr">Acesso e modificação de strings por caractere</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
