<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: ec6e871a47fa15228aa3299f46fed826422adbc0 Maintainer: _ Status: ready --><!-- CREDITS: leonardolara -->

<refentry xml:id="wrappers.php" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" annotations="verify_info:false">
 <refnamediv>
  <refname>php://</refname>
  <refpurpose>Acessando vários fluxos de E/S</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   O PHP fornece um número de fluxos de E/S miscelâneos que permitem acesso aos
   fluxos de entrada e saída do próprio PHP, a entrada padrão, descritores de arquivo
   de saída e de erro, fluxos de arquivos temporário em memória e em disco, e
   filtros que podem manipular outros recursos de arquivo enquanto eles são lidos
   ou escritos.
  </para>

  <refsect2 xml:id="wrappers.php.std">
   <title>php://stdin, php://stdout e php://stderr</title>
   <simpara>
    <filename>php://stdin</filename>, <filename>php://stdout</filename> e
    <filename>php://stderr</filename> permitem acesso direto ao fluxo correspondente
    de entrada ou saída do processo PHP. O fluxo referencia um
    descritor de arquivo duplicado, para que quando um <filename>php://stdin</filename> for aberto
    e depois fechado, apenas a cópia do descritor será fechada -  o fluxo
    real referenciado por <constant>STDIN</constant> não é afetado.
    Recomenda-se
    que as contantes <constant>STDIN</constant>,
    <constant>STDOUT</constant> e <constant>STDERR</constant> sejam usadas no lugar de
    abrir manualmente os fluxos utilizando estes empacotadores.
   </simpara>
   <simpara>
    <filename>php://stdin</filename> é somente leitura, enquanto que
    <filename>php://stdout</filename> e <filename>php://stderr</filename> são
    somente escrita.
   </simpara>
  </refsect2>

  <refsect2 xml:id="wrappers.php.input">
   <title>php://input</title>
   <simpara>
    <filename>php://input</filename> é um fluxo somente leitura que permite a leitura
    de dados brutos do corpo da requisição.
    <filename>php://input</filename> não está disponível em requisições POST com
    <literal>enctype="multipart/form-data"</literal> se a opção
    <link linkend="ini.enable-post-data-reading">enable_post_data_reading</link>
    estiver habilitada.
   </simpara>
  </refsect2>

  <refsect2 xml:id="wrappers.php.output">
   <title>php://output</title>
   <para>
    <filename>php://output</filename> é um fluxo somente escrita que permite
    escrita ao mecanismo de buffer de saída da mesma maneira que
    <function>print</function> e <function>echo</function>.
   </para>
  </refsect2>

  <refsect2 xml:id="wrappers.php.fd">
   <title>php://fd</title>
   <simpara>
    <filename>php://fd</filename> permite acesso direto ao descritor de arquivo
    fornecido. Por exemplo, <filename>php://fd/3</filename> se refere ao descritor de
    arquivo 3.
   </simpara>
  </refsect2>

  <refsect2 xml:id="wrappers.php.memory">
   <title>php://memory e php://temp</title>
   <simpara>
    <filename>php://memory</filename> e <filename>php://temp</filename> são fluxos
    somente leitura que permitem que dados temporários sejam armazenados em um empacotador
    parecido com um arquivo. Uma diferença entre os dois é que
    <filename>php://memory</filename> irá sempre armazenar seus dados na memória,
    enquanto que <filename>php://temp</filename> irá usar um arquivo temporário assim que
    a quantidade de dado armazenado atingir um limite predefinido (o padrão é 2 MB). A
    localização deste arquivo temporário é determinada da mesma forma que a
    função <function>sys_get_temp_dir</function>.
   </simpara>
   <simpara>
    O limite de memória de <filename>php://temp</filename> pode ser controlado
    concatenando-se <literal>/maxmemory:NN</literal>, onde <literal>NN</literal> é
    a quantidade máxima de dados a manter na memória antes de usar um arquivo
    temporário, em bytes.
   </simpara>
   <caution>
    <simpara>
     Algumas extensões PHP podem requerer um fluxo padrão de E/S,
     e podem tentar converter um fluxo fornecido para um fluxo de E/S padrão.
     Esta conversão pode falhar para fluxos de memória já que ela requer que
     a função C <function>fopencookie</function> esteja dispnível.
     Esta função C <emphasis>não está</emphasis> disponível no Windows.
    </simpara>
   </caution>
  </refsect2>

  <refsect2 xml:id="wrappers.php.filter">
   <title>php://filter</title>
   <simpara>
    <filename>php://filter</filename> é um tipo de meta-empacotador projetado para
    permitir a aplicação de <link linkend="filters">filtros</link> a um
    fluxo no momento da abertura. Isto é útil para funções de arquivo completas
    como <function>readfile</function>,
    <function>file</function> e <function>file_get_contents</function>
    pois não haveria oportunidade de aplicar um filtro ao fluxo
    antes que os conteúdo fosse lido.
   </simpara>
   <para>
    O alvo do <filename>php://filter</filename> utiliza os parâmetros a seguir
    como parte de seu caminho. Cadeias múltiplas de filtro podem ser especificadas em um caminho.
    Favor referir-se aos exemplos para especificidades no uso destes parâmetros.
   </para>
   <para>
    <table>
     <title>Parâmetros de php://filter</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Nome</entry>
        <entry>Descrição</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <literal>resource=&lt;fluxo a ser filtrado&gt;</literal>
        </entry>
        <entry>
         Este parâmetro é requerido. Ele especifica o fluxo que
         deseja-se filtrar.
        </entry>
       </row>
       <row>
        <entry>
         <literal>read=&lt;lista de filtros a aplicar à cadeia de leitura&gt;</literal>
        </entry>
        <entry>
         Este parâmetro é opcional. Um ou mais nomes de filtros podem ser fornecidos,
         separados pelo caractere de barra vertical (<literal>|</literal>).
        </entry>
       </row>
       <row>
        <entry>
         <literal>write=&lt;lista de filtros a aplicar à cadeia de escrita&gt;</literal>
        </entry>
        <entry>
         Este parâmetro é opcional. Um ou mais nomes de filtros podem ser fornecidos,
         separados pelo caractere de barra vertical (<literal>|</literal>).
        </entry>
       </row>
       <row>
        <entry>
         <literal>&lt;lista de filtros a aplicar a ambas as cadeias&gt;</literal>
        </entry>
        <entry>
         Quaisquer listas de filtros que não são prefixadas por <literal>read=</literal>
         ou <literal>write=</literal> serão aplicadas tanto às cadeias de leitura
         quanto às de escrita, conforme apropriado.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </refsect2>
 </refsect1>

 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <table>
    <title>
     Sumário do Empacotador (para <literal>php://filter</literal>, refira-se ao
     sumário do empacotador sendo filtrado)
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Atributo</entry>
       <entry>Suportado</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Restrito por <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
       <entry>Não</entry>
      </row>
      <row>
       <entry>Restrito por <link linkend="ini.allow-url-include">allow_url_include</link></entry>
       <entry>
        <literal>php://input</literal>,
        <literal>php://stdin</literal>,
        <literal>php://memory</literal> e
        <literal>php://temp</literal> somente.
       </entry>
      </row>
      <row>
       <entry>Permite Leitura</entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://input</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> e
        <literal>php://temp</literal> somente.
       </entry>
      </row>
      <row>
       <entry>Permite Escrita</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> e
        <literal>php://temp</literal> somente.
       </entry>
      </row>
      <row>
       <entry>Permite Adição</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> e
        <literal>php://temp</literal> somente. (Equivalente a escrita)
       </entry>
      </row>
      <row>
       <entry>Permite Leitura e Escrita Simultâneas</entry>
       <entry>
        <literal>php://fd</literal>,
        <literal>php://memory</literal> e
        <literal>php://temp</literal> somente.
       </entry>
      </row>
      <row>
       <entry>Suporta <function>stat</function></entry>
       <entry>
        Não. Entretanto, <literal>php://memory</literal> e
        <literal>php://temp</literal> suportam <function>fstat</function>.
       </entry>
      </row>
      <row>
       <entry>Suporta <function>unlink</function></entry>
       <entry>Não</entry>
      </row>
      <row>
       <entry>Suporta <function>rename</function></entry>
       <entry>Não</entry>
      </row>
      <row>
       <entry>Suporta <function>mkdir</function></entry>
       <entry>Não</entry>
      </row>
      <row>
       <entry>Suporta <function>rmdir</function></entry>
       <entry>Não</entry>
      </row>
      <row>
       <entry>Suporta <function>stream_select</function></entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://fd</literal> e
        <literal>php://temp</literal> somente.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1> <!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example><!-- {{{ -->
   <title>php://temp/maxmemory</title>
   <para>
    Este parâmetro opcional permite configurar o limite de memória antes que
    <filename>php://temp</filename> comece a usar um arquivo temporário.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
// Define o limite para 5 MB.
$fiveMBs = 5 * 1024 * 1024;
$fp = fopen("php://temp/maxmemory:$fiveMBs", 'r+');

fputs($fp, "hello\n");

// Lê o que foi escrito.
rewind($fp);
echo stream_get_contents($fp);
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>php://filter/resource=&lt;fluxo a ser filtrado&gt;</title>
   <para>
    Este parâmetro deve ser localizado no
    final da especificação <filename>php://filter</filename> e
    deve apontado ao fluxo que deseja-se filtrar.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Isto é equivalente a simplesmente:
  readfile("http://www.example.com");
  já que nenhum filtro é realmente especificado */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>php://filter/read=&lt;lista de filtros a aplicar à cadeia de leitura&gt;</title>
   <para>
    Este parâmetro leva um ou mais
    nomes de filtros separados pelo caractere de barra vertical <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Isto irá mostrar o conteúdo de
  www.example.com inteiramente em letras maiúsculas */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* Isto fará o mesmo que o comando acima
  mas também irá codificar com ROT13 */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>php://filter/write=&lt;lista de filtros a aplicar à cadeia de escrita&gt;</title>
   <para>
    Este parâmetro leva um ou mais
    nomes de filtros separados pelo caractere de barra vertical <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Isto irá filtrar a string "Olá Mundo"
  através do filtro rot13 filter, e então escrever no
  exemplo.txt no diretório atual */
file_put_contents("php://filter/write=string.rot13/resource=exemplo.txt","Olá Mundo");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example>
   <title>php://memory e php://temp não são reutilizáveis</title>
   <para>
    <filename>php://memory</filename> e <filename>php://temp</filename>
    não são reutilizáveis, isto é, depois que os fluxos foram fechados não há como
    referir-se a eles novamente.
   </para>
   <programlisting role="php">
<![CDATA[
file_put_contents('php://memory', 'PHP');
echo file_get_contents('php://memory'); // não imprime nada
]]>
   </programlisting>
  </example>
 </refsect1><!-- }}} -->
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

