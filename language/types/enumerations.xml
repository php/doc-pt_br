<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f4609f913fe6bf4a8b41328df9366726208b7e33 Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin -->
<sect1 xml:id="language.types.enumerations">
 <title>Enumerations</title>
 <?phpdoc print-version-for="enumerations"?>

 <sect2 xml:id="language.types.enumerations.basics">
  <title>Enumerações Básicas</title>

  <para>
   Enumerations são uma camada de restrição sobre classes e constantes de classe,
   destinadas a fornecer uma maneira de definir um conjunto fechado de valores possíveis para um tipo.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
enum Suit
{
    case Hearts;
    case Diamonds;
    case Clubs;
    case Spades;
}

function do_stuff(Suit $s)
{
    // ...
}

do_stuff(Suit::Spades);
?>
]]>
   </programlisting>
  </informalexample>

  <simpara>
   Para uma discussão completa, consulte o capítulo
   <link linkend="language.enumerations">Enumerations.</link>
  </simpara>

 </sect2>

 <sect2 xml:id="language.types.enumerations.casting">
  <title>Casting</title>

  <para>
   Se um <type>enum</type> for convertido em um <type>object</type>, ele não será
   modificado. Se um <type>enum</type> for convertido em um <type>array</type>,
   será criado um array com uma única chave de <literal>name</literal> (para enumerations puras) ou
   um array com chaves <literal>name</literal> e <literal>value</literal>
   (para enumerations com backup). Todos os outros tipos de conversão resultarão em erro.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
