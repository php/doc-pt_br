<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e587d0655e426f97b3fcb431453da5030e743b23 Maintainer: leonardolara Status: ready --><!-- CREDITS: marcosmarcolin, leonardolara -->
<sect1 xml:id="language.types.iterable">
 <title>Iterável</title>

 <para>
  <type>Iterable</type> é um alias de tipo de tempo de compilação integrado para
  <!-- Need to improve rendering of free-standing type elements in PhD
  <type class="union"><type>array</type><type>Traversable</type></type>.
  -->
  <literal>array|Traversable</literal>.
  Desde sua introdução no PHP 7.1.0 e antes do PHP 8.2.0,
  <type>iterable</type> era um pseudotipo integrado que atuava como o sinônimo de tipo
  mencionado anteriormente e pode ser usado como uma declaração de tipo.
  Um tipo iterável pode ser usado em &foreach; e com
  <command>yield from</command> de dentro de um
  <link linkend="language.generators">gerador</link>.
 </para>

 <note>
  <para>
   As funções que declaram iterável como um tipo de retorno também podem ser
   <link linkend="language.generators">geradoras</link>.

   <example>
    <title>
     Exemplo de tipo de retorno do gerador iterável
    </title>
    <programlisting role="php">
     <![CDATA[
<?php

function gen(): iterable {
    yield 1;
    yield 2;
    yield 3;
}

foreach(gen() as $value) {
    echo $value, "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </note>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
