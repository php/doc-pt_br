<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4c4b82965384d55f5c3efb1ffa80615acd98a737 Maintainer: fabioluciano Status: ready --><!-- CREDITS: royopa, diegopires, fabioluciano, geekcom, marcosmarcolin -->
<sect1 xml:id="language.types.object">
 <title>Objetos</title>

 <sect2 xml:id="language.types.object.init">
  <title>Inicialização de objetos</title>

  <para>
   Para criar um novo <type>object</type>, utilize a instrução <literal>new</literal>
   para instanciar uma classe:
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
class foo
{
    function do_foo()
    {
        echo "Doing foo.";
    }
}

$bar = new foo;
$bar->do_foo();
?>
]]>
   </programlisting>
  </informalexample>

  <simpara>
   Para uma discussão completa, veja o capítulo
   <link linkend="language.oop5">Classes e Objetos</link>.
  </simpara>

 </sect2>

 <sect2 xml:id="language.types.object.casting">
  <title>Convertendo para objetos</title>

  <para>
   Se um <type>object</type> é convertido para um <type>object</type>, ele não é
   modificado. Se um valor de qualquer outro tipo é convertido para um
   <type>object</type>, uma nova instância da classe interna <classname>stdClass</classname>
   é criada. Se o valor for &null;, a nova instância será vazia.
   Um <type>array</type> é convertido para um <type>object</type> com as propriedades
   nomeadas pelas chaves e os valores correspondentes, com exceção de chaves numéricas
   que ficarão inacessíveis a menos que sejam iteradas.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$obj = (object) array('1' => 'foo');
var_dump(isset($obj->{'1'})); // exibe 'bool(true)' a partir do PHP 7.2.0; antes exibia 'bool(false)'
var_dump(key($obj)); // exibe 'string(1) "1"' a partir do PHP 7.2.0; antes exibia 'int(1)'
?>
]]>
   </programlisting>
  </informalexample>

  <para>
   Para qualquer outro valor, uma propriedade chamada
   <literal>scalar</literal> conterá o valor.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$obj = (object) 'ciao';
echo $obj->scalar;  // exibe 'ciao'
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
