<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9c74079f12d67cabb52c124d761f48275417d7eb Maintainer: ae Status: ready --><!-- CREDITS: fabioluciano,ae -->
<refentry xml:id="closure.call" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Closure::call</refname>
  <refpurpose>Vincula e chama a closure</refpurpose>
 </refnamediv>
 <refsect1 role="description"><!-- {{{ -->
  &reftitle.description;
  <methodsynopsis role="Closure">
   <modifier>public</modifier> <type>mixed</type><methodname>Closure::call</methodname>
   <methodparam><type>object</type><parameter>newThis</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Vincula temporáriamente a closure ao <parameter>newThis</parameter>, e a chama
   com qualquer parâmetro fornecido.
  </para>
 </refsect1><!-- }}} -->
 <refsect1 role="parameters"><!-- {{{ -->
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>newThis</parameter></term>
    <listitem>
     <para>
      O <type>object</type> a ser vinculado a closure enquanto durar a
      chamada.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>args</parameter></term>
    <listitem>
     <para>
      Zero ou mais parâmetros, que serão fornecidos como parâmetros para a
      closure.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1><!-- }}} -->
 <refsect1 role="returnvalues"><!-- {{{ -->
  &reftitle.returnvalues;
  <para>
   Retorna o valor de retorna da closure.
  </para>
 </refsect1><!-- }}} -->
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo do método <function>Closure::call</function></title>
   <programlisting role="php">
<![CDATA[
<?php
class Value {
    protected $value;

    public function __construct($value) {
        $this->value = $value;
    }

    public function getValue() {
        return $this->value;
    }
}

$three = new Value(3);
$four = new Value(4);

$closure = function ($delta) { var_dump($this->getValue() + $delta); };
$closure->call($three, 4);
$closure->call($four, 4);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
int(7)
int(8)
]]>
   </screen>
  </example>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
