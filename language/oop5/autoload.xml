<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: c1f37a6c270aadbbb3da56a3973ffd62197adf2b Maintainer: leonardolara Status: ready --><!-- CREDITS: felipe, amandavale, machado, fabioluciano, lhsazevedo, leonardolara -->
 <sect1 xml:id="language.oop5.autoload" xmlns="http://docbook.org/ns/docbook">
  <title>Autocarregamento de Classes</title>
  <para>
   Muitos programadores, ao desenvolver aplicações orientadas a objeto, criam
   um arquivo PHP para cada definição de classe. Um dos maiores contratempos é
   ter de escrever uma longa lista de "includes" no início de cada script (um
   para cada classe).
  </para>
  <para>
   A função <function>spl_autoload_register</function> registra qualquer número de
   autocarregadores, permitindo que classes e interfaces sejam automaticamente carregadas
   se elas não ainda não tiverem sido definidas. Ao registrar autocarregadores, o PHP tem uma última chance
   de carregar classes e interfaces antes que falhem com um erro.
  </para>
  <para>
   Qualquer construção semelhante a uma classe pode ser carregada automaticamente da mesma maneira. Isso inclui classes,
   interfaces, traits e enumerações.
  </para>
  <caution>
   <para>
    Antes do PHP 8.0.0, era possível usar <function>__autoload</function>
    para fazer autocarregamento de classes e interfaces. No entanto, ela é uma alternativa menos
    flexível a <function>spl_autoload_register</function> e
    <function>__autoload</function> está descontinuada a partir do PHP 7.2.0, e removida
    a partir do PHP 8.0.0.
   </para>
  </caution>
  <note>
   <para>
    <function>spl_autoload_register</function> pode ser chamada várias vezes para
    registrar múltiplos autocarregadores. No entanto, lançar uma exceção em uma função de autocarregamento
    interromperá esse processo e não permitirá que outras funções de autocarregamento sejam
    executadas. Por esse motivo, o lançamento de exceções em funções de autocarregamento é altamente
    desencorajado.
   </para>
  </note>
  <para>
   <example>
    <title>Exemplo de autocarregamento</title>
    <para>
     Esse exemplo tenta carregar as classes <literal>MyClass1</literal>
     e <literal>MyClass2</literal> dos arquivos <filename>MyClass1.php</filename>
     e <filename>MyClass2.php</filename>, respectivamente.
    </para>
    <programlisting role="php" annotations="interactive">
<![CDATA[
<?php
spl_autoload_register(function ($class_name) {
    include $class_name . '.php';
});

$obj  = new MyClass1();
$obj2 = new MyClass2();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Outro exemplo de autocarregamento</title>
    <para>
     Este exemplo tenta carregar a interface <literal>ITest</literal>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

spl_autoload_register(function ($name) {
    var_dump($name);
});

class Foo implements ITest {
}

/*
string(5) "ITest"

Fatal error: Interface 'ITest' not found in ...
*/
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Usando o autocarregador do Composer</title>
    <simpara>
     &link.composer; gera um <literal>vendor/autoload.php</literal>
     que é configurado para carregar automaticamente pacotes gerenciados
     pelo Composer. Ao incluir este arquivo, esses pacotes podem ser usados sem
     nenhum trabalho adicional.
    </simpara>
    <programlisting role="php" annotations="interactive">
<![CDATA[
<?php
require __DIR__ . '/vendor/autoload.php';

$uuid = Ramsey\Uuid\Uuid::uuid7();

echo "Gerado novo UUID -> ", $uuid->toString(), "\n";
?>
]]>
    </programlisting>
   </example>
  </para>

  <simplesect role="seealso">
   &reftitle.seealso;
   <para>
    <simplelist>
     <member><function>unserialize</function></member>
     <member><link linkend="ini.unserialize-callback-func">unserialize_callback_func</link></member>
     <member><link linkend="ini.unserialize-max-depth">unserialize_max_depth</link></member>
     <member><function>spl_autoload_register</function></member>
     <member><function>spl_autoload</function></member>
     <member><function>__autoload</function></member>
    </simplelist>
   </para>
  </simplesect>

 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
