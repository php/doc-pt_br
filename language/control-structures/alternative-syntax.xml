<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a41057cbdf053fd8c3a3bec6f1bbf113ffec8e42 Maintainer: ae Status: ready --><!-- CREDITS: diegopires,fabioluciano,ae -->

<sect1 xml:id="control-structures.alternative-syntax"  xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Sintaxe Alternativa para estruturas de controle</title>
 <?phpdoc print-version-for="control-structures.alternative-syntax"?>
 <para>
  O PHP oferece uma sintaxe alternativa para algumas estruturas
  de controle; a saber, <literal>if</literal>,
  <literal>while</literal>, <literal>for</literal>,
  <literal>foreach</literal>, e <literal>switch</literal>.
  Em cada caso, basicamente a sintaxe alternativa é trocar
  a chave de abertura por dois pontos (:) e a chave de fechamento por
  <literal>endif;</literal>, <literal>endwhile;</literal>,
  <literal>endfor;</literal>, <literal>endforeach;</literal>, ou
  <literal>endswitch;</literal>, respectivamente.
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php if ($a == 5): ?>
A é igual a 5
<?php endif; ?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  No exemplo acima, o bloco HTML "A é igual a 5" está dentro de um
  <literal>if</literal> escrito na sintaxe alternativa.  O
  bloco HTML será exibido somente se <varname>$a</varname> for igual a 5.
 </simpara>
 <para>
  A sintaxe alternativa também se aplica ao <literal>else</literal> e
  <literal>elseif</literal>.  A seguir um exemplo de um
  <literal>if</literal> com <literal>elseif</literal> e
  <literal>else</literal> no formato alternativo:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
if ($a == 5):
    echo "a equals 5";
    echo "...";
elseif ($a == 6):
    echo "a equals 6";
    echo "!!!";
else:
    echo "a is neither 5 nor 6";
endif;
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <note>
  <para>
   Misturar a sintaxe no mesmo bloco de controle não é suportado.
  </para>
 </note>
 <warning>
  <para>
   Qualquer saída (inclusive espaços em branco) entre um <literal>switch</literal>
   e o primeiro <literal>case</literal> irá resultar em um erro de
   sintaxe. O exemplo abaixo é inválido:
  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php switch ($foo): ?>
    <?php case 1: ?>
    ...
<?php endswitch; ?>
]]>
   </programlisting>
  </informalexample>
  <para>
   Enquanto que este é válido, já que a quebra de linha depois do
   <literal>switch</literal> é considerado parte da tag de fechamento
   <literal>?&gt;</literal> e, portanto, nenhuma saída será enviada entre o
   <literal>switch</literal> e <literal>case</literal>:
  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php switch ($foo): ?>
<?php case 1: ?>
    ...
<?php endswitch; ?>
]]>
   </programlisting>
  </informalexample>
 </warning>
 <para>
  Veja mais sobre <link linkend="control-structures.while">while</link>,
  <link linkend="control-structures.for">for</link>, e <link
  linkend="control-structures.if">if</link> para outros exemplos.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
