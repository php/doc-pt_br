<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bbaf4fea6946bf6d0b67573d5f2f96c5a2c5d678 Maintainer: lhsazevedo Status: ready --><!-- CREDITS: diegopires,fabioluciano,geekcom,lhsazevedo -->

<sect1 xml:id="control-structures.elseif" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>elseif/else if</title>
 <?phpdoc print-version-for="elseif"?>
 <para>
  <literal>elseif</literal>, como o nome sugere, é uma combinação
  do <literal>if</literal> e <literal>else</literal>. Como o
  <literal>else</literal>, estende um <literal>if</literal>
  para executar instruções diferentes no caso da expressão
  <literal>if</literal> original ser avaliada como
  &false;.  Entretanto, diferentemente do
  <literal>else</literal>, executará uma expressão alternativa
  somente se a expressão condicional do <literal>elseif</literal>
  for avaliada como &true;. Por exemplo, o código
  a seguir exibirá <computeroutput>a é maior que
  b</computeroutput>, <computeroutput>a é igual a b</computeroutput>
  ou <computeroutput>a é menor que b</computeroutput>:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
if ($a > $b) {
    echo "a é maior que b";
} elseif ($a == $b) {
    echo "a é igual a b";
} else {
    echo "a é menor que b";
}
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  Pode haver vários <literal>elseif</literal>s dentro da mesma instrução
  <literal>if</literal>. A primeira expressão
  <literal>elseif</literal> (se houver) que retornar
  &true; será executada. No PHP, pode-se escrever
  <literal>else if</literal> (em duas palavras), e o comportamento será idêntico
  ao do <literal>elseif</literal> (em uma única palavra). O significado sintático
  é um pouco diferente (se você está familiarizado com C, mas, no final,
  ambos terão exatamente o mesmo comportamento.
 </simpara>
 <simpara>
  O <literal>elseif</literal> só é executado se o
  <literal>if</literal> precedente ou qualquer
  <literal>elseif</literal> for avaliado como
  &false;, e o <literal>elseif</literal>
  corrente for avaliado como
  &true;.
 </simpara>
 <note>
  <simpara>
   Note que o <literal>elseif</literal> e <literal>else if</literal>
   só serão considerados exatamente iguais se usados com chaves
   como no exemplo abaixo. Ao utilizar os dois pontos (:) para definir as
   condições de <literal>if</literal>/<literal>elseif</literal>, então o uso
   de <literal>elseif</literal> como uma única palavras se torna necessário, ou o PHP
   falhará com um erro de interpretação se <literal>else if</literal>
   estiver separado em duas palavras.
  </simpara>
 </note>
 <para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

/* Método Incorreto: */
if ($a > $b):
    echo $a." é maior que ".$b;
else if ($a == $b): // Não irá compilar.
    echo "A linha acima causa um erro de análise.";
endif;


/* Método Correto: */
if ($a > $b):
    echo $a." é maior que ".$b;
elseif ($a == $b): // Note a combinação das palavras.
    echo $a." é igual a ".$b;
else:
    echo $a." não é maior nem igual a ".$b;
endif;

?>
]]>
   </programlisting>
  </informalexample>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
