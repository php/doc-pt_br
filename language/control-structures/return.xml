<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a9a6224ca97531df0a4e4b9b16b59c3f2baf1b09 Maintainer: @lhsazevedo Status: ready --><!-- CREDITS: fabioluciano, geekcom, @lhsazevedo -->

<sect1 xml:id="function.return" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>return</title>
 <?phpdoc print-version-for="return"?>
 <simpara>
  A declaração <literal>return</literal> retorna o controle do programa para o módulo que o chamou.
  A execução continuará na expressão seguinte à invocação do módulo.
 </simpara>
 <simpara>
  Se chamada dentro de uma função, a declaração <literal>return</literal>
  terminará imediatamente sua execução, e
  retornará seus argumentos como valor à chamada da função.
  A declaração <literal>return</literal> também terminar a execução de
  uma declaração <function>eval</function> ou um arquivo de script.
 </simpara>
 <simpara>
  Se chamada no escopo global, a execução do script corrente
  é finalizada. Se o arquivo de script corrente for incluído
  ou requerido com as funções <function>include</function> ou  or <function>require</function>,
  o controle é passado de volta ao script que está chamando. Além disso, se
  o script corrente foi incluído com a função <function>include</function>, o
  valor informado ao <literal>return</literal> será retornado como
  o valor da chamada de <function>include</function>. Se um
  <literal>return</literal> for chamado de dentro do script principal,
  sua execução será finalizada. Se o script corrente for
  mencionado nas opções de configuração <link
  linkend="ini.auto-prepend-file">auto_prepend_file</link> ou <link
  linkend="ini.auto-append-file">auto_append_file</link>
  &php.ini;,
  a execução do script será finalizada.
 </simpara>
 <simpara>For more information, see <link
 linkend="functions.returning-values">Returning values</link>.
 </simpara>
 <para>
  <note>
   <simpara>
    Note que, como <literal>return</literal> é um construtor
    de linguagem e não uma função, os parênteses que envolvem seus
    argumentos não são exigidos e seu uso é desencorajado.
   </simpara>
  </note>
  <note>
   <simpara>
    Se nenhum parâmetro for informado, e os parênteses omitidos,
    &null; será
    retornado. Chamar um <literal>return</literal> com parênteses, mas
    sem argumentos resultará em um erro de interpretação.
   </simpara>
  </note>
 </para>

 <para>
  A partir do PHP 7.1.0, declarações return sem um argumento acionam <constant>E_COMPILE_ERROR</constant>,
  a não ser que o tipo de retorno seja <type>void</type>, nesse caso declarações return
  com um argumento acionam esse erro.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
