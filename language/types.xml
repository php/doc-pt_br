<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 19e8122137a1d42ed60f17fe2c0c2b69b0b2d16b Maintainer: ae Status: ready --><!-- CREDITS: ae,lcobucci,felipe,fabioluciano,lisaldo,gabrielsanva -->
<chapter xml:id="language.types" xmlns="http://docbook.org/ns/docbook">
 <title>Tipos</title>

 <sect1 xml:id="language.types.intro">
  <title>Introdução</title>

  <simpara>
   O PHP suporta dez tipos primitivos.
  </simpara>

  <para>
   Quatro tipos escalares:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>bool</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>int</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>float</type> (número de ponto flutuante)
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>string</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   Quatro tipos compostos:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>array</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>object</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>callable</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>iterable</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   E finalmente dois tipos especiais:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>resource</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>NULL</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <simpara>
   O tipo de uma variável geralmente não é definido pelo programador:
   isto é decidido em tempo de execução pelo PHP, dependendo do contexto no
   qual a variável é usada.
  </simpara>

  <note>
   <simpara>
    Para checar o tipo e valor de uma
    <link linkend="language.expressions">expressão</link>, utilize a função
    <function>var_dump</function>.
   </simpara>

   <para>
    Para ter uma representação legível de um tipo para depuração, use a função
    <function>gettype</function>. Para verificar por um certo tipo,
    <emphasis>não</emphasis> use <function>gettype</function>, mas sim as funções
    <literal>is_<replaceable>type</replaceable></literal>. Alguns
    exemplos:
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a_bool = TRUE;   // um booleano
$a_str  = "foo";  // uma string
$a_str2 = 'foo';  // uma string
$an_int = 12;     // um inteiro

echo gettype($a_bool); // mostra:  boolean
echo gettype($a_str);  // mostra:  string

// Se ele é um inteiro, incrementa-o com quatro
if (is_int($an_int)) {
    $an_int += 4;
}

// Se $bool é uma string, mostre-a
// (não imprime nada)
if (is_string($a_bool)) {
    echo "String: $a_bool";
}
?>
]]>
    </programlisting>
   </informalexample>
  </note>

  <simpara>
   Para forçar a conversão de uma variável para um certo tipo,
   <link linkend="language.types.typecasting">converta</link> a variável ou
   use a função <function>settype</function> nela.
  </simpara>

  <simpara>
   Note que uma variável pode ser avaliada com valores diferentes em certas
   situações, dependendo de qual tipo ela é no momento. Para mais informações,
   veja a seção <link linkend="language.types.type-juggling">Manipulação de tipos</link>.
   A <link linkend="types.comparisons">tabela de conversão de
   tipos</link> também pode ser útil, como mostra exemplos de comparações de
   vários tipos.
  </simpara>
 </sect1>

 &language.types.boolean;
 &language.types.integer;
 &language.types.float;
 &language.types.string;
 &language.types.numeric-strings;
 &language.types.array;
 &language.types.iterable;
 &language.types.object;
 &language.types.enumerations;
 &language.types.resource;
 &language.types.null;
 &language.types.callable;
 &language.types.declarations;
 &language.types.type-juggling;

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
