<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 77f5f3b3a8bbe1ad7727201c7603d1419dd7840f Maintainer: ae Status: ready --><!-- CREDITS: ae,diegopires,rogeriopradoj,fabioluciano,adiel,geekcom,leonardolara -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
   <titleabbrev>Introdução</titleabbrev>
   <title>O que é o PHP e o que ele pode fazer?</title>
  </info>

  <section xml:id="intro-whatis" annotations="chunk:false">
   <info><title>O que é o PHP?</title></info>
   <para>
    O <acronym>PHP</acronym> (um acrônimo recursivo para <emphasis>PHP: Hypertext
    Preprocessor</emphasis>) é uma linguagem de script open source de uso geral, muito
    utilizada, e especialmente adequada para o desenvolvimento web
    e que pode ser embutida dentro do HTML.
   </para>
   <para>
    Ótimo, mas o que isso significa? Por exemplo:
   </para>
   <para>
    <example>
     <info><title>Um exemplo introdutório</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE html>
<html>
    <head>
        <title>Exemplo</title>
    </head>
    <body>

        <?php
            echo "Olá, eu sou um script PHP!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Em vez de muitos comandos para mostrar HTML (como acontece com C ou Perl),
    as páginas PHP contém HTML em código mesclado que faz
    <replaceable>alguma coisa</replaceable> (neste caso, mostra <computeroutput>Olá, eu sou um script PHP!</computeroutput>).
    O código PHP é delimitado pelas <link
    linkend="language.basic-syntax.phpmode">instruções de processamento
    (tags) de início e fim <code>&lt;?php</code> e <code>?&gt;</code></link>
    que permitem entrar e sair do <quote>modo PHP</quote>.
   </para>
   <para>
    O que distingue o PHP de algo como o JavaScript no lado do cliente
    é que o código é executado no servidor, gerando o HTML que
    é então enviado para o navegador. O navegador recebe
    os resultados da execução desse script, mas não sabe
    qual era o código fonte. Um servidor web pode até mesmo ser configurado
    para processar todos os seus arquivos HTML com o PHP, e assim não haverá como
    os usuários dizerem que o PHP está sendo usado.
   </para>
   <para>
    A melhor coisa em usar o PHP é que ele é extremamente simples
    para um iniciante, mas oferece muitos recursos avançados para
    um programador profissional. Não tenha medo de ler a longa
    lista de recursos do PHP. Com o PHP, praticamente qualquer pessoa pode começar a trabalhar
    e escrever scripts simples imediatamente.
   </para>
   <para>
    Apesar do desenvolvimento do PHP ser focado nos scripts do lado do servidor,
    muito mais pode ser feito com ele. Leia mais sobre isso na seção
    <link linkend="intro-whatcando">O que o PHP pode fazer?</link>,
    ou vá diretamente para o <link linkend="tutorial">tutorial
    introdutório</link> para começar a aprender sobre programação para a web.
   </para>
  </section>

  <section xml:id="intro-whatcando" annotations="chunk:false">
   <info><title>O que o PHP pode fazer?</title></info>
   <para>
    Qualquer coisa. O PHP é focado principalmente nos scripts do lado do servidor,
    portanto ele pode fazer qualquer coisa que qualquer outro programa CGI pode fazer, como
    coletar dados de formulários, gerar páginas com conteúdo dinâmico ou
    enviar e receber cookies. Mas o PHP pode fazer muito mais.
   </para>
   <para>
    Existem duas áreas principais onde os scripts PHP são usados:
    <itemizedlist>
     <listitem>
      <simpara>
       Execução de script no servidor. Este é o mais amplamente usado
       e o principal campo de atuação do PHP. Três coisas são necessárias
       para fazer isso funcionar: o interpretador do PHP (CGI ou módulo do
       servidor), um servidor web e um navegador web. Todos esses podem
       ser executados em uma máquina local para apenas experimentar
       a programação com o PHP. Consulte a seção sobre
       <link linkend="install">instruções de instalação</link>
       para mais informações.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Execução de scripts na linha de comando. Um script PHP pode ser executado
       sem qualquer servidor ou navegador, apenas o
       interpretador PHP é necessário para ser usado desta forma.
       Esse tipo de uso é ideal para scripts normalmente executados
       usando o <command>cron</command> (em Unix ou macOS) ou o Agendador de Tarefas (no
       Windows). Esses scripts podem ser usados também para rotinas
       de processamento de texto simples. Veja a seção
       <link linkend="features.commandline">Utilizando o PHP em linha de comando</link>
       para mais informações.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    O PHP pode ser <link linkend="install">utilizado</link> na maioria dos sistemas operacionais, incluindo
    Linux, várias variantes do Unix (como HP-UX, Solaris e OpenBSD),
    Microsoft Windows, macOS, RISC OS e provavelmente outros.
    O PHP também tem suporte à maioria dos servidores web atualmente. Isso
    inclui o Apache, o IIS e muitos outros. E isso inclui qualquer
    servidor web que possa utilizar o binário FastCGI do PHP, como o lighttpd
    e o nginx. O PHP trabalha tanto como módulo quanto como um processador CGI.
   </para>
   <para>
    Com o PHP, portanto, os desenvolvedores têm liberdade para escolher um sistema
    operacional e um servidor web. Além disso, podem escolher entre
    utilizar programação estruturada ou programação orientada a
    objeto (OOP), ou ainda uma mistura das duas.
   </para>
   <para>
    O PHP não é limitado apenas a gerar HTML. As habilidades do PHP incluem
    gerar tipos de arquivos complexos, como imagens ou arquivos PDF, criptografar dados
    e enviar emails. Ele também pode gerar facilmente qualquer texto, como JSON
    ou XML. O PHP consegue gerar automaticamente esses arquivos, e gravá-los no
    sistema de arquivos, ao invés de apenas imprimir, possibilitando criar um cache no lado do servidor para
    conteúdo dinâmico.
   </para>
   <para>
    Uma das características mais fortes e mais significativas do PHP é seu
    suporte a uma <link linkend="refs.database">ampla variedade de banco de dados</link>.
    Escrever uma página web consultando um banco de dados é incrivelmente simples usando uma das
    extensões específicas de banco de dados (por exemplo, <link linkend="book.mysqli">mysql</link>),
    ou usando uma camada de abstração como o <link linkend="book.pdo">PDO</link> ou conectar
    a qualquer banco de dados que suporte o padrão "Open Database Connection" usando
    a extensão <link linkend="book.uodbc">ODBC</link>. Outros bancos de dados podem utilizar
    <link linkend="book.curl">cURL</link> ou <link linkend="book.sockets">sockets</link>,
    como o CouchDB.
   </para>
   <para>
    O PHP também tem suporte para comunicação com outros serviços utilizando protocolos
    como LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (no Windows) e
    incontáveis outros. Ele pode também abrir soquetes brutos de rede e
    interagir usando qualquer outro protocolo. O PHP também suporta o
    intercâmbio de dados complexos WDDX entre virtualmente todas as linguagens
    de programação para web. Falando de interconexão, o PHP implementa a
    instanciação de objetos Java e os utiliza transparentemente como
    objetos PHP.
   </para>
   <para>
    O PHP tem recursos úteis para <link linkend="refs.basic.text">processamento de texto</link>,
    incluindo expressões regulares compatíveis com Perl (<link linkend="book.pcre">PCRE</link>),
    e muitas outras extensões e ferramentas para <link linkend="refs.xml">analisar e acessar documentos XML</link>.
    O PHP padroniza todas as extensões XML a partir da base sólida da <link linkend="book.libxml">libxml2</link>,
    além de estender o conjunto de recursos adicionando suporte a <link linkend="book.simplexml">SimpleXML</link>,
    <link linkend="book.xmlreader">XMLReader</link> e <link linkend="book.xmlwriter">XMLWriter</link>.
   </para>
   <para>
    E existem muitas outras extensões interessantes, que são categorizadas tanto
    <link linkend="extensions">alfabeticamente</link> quanto por <link linkend="funcref">categoria</link>.
    E existem também as <link linkend="install.pecl.intro">extensões PECL</link> adicionais que podem, ou não, estar documentadas
    dentro do próprio manual do PHP, como a <link xlink:href="&url.xdebug;">XDebug</link>.
   </para>
   <para>
    Esta página não é suficiente para listar todos
    os recursos e benefícios que o PHP pode oferecer. Leia as
    seções sobre a <link linkend="install">instalação do
    PHP</link>, e veja a parte de <link linkend="funcref">referência das
    funções</link> para detalhes sobre as extensões
    mencionadas aqui.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
