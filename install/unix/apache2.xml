<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e51792efe0f103ec8724ad199524d7543610c978 Maintainer: ae Status: ready --><!-- CREDITS: ernani,narigone,ae,dtgfranca,leonardolara -->
<sect1 xml:id="install.unix.apache2" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Apache 2.0 em sistemas Unix</title>

 <para>
  Esta seção contém notas e dicas específicas para a instalação do PHP no Apache 2.x
  em sistemas Unix.
 </para>

 &warn.apache2.compat;

 <para>
  A <link xlink:href="&url.apache2.docs;">documentação do Apache</link>
  é a fonte de informação com maior autoridade sobre o servidor Apache 2.x.
  Mais informações sobre opções de instalação para o Apache podem ser encontradas
  lá.
 </para>

 <para>
  A versão mais recente do Servidor HTTP do Apache pode ser obtida do
  <link xlink:href="&url.apache;">site de download Apache</link>,
  e uma versão correspondente do PHP pode ser obtida dos locais mencionados anteriormente.
  Esse guia rápido cobre apenas o básico para iniciar o uso do Apache 2.x
  e do PHP. Para mais informações, leia a
  <link xlink:href="&url.apache2.docs;">documentação do Apache</link>.
  Os números de versão estão omitidos aqui, para garantir que
  as instruções não fiquem desatualizadas. Nos exemplos abaixo, 'NN' deve
  ser substituído com a versão específica do Apache utilizado.
 </para>

 <para>
  Atualmente há duas versões do Apache 2.x. - 2.4 e 2.2.
  Embora haja várias razões para escolher entre elas, 2.4 é a versão mais
  atual, e aquela recomendada, se essa opção estiver
  disponível. Entretanto, as instruções aqui funcionarão para
  ambas as versões, 2.4 ou 2.2. Importante notar que o Apache httpd 2.2 está no final de sua vida,
  e nenhum novo desenvolvimento ou correções serão realizados nele.
 </para>

 <orderedlist>
  <listitem>
   <para>
    Obtenha o Apache HTTP do endereço acima e
    descompacte:
   </para>

   <informalexample>
    <screen>
<![CDATA[
tar -xzf httpd-2.x.NN.tar.gz
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Da mesma forma, obtenha e descompacte o código-fonte do PHP:
   </para>

   <informalexample>
    <screen>
<![CDATA[
tar -xzf php-NN.tar.gz
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Compile e instale o Apache. Consulte a documentação de instalação do Apache para
    mais detalhes de compilação.
   </para>

   <informalexample>
    <screen>
<![CDATA[
cd httpd-2_x_NN
./configure --enable-so
make
make install
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Agora haverá um Apache 2.x.NN disponível em /usr/local/apache2,
    configurado com suporte a módulos carregáveis e o MPM prefork padrão.
    Para testar a instalação, utilize o procedimento usual de inicialização
    do servidor Apache. Por exemplo:

    <informalexample>
     <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
     </screen>
    </informalexample>

    e depois pare o servidor para configurar o PHP:

    <informalexample>
     <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl stop
]]>
     </screen>
    </informalexample>
   </para>
  </listitem>

  <listitem>
   <para>
    Agora configure e compile o PHP. Aqui pode-se personalizar o PHP
    com várias opções como, por exemplo, quais extensões estarão disponíveis. Execute
    <command>'./configure --help'</command> para uma lista de opções disponíveis. Em nosso exemplo,
    iremos configurar apenas com suporte ao Apache 2 e MySQL.
   </para>

   <para>
    Se o Apache foi compilado a partir do código-fonte como descrito acima, os exemplos abaixo terão
    caminhos coincidentes do <command>apxs</command>, mas se foi instalado de outra forma, o caminho
    para o <command>apxs</command> precisará ser ajustado. Observe que algumas distribuições podem renomear
    <command>apxs</command> para <command>apxs2</command>.
   </para>

   <informalexample>
    <screen>
<![CDATA[
cd ../php-NN
./configure --with-apxs2=/usr/local/apache2/bin/apxs --with-pdo-mysql
make
make install
]]>
    </screen>
   </informalexample>

   <para>
    Se for decidido modificar as configurações depois da instalação,
    os comandos <command>configure</command>, <command>make</command>
    e <command>make install</command> precisarão ser executados novamente.
    Só será necessário reiniciar o Apache para que o novo módulo seja carregado.
    Uma recompilação do Apache não será necessária.
   </para>

   <para>
    Note que, por padrão, <command>make install</command> também instalará o
    <link xlink:href="&url.php.pear;">PEAR</link>,
    várias ferramentas do PHP como <link linkend="install.pecl.phpize">phpize</link>,
    o PHP CLI, entre outros.
   </para>
  </listitem>

  <listitem>
   <para>
    Configure o <filename>php.ini</filename>:
   </para>

   <informalexample>
    <screen>
<![CDATA[
cp php.ini-development /usr/local/lib/php.ini
]]>
    </screen>
   </informalexample>

   <para>
    Pode-se editar o arquivo <literal>.ini</literal> para definir opções do PHP. Se desejar ter
    um <filename>php.ini</filename> em outra localização,
    utilize <literal>--with-config-file-path=/algum/caminho</literal> no passo 5.
   </para>

   <para>
    Se for preferível utilizar o <filename>php.ini-production</filename>, leia atentamente
    a lista de modificações desse arquivo, já que ele afeta o comportamento do PHP.
   </para>
  </listitem>

  <listitem>
   <para>
    Edite o <filename>httpd.conf</filename> para carregar o módulo do PHP. O caminho à direita
    da instrução <literal>LoadModule</literal> precisa apontar para o caminho do módulo do PHP
    no sistema. O <command>make install</command> acima pode ter feito isso
    automaticamente, mas é bom confirmar.
   </para>

   <informalexample>
    <para>
     No PHP 8:
    </para>

    <programlisting role="apache-conf">
<![CDATA[
LoadModule php_module modules/libphp.so
]]>
    </programlisting>
   </informalexample>

   <informalexample>
    <para>
     No PHP 7:
    </para>

    <programlisting role="apache-conf">
<![CDATA[
LoadModule php7_module modules/libphp7.so
]]>
    </programlisting>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Configure o Apache para interpretar certas extensões de arquivos como PHP. Por exemplo, configurar
    o Apache para interpretar arquivos <literal>.php</literal> como scripts PHP. Em vez de utilizar apenas a diretiva <literal>AddType</literal>
    do Apache, é recomendado evitar uploads potencialmente perigosos e nomes de
    arquivos como <filename>exploit.php.jpg</filename> que possam ser executados como scripts PHP. Nesse
    exemplo, pode-se ter quaisquer extensões interpretadas como PHP, simplesmente adicionando-as.
    Adicionaremos <literal>.php</literal> como demonstração.
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
    </programlisting>
   </informalexample>

   <para>
    Alternativamente, para permitir que arquivos <literal>.php</literal>, <literal>.php2</literal>,
    <literal>.php3</literal>, <literal>.php4</literal>, <literal>.php5</literal>,
    <literal>.php6</literal> e <literal>.phtml</literal> sejam
    executados como PHP, mas nenhum outro, seria desta forma:
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.ph(p[2-6]?|tml)$">
    SetHandler application/x-httpd-php
</FilesMatch>
]]>
    </programlisting>
   </informalexample>

   <para>
    Para permitir que arquivos <literal>.phps</literal> sejam interpretados pelo filtro de fontes do PHP e
    exibidos como código fonte destacado, utilize isto:
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
<FilesMatch "\.phps$">
    SetHandler application/x-httpd-php-source
</FilesMatch>
]]>
    </programlisting>
   </informalexample>

   <para>
    <literal>mod_rewrite</literal> pode ser utilizado para permitir que qualquer arquivo <literal>.php</literal> seja exibido
    como código-fonte destacado, sem precisar ser renomeado ou copiado
    para um arquivo <literal>.phps</literal>:
   </para>

   <informalexample>
    <programlisting role="apache-conf">
<![CDATA[
RewriteEngine On
RewriteRule (.*\.php)s$ $1 [H=application/x-httpd-php-source]
]]>
    </programlisting>
   </informalexample>

   <para>
    O filtro de fontes PHP não deve ser ativado em ambiente de produção, onde
    pode expor informações confidenciais ou sensíveis incorporadas no
    código-fonte.
   </para>
  </listitem>

  <listitem>
   <para>
    Depois, utilize o procedimento normal de iniciar o servidor Apache, por exemplo:
   </para>

   <informalexample>
    <screen>
<![CDATA[
/usr/local/apache2/bin/apachectl start
]]>
    </screen>
   </informalexample>

   <para>ou</para>

   <informalexample>
    <screen>
<![CDATA[
service httpd restart
]]>
    </screen>
   </informalexample>
  </listitem>
 </orderedlist>

 <para>
  Seguindo os passos acima, o servidor web Apache2 será executado com
  suporte ao PHP como um módulo <literal>SAPI</literal>. Existem muitas outras
  opções de configuração disponíveis para o Apache e para o PHP. Para mais
  informações execute <command>./configure --help</command> no diretório
  do código-fonte correspondente.
 </para>

 <para>
  O Apache pode ser construído com suporte a multi-tarefas através da seleção
  do MPM <filename>worker</filename>, em vez do padrão
  MPM <filename>prefork</filename>. Isso é possível
  acrescentado-se a seguinte opção ao argumento passado para <command>./configure</command> no
  passo 3 acima:
 </para>

 <informalexample>
  <screen>
<![CDATA[
--with-mpm=worker
]]>
  </screen>
 </informalexample>

 <para>
  Isto não deve ser feito sem conhecer as consequências
  desta decisão, ou pelo menos ter uma boa noção de
  suas implicações. A documentação do Apache
  sobre <link xlink:href="&url.apache2.mpm;">módulos MPM</link>
  discute essas questões com muito mais detalhes.
 </para>

 <note>
  <para>
   A seção de <link linkend="faq.installation.apache.multiviews">Perguntas Frequentes
   do Apache MultiViews</link> discute o uso de MultiViews com o PHP.
  </para>
 </note>

 <note>
  <para>
   Para construir uma versão multi-tarefa do Apache, o sistema de destino precisa suportar threads.
   Neste caso, o PHP também deve ser construído
   com o Zend Thread Safety (ZTS). Nesta configuração, nem todas as extensões estarão disponíveis.
   A configuração recomendada é construir o Apache com o módulo
   MPM <filename>prefork</filename> padrão.
  </para>
 </note>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
